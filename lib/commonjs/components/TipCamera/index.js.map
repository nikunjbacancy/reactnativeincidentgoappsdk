{"version":3,"names":["_api","require","_assets","_actions","_selectors","_isEmpty","_interopRequireDefault","_react","_interopRequireWildcard","_reactIntl","_reactNativeCamera","_reactNativeRootToast","_types","_firebase","_hooks","_location","_video","_constants","_messages","_PlayButton","_styles","_types2","_VideoList","_VideoTracker","_navigation","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","TipCamera","forwardRef","badges","tipCameraMode","TipCameraMode","camera","incidentVideos","isFocused","isVideoPaused","isRecordEnabled","isChatDisabled","onTimeChange","onRecordStarted","onRecordFinished","onPhonePress","onChatPress","ref","_incidentVideos$video","_incidentVideos$2","myRef","useRef","formatMessage","useIntl","recordedTime","cameraType","setCameraType","useState","CameraType","back","flashMode","setFlashMode","FlashMode","off","recordedProgress","setRecordedProgress","isRecording","setIsRecording","cameraMode","useSelector","makeSelectTipCameraMode","configs","makeSelectConfigs","videoIndex","makeSelectTipVideoIndex","videoLoading","setVideoLoading","videoSeconds","setVideoSeconds","duration","setDuration","trackerY","setTrackerY","TRACKER_WIDTH_HALF","shouldPauseVideo","setShouldPauseVideo","videoUrl","setVideoUrl","url","setTipCameraModeAction","useAction","setTipCameraMode","setTipCameraVideoIndexAction","setTipCameraVideoIndex","handleTimeChange","useCallback","time","current","maxRecordDuration","handleRecordFinished","filePath","Toast","show","messages","canceled","position","positions","CENTER","deleteLocalVideo","startTimer","stopTimer","recordSeconds","useTimerInterval","interval","increment","expire","onExpire","_myRef$current","stopRecording","useEffect","_incidentVideos$video2","_incidentVideos$","_incidentVideos$video3","onFlipButtonClick","currentCameraType","front","logEvent","LogEvent","TapCamera","onFlashButtonClick","isFlashOff","isCameraBack","currentFlashMode","on","TapFlash","mode","startCameraRecord","options","quality","RNCamera","Constants","VideoQuality","codec","maxDuration","data","recordAsync","logger","debug","uri","error","warn","stopCameraRecord","record","console","log","getCachedFinePosition","TapStopRecord","TapRecord","noLocation","toggleVideoPause","onVideoLoaded","onVideoProgress","video","step","THUMBNAIL_WIDTH","currentTime","THUMBNAIL_MARGIN_RIGHT","onVideoEnd","length","nextIndex","onVideoSelected","index","closeVideoPlayer","onLogoPressed","NavigatorService","createElement","Container","Camera","node","captureAudio","type","androidCameraPermissionOptions","title","permissionWarning","message","permissionCameraBody","buttonPositive","ok","buttonNegative","cancel","androidRecordAudioPermissionOptions","permissionRecordAudioBody","CameraFlashButton","onPress","isDisabled","image","images","icFlash","icFlashActive","CameraFlipButton","icFlip","icFlipActive","VideoContainer","Fragment","VideoPlayer","onLoadStart","source","paused","onLoad","onProgress","repeat","onEnd","resizeMode","VideoLoading","isPlaying","videos","CloseButton","icClose","TouchableLogo","Logo","Timer","BottomControls","PhoneButton","icPhoneCall","RecordControls","disabled","RecordStop","RecordStart","CircleProgress","progress","size","borderWidth","fill","ChatContainer","ChatButton","icChat","isEmpty","StyledBadge","_default","exports","memo"],"sources":["index.tsx"],"sourcesContent":["import { logger } from '../../api';\nimport { images } from '../../assets';\nimport {\n  setTipCameraMode,\n  setTipCameraVideoIndex,\n} from '../../containers/app/actions';\nimport {\n  makeSelectConfigs,\n  makeSelectTipCameraMode,\n  makeSelectTipVideoIndex,\n} from '../../containers/app/selectors';\nimport { Id, IncidentVideo } from 'incident-code-core';\nimport isEmpty from 'lodash/isEmpty';\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useIntl } from 'react-intl';\nimport { RecordOptions, RecordResponse, RNCamera } from 'react-native-camera';\nimport Toast from 'react-native-root-toast';\nimport { OnLoadData } from 'react-native-video';\nimport { LogEvent } from '../../types';\nimport { logEvent } from '../../utils/firebase';\nimport { useAction, useSelector, useTimerInterval } from '../../utils/hooks';\nimport { getCachedFinePosition } from '../../utils/location';\nimport { deleteLocalVideo } from '../../utils/video';\nimport {\n  THUMBNAIL_MARGIN_RIGHT,\n  THUMBNAIL_WIDTH,\n  TRACKER_WIDTH_HALF,\n} from './constants';\nimport messages from './messages';\nimport PlayButton from './PlayButton';\nimport {\n  BottomControls,\n  Camera,\n  CameraFlashButton,\n  CameraFlipButton,\n  ChatButton,\n  ChatContainer,\n  CircleProgress,\n  CloseButton,\n  Container,\n  TouchableLogo,\n  Logo,\n  PhoneButton,\n  RecordControls,\n  RecordStart,\n  RecordStop,\n  StyledBadge,\n  Timer,\n  VideoContainer,\n  VideoLoading,\n  VideoPlayer,\n} from './styles';\nimport { CameraType, FlashMode, TipCameraMode } from './types';\nimport VideoList from './VideoList';\nimport VideoTracker from './VideoTracker';\nimport NavigatorService from '../../utils/navigation';\n\ninterface VideoProgress {\n  currentTime: number;\n  playableDuration: number;\n  seekableDuration: number;\n}\n\nexport type TipProps = {\n  tipCameraMode?: TipCameraMode;\n  incidentVideos: IncidentVideo[];\n  isFocused?: boolean;\n  isVideoPaused?: boolean;\n  isRecordEnabled?: boolean;\n  isChatDisabled?: boolean;\n  onTimeChange?(time: number): void;\n  onRecordStarted?(): void;\n  onRecordFinished(uri: string): void;\n  onPhonePress(): void;\n  onChatPress(): void;\n  badges?: Id[];\n}\n\nconst TipCamera = forwardRef((\n  { badges,\n    tipCameraMode = TipCameraMode.camera,\n    incidentVideos,\n    isFocused = true,\n    isVideoPaused,\n    isRecordEnabled,\n    isChatDisabled,\n    onTimeChange,\n    onRecordStarted,\n    onRecordFinished,\n    onPhonePress,\n    onChatPress }: TipProps,\n  ref: React.ForwardedRef<RNCamera>,\n): React.ReactElement => {\n\n  // const myRef = useRef<RNCamera>(ref);\n  let myRef = useRef<RNCamera | null>(null);\n  // console.log(\"myRef===>\", myRef)\n\n  const { formatMessage } = useIntl();\n\n  // camera\n  const recordedTime = useRef(0);\n\n  const [cameraType, setCameraType] = useState(CameraType.back);\n  const [flashMode, setFlashMode] = useState(FlashMode.off);\n  const [recordedProgress, setRecordedProgress] = useState(0);\n  const [isRecording, setIsRecording] = useState(false);\n\n  // video\n  const cameraMode = useSelector(makeSelectTipCameraMode());\n  const configs = useSelector(makeSelectConfigs());\n  const videoIndex = useSelector(makeSelectTipVideoIndex());\n\n  const [videoLoading, setVideoLoading] = useState(true);\n  const [videoSeconds, setVideoSeconds] = useState(0);\n  const [duration, setDuration] = useState(1);\n  const [trackerY, setTrackerY] = useState(-TRACKER_WIDTH_HALF);\n  const [shouldPauseVideo, setShouldPauseVideo] = useState(false);\n  const [videoUrl, setVideoUrl] = useState(incidentVideos[videoIndex]?.url);\n\n  const setTipCameraModeAction = useAction(setTipCameraMode);\n  const setTipCameraVideoIndexAction = useAction(setTipCameraVideoIndex);\n\n  const handleTimeChange = useCallback(\n    (time: number) => {\n      onTimeChange && onTimeChange(time);\n      recordedTime.current = time;\n      setRecordedProgress(time / configs.maxRecordDuration);\n    },\n    [configs],\n  );\n\n  const handleRecordFinished = useCallback((filePath: string) => {\n    if (recordedTime.current < 2) {\n      Toast.show(formatMessage(messages.canceled), {\n        position: Toast.positions.CENTER,\n      });\n\n      return deleteLocalVideo(filePath);\n    }\n    recordedTime.current = 0;\n    onRecordFinished(filePath);\n    return\n  }, []);\n\n  const { startTimer, stopTimer, time: recordSeconds } = useTimerInterval({\n    interval: 500,\n    increment: 0.5,\n    onTimeChange: handleTimeChange,\n    expire: configs.maxRecordDuration,\n    onExpire: () => myRef?.current?.stopRecording()\n  });\n\n  useEffect(() => {\n\n  }, [ref]);\n\n  useEffect(() => {\n    setTipCameraModeAction(tipCameraMode);\n  }, [tipCameraMode]);\n\n  useEffect(() => {\n    if (!isFocused) {\n      setFlashMode(FlashMode.off);\n      setCameraType(CameraType.back);\n    }\n  }, [isFocused]);\n\n  useEffect(() => {\n    if (isRecording) {\n      startTimer();\n    } else {\n      stopTimer();\n    }\n  }, [isRecording]);\n\n  useEffect(() => {\n    setShouldPauseVideo(!!isVideoPaused);\n  }, [isVideoPaused]);\n\n  useEffect(() => {\n    setVideoUrl(incidentVideos[videoIndex]?.url);\n  }, [videoIndex]);\n\n  useEffect(() => {\n    if (incidentVideos[0]?.url) {\n      setVideoUrl(incidentVideos[videoIndex]?.url);\n    }\n  }, [incidentVideos[0]?.url]);\n\n  const onFlipButtonClick = useCallback(() => {\n    if (isRecording) return;\n\n    const currentCameraType =\n      cameraType === CameraType.back ? CameraType.front : CameraType.back;\n\n    logEvent(LogEvent.TapCamera, { cameraType });\n\n    setFlashMode(FlashMode.off);\n    setCameraType(currentCameraType);\n  }, [isRecording, cameraType]);\n\n  const onFlashButtonClick = useCallback(() => {\n    if (isRecording) return;\n    const isFlashOff = flashMode === FlashMode.off;\n    const isCameraBack = cameraType === CameraType.back;\n    const currentFlashMode =\n      isFlashOff && isCameraBack ? FlashMode.on : FlashMode.off;\n\n    logEvent(LogEvent.TapFlash, {\n      mode: currentFlashMode,\n    });\n\n    setFlashMode(currentFlashMode);\n  }, [isRecording, flashMode, cameraType]);\n\n  const startCameraRecord = useCallback(\n    async (camera: RNCamera) => {\n      try {\n        const options: RecordOptions = {\n          quality: RNCamera.Constants.VideoQuality['480p'],\n          codec: 'H264',\n          maxDuration: configs.maxRecordDuration,\n        };\n        setIsRecording(true);\n        const data: RecordResponse = await camera.recordAsync(options);\n        logger.debug('Recorder', 'Recorded', data);\n        await handleRecordFinished(data.uri);\n      } catch (error) {\n        logger.warn('Recorder', 'Record Failed', error);\n      } finally {\n        setIsRecording(false);\n      }\n    },\n    [configs],\n  );\n\n  const stopCameraRecord = useCallback((camera: RNCamera) => {\n    camera.stopRecording();\n    setRecordedProgress(0);\n  }, []);\n\n  const record = useCallback(async () => {\n    onRecordStarted?.();\n    setTipCameraModeAction(TipCameraMode.camera);\n    setTrackerY(-TRACKER_WIDTH_HALF);\n    setVideoSeconds(0);\n    setRecordedProgress(0);\n    console.log(\"!myRef?.current\", !myRef?.current)\n    if (!myRef?.current) return;\n    try {\n      await getCachedFinePosition();\n      if (isRecording) {\n        logEvent(LogEvent.TapStopRecord);\n        stopCameraRecord(myRef?.current);\n      } else {\n        logEvent(LogEvent.TapRecord);\n        await startCameraRecord(myRef?.current);\n      }\n    } catch (error) {\n      Toast.show(formatMessage(messages.noLocation), {\n        position: Toast.positions.CENTER,\n      });\n      stopCameraRecord(myRef?.current);\n    }\n  }, [onRecordStarted, isRecording]);\n\n  // video\n  const toggleVideoPause = useCallback(() => {\n    setShouldPauseVideo(!shouldPauseVideo);\n  }, [shouldPauseVideo]);\n\n  const onVideoLoaded = useCallback((data: OnLoadData) => {\n    setVideoLoading(false);\n    setDuration(data.duration);\n  }, []);\n\n  const onVideoProgress = useCallback(\n    (video: VideoProgress) => {\n      const step = THUMBNAIL_WIDTH / duration;\n      setTrackerY(\n        step * video.currentTime +\n        (THUMBNAIL_WIDTH + THUMBNAIL_MARGIN_RIGHT) * videoIndex -\n        TRACKER_WIDTH_HALF,\n      );\n      setVideoSeconds(video.currentTime);\n    },\n    [videoIndex, duration],\n  );\n\n  const onVideoEnd = useCallback(() => {\n    if (incidentVideos.length === 1) {\n      setVideoSeconds(0);\n      setTipCameraVideoIndexAction(0);\n      setTrackerY(-TRACKER_WIDTH_HALF);\n      setShouldPauseVideo(false);\n    } else {\n      const nextIndex = (videoIndex + 1) % incidentVideos.length;\n      setTipCameraVideoIndexAction(nextIndex);\n      setVideoSeconds(0);\n      setTrackerY(\n        (THUMBNAIL_WIDTH + THUMBNAIL_MARGIN_RIGHT) * nextIndex -\n        TRACKER_WIDTH_HALF,\n      );\n      setVideoUrl(incidentVideos[nextIndex].url);\n    }\n  }, [incidentVideos, videoIndex]);\n\n  const onVideoSelected = useCallback(\n    (index: number) => {\n      if (index !== videoIndex) {\n        setTipCameraVideoIndexAction(index);\n        setVideoSeconds(0);\n        setTrackerY(\n          (THUMBNAIL_WIDTH + THUMBNAIL_MARGIN_RIGHT) * index -\n          TRACKER_WIDTH_HALF,\n        );\n        setVideoUrl(incidentVideos[index].url);\n      }\n    },\n    [incidentVideos, videoIndex],\n  );\n\n  const closeVideoPlayer = useCallback(() => {\n    setTipCameraModeAction(TipCameraMode.camera);\n  }, []);\n\n  const onLogoPressed = () => {\n    NavigatorService.back();\n  }\n\n  return (\n    <Container>\n      {cameraMode === TipCameraMode.camera ? (\n        <Camera\n          // ref={ref}\n          ref={(node : any) => {\n            myRef.current = node;\n            if (typeof ref === 'function') {\n              ref(node);\n            } else if (ref) {\n              ref.current = node;\n            }\n          }}\n          captureAudio\n          type={cameraType}\n          flashMode={flashMode}\n          androidCameraPermissionOptions={{\n            title: formatMessage(messages.permissionWarning),\n            message: formatMessage(messages.permissionCameraBody),\n            buttonPositive: formatMessage(messages.ok),\n            buttonNegative: formatMessage(messages.cancel),\n          }}\n          androidRecordAudioPermissionOptions={{\n            title: formatMessage(messages.permissionWarning),\n            message: formatMessage(messages.permissionRecordAudioBody),\n            buttonPositive: formatMessage(messages.ok),\n            buttonNegative: formatMessage(messages.cancel),\n          }}\n        >\n          <VideoList incidentVideos={incidentVideos} />\n          <CameraFlashButton\n            onPress={onFlashButtonClick}\n            isDisabled={isRecording}\n            image={\n              flashMode === FlashMode.off\n                ? images.icFlash()\n                : images.icFlashActive()\n            }\n          />\n          <CameraFlipButton\n            onPress={onFlipButtonClick}\n            isDisabled={isRecording}\n            image={\n              cameraType === CameraType.back\n                ? images.icFlip()\n                : images.icFlipActive()\n            }\n          />\n        </Camera>\n      ) : (\n        <VideoContainer onPress={toggleVideoPause}>\n          <>\n            <VideoPlayer\n              onLoadStart={() => setVideoLoading(true)}\n              source={{ uri: videoUrl }}\n              paused={shouldPauseVideo}\n              onLoad={onVideoLoaded}\n              onProgress={onVideoProgress}\n              repeat={incidentVideos.length === 1}\n              onEnd={onVideoEnd}\n              resizeMode=\"cover\"\n            />\n            {videoLoading && <VideoLoading />}\n            <PlayButton isPlaying={!shouldPauseVideo} />\n            <VideoTracker\n              trackerY={trackerY}\n              videoIndex={videoIndex}\n              videos={incidentVideos}\n              onVideoSelected={onVideoSelected}\n            />\n            <CloseButton source={images.icClose()} onPress={closeVideoPlayer} />\n          </>\n        </VideoContainer>\n      )}\n\n      <TouchableLogo onPress={onLogoPressed}>\n        <Logo />\n      </TouchableLogo>\n\n      <Timer\n        isRecording={isRecording}\n        recordedTime={recordSeconds || videoSeconds}\n      />\n      <BottomControls>\n        <PhoneButton\n          onPress={onPhonePress}\n          isDisabled={isRecording}\n          image={images.icPhoneCall()}\n        />\n        <RecordControls disabled={!isRecordEnabled} onPress={record}>\n          {isRecording ? (\n            <RecordStop />\n          ) : (\n            <RecordStart disabled={!isRecordEnabled} />\n          )}\n          {isRecording && (\n            <CircleProgress\n              progress={recordedProgress}\n              size={74}\n              borderWidth={0}\n              fill={\"#00000000\"}\n            />\n          )}\n        </RecordControls>\n        <ChatContainer>\n          <ChatButton\n            onPress={onChatPress}\n            isDisabled={isRecording || isChatDisabled}\n            image={images.icChat()}\n          />\n          {!isEmpty(badges) && <StyledBadge length={badges?.length} />}\n        </ChatContainer>\n      </BottomControls>\n    </Container>\n  );\n});\n\nexport default memo(TipCamera);\n"],"mappings":"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","ignoreList":[]}