{"version":3,"names":["api","_interopRequireWildcard","require","_effects","_actions","_constants","_backgroundGeolocation","_reactNativeRootToast","_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","updateLocationTrackData","payload","user","error","errorMessage","Error","message","Toast","show","position","positions","CENTER","duration","updateGeoStatus","updateGeoCredStatus","getAllGeofences","console","log","response","getAllUserGeofences","JSON","stringify","data","regionArray","locations","map","locationObject","regions","regionObject","location_id","location_name","name","push","put","getAllGeofenceSuccess","insertAllGeofences","getAllGeofenceFailure","setSiteKeyLocation","setSiteKeyStatus","getAllGeofenceRequest","userId","locationTrackSaga","takeLatest","LOCATION_TRACKING_REQUEST","GEO_STATUS_REQUEST","GET_ALL_GEOFENCS_REQUEST","SET_SITE_KEY_LOCATION_REQUEST"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * NotificationScreen saga\n *\n */\n\nimport * as api from '../../api';\nimport { call, takeLatest, put } from 'redux-saga/effects';\nimport { getAllGeofenceFailure, getAllGeofenceSuccess, getAllGeofenceRequest } from './actions';\nimport { LOCATION_TRACKING_REQUEST, GEO_STATUS_REQUEST, GET_ALL_GEOFENCS_REQUEST, SET_SITE_KEY_LOCATION_REQUEST } from './constants';\nimport { GeoStatusRequestAction, LocationTrackRequestAction } from './types';\nimport { insertAllGeofences } from './backgroundGeolocation';\n\n\nimport Toast from 'react-native-root-toast';\n\n/**\n * Saga function to update location track data.\n * @param payload - The payload containing the location track data.\n */\nexport function* updateLocationTrackData({ payload }: LocationTrackRequestAction) {\n  try {\n    yield call(api.user.updateLocationTrackData, payload);\n  } catch (error) {\n    const errorMessage = (error instanceof Error) ? error.message : 'An unknown error occurred';\n    Toast.show(errorMessage, {\n      position: Toast.positions.CENTER,\n      duration: 3000\n    });\n  }\n}\n\n/**\n * Saga function to update geo status.\n * @param payload - The payload containing the geo status data.\n */\nexport function* updateGeoStatus({ payload }: GeoStatusRequestAction) {\n  try {\n    yield call(api.user.updateGeoCredStatus, payload);\n  } catch (error) {\n    const errorMessage = (error instanceof Error) ? error.message : 'An unknown error occurred';\n    Toast.show(errorMessage, {\n      position: Toast.positions.CENTER,\n      duration: 3000\n    });\n  }\n}\n\n/**\n * Saga function to get all geofences.\n * @param payload - The payload containing the geofence data.\n */\nexport function* getAllGeofences({ payload }: LocationTrackRequestAction) {\n  console.log(\"getAllGeofences HIT\")\n  try {\n    const response = yield call(api.user.getAllUserGeofences, payload);\n    console.log(\"get all geofences response ===> \",JSON.stringify(response.data))\n    const regionArray: any[] = []\n    response.data.locations.map((locationObject: any) => {\n      if (locationObject.regions != null) {\n        locationObject.regions.map((regionObject: any) => {\n          regionObject.location_id = locationObject.location_id\n          regionObject.location_name = locationObject.name\n          regionArray.push(regionObject)\n        })\n      }\n    })\n    yield put(getAllGeofenceSuccess(response.data));\n    console.log(\"regionArray ====>\",regionArray)\n    insertAllGeofences(regionArray, response.data)\n  } catch (error) {\n    yield put(getAllGeofenceFailure(error));\n  }\n}\n\n/**\n * Saga function to set site key location.\n * @param payload - The payload containing the site key location data.\n */\nexport function* setSiteKeyLocation({ payload }: GeoStatusRequestAction) {\n  try {\n    yield call(api.user.setSiteKeyStatus, payload);\n    yield put(getAllGeofenceRequest(payload.userId));\n  } catch (error) {\n    // console.log(\"setSiteKeyStatus error ===>\", error)\n    const errorMessage = (error instanceof Error) ? error.message : 'An unknown error occurred';\n    Toast.show(errorMessage, {\n      position: Toast.positions.CENTER,\n    });\n  }\n}\n\n/**\n * Root saga function for location tracking.\n */\nexport default function* locationTrackSaga() {\n  yield takeLatest(LOCATION_TRACKING_REQUEST, updateLocationTrackData);\n  yield takeLatest(GEO_STATUS_REQUEST, updateGeoStatus);\n  yield takeLatest(GET_ALL_GEOFENCS_REQUEST, getAllGeofences);\n  yield takeLatest(SET_SITE_KEY_LOCATION_REQUEST, setSiteKeyLocation);\n}\n"],"mappings":";;;;;;;;;;AAMA,IAAAA,GAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,QAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AAEA,IAAAI,sBAAA,GAAAJ,OAAA;AAGA,IAAAK,qBAAA,GAAAC,sBAAA,CAAAN,OAAA;AAA4C,SAAAM,uBAAAC,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,yBAAAH,CAAA,6BAAAI,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAD,wBAAA,YAAAA,CAAAH,CAAA,WAAAA,CAAA,GAAAM,CAAA,GAAAD,CAAA,KAAAL,CAAA;AAAA,SAAAR,wBAAAQ,CAAA,EAAAK,CAAA,SAAAA,CAAA,IAAAL,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAE,OAAA,EAAAF,CAAA,QAAAM,CAAA,GAAAH,wBAAA,CAAAE,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAC,GAAA,CAAAP,CAAA,UAAAM,CAAA,CAAAE,GAAA,CAAAR,CAAA,OAAAS,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAf,CAAA,oBAAAe,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAe,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAd,CAAA,EAAAe,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAf,CAAA,CAAAe,CAAA,YAAAN,CAAA,CAAAP,OAAA,GAAAF,CAAA,EAAAM,CAAA,IAAAA,CAAA,CAAAa,GAAA,CAAAnB,CAAA,EAAAS,CAAA,GAAAA,CAAA;AAd5C;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;AACA;AACO,UAAUW,uBAAuBA,CAAC;EAAEC;AAAoC,CAAC,EAAE;EAChF,IAAI;IACF,MAAM,IAAAJ,aAAI,EAAC1B,GAAG,CAAC+B,IAAI,CAACF,uBAAuB,EAAEC,OAAO,CAAC;EACvD,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMC,YAAY,GAAID,KAAK,YAAYE,KAAK,GAAIF,KAAK,CAACG,OAAO,GAAG,2BAA2B;IAC3FC,6BAAK,CAACC,IAAI,CAACJ,YAAY,EAAE;MACvBK,QAAQ,EAAEF,6BAAK,CAACG,SAAS,CAACC,MAAM;MAChCC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;AACA;AACO,UAAUC,eAAeA,CAAC;EAAEZ;AAAgC,CAAC,EAAE;EACpE,IAAI;IACF,MAAM,IAAAJ,aAAI,EAAC1B,GAAG,CAAC+B,IAAI,CAACY,mBAAmB,EAAEb,OAAO,CAAC;EACnD,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMC,YAAY,GAAID,KAAK,YAAYE,KAAK,GAAIF,KAAK,CAACG,OAAO,GAAG,2BAA2B;IAC3FC,6BAAK,CAACC,IAAI,CAACJ,YAAY,EAAE;MACvBK,QAAQ,EAAEF,6BAAK,CAACG,SAAS,CAACC,MAAM;MAChCC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;AACA;AACO,UAAUG,eAAeA,CAAC;EAAEd;AAAoC,CAAC,EAAE;EACxEe,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAM,IAAArB,aAAI,EAAC1B,GAAG,CAAC+B,IAAI,CAACiB,mBAAmB,EAAElB,OAAO,CAAC;IAClEe,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAACG,IAAI,CAACC,SAAS,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC7E,MAAMC,WAAkB,GAAG,EAAE;IAC7BL,QAAQ,CAACI,IAAI,CAACE,SAAS,CAACC,GAAG,CAAEC,cAAmB,IAAK;MACnD,IAAIA,cAAc,CAACC,OAAO,IAAI,IAAI,EAAE;QAClCD,cAAc,CAACC,OAAO,CAACF,GAAG,CAAEG,YAAiB,IAAK;UAChDA,YAAY,CAACC,WAAW,GAAGH,cAAc,CAACG,WAAW;UACrDD,YAAY,CAACE,aAAa,GAAGJ,cAAc,CAACK,IAAI;UAChDR,WAAW,CAACS,IAAI,CAACJ,YAAY,CAAC;QAChC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IACF,MAAM,IAAAK,YAAG,EAAC,IAAAC,8BAAqB,EAAChB,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC/CN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACM,WAAW,CAAC;IAC5C,IAAAY,yCAAkB,EAACZ,WAAW,EAAEL,QAAQ,CAACI,IAAI,CAAC;EAChD,CAAC,CAAC,OAAOnB,KAAK,EAAE;IACd,MAAM,IAAA8B,YAAG,EAAC,IAAAG,8BAAqB,EAACjC,KAAK,CAAC,CAAC;EACzC;AACF;;AAEA;AACA;AACA;AACA;AACO,UAAUkC,kBAAkBA,CAAC;EAAEpC;AAAgC,CAAC,EAAE;EACvE,IAAI;IACF,MAAM,IAAAJ,aAAI,EAAC1B,GAAG,CAAC+B,IAAI,CAACoC,gBAAgB,EAAErC,OAAO,CAAC;IAC9C,MAAM,IAAAgC,YAAG,EAAC,IAAAM,8BAAqB,EAACtC,OAAO,CAACuC,MAAM,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOrC,KAAK,EAAE;IACd;IACA,MAAMC,YAAY,GAAID,KAAK,YAAYE,KAAK,GAAIF,KAAK,CAACG,OAAO,GAAG,2BAA2B;IAC3FC,6BAAK,CAACC,IAAI,CAACJ,YAAY,EAAE;MACvBK,QAAQ,EAAEF,6BAAK,CAACG,SAAS,CAACC;IAC5B,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;AACe,UAAU8B,iBAAiBA,CAAA,EAAG;EAC3C,MAAM,IAAAC,mBAAU,EAACC,oCAAyB,EAAE3C,uBAAuB,CAAC;EACpE,MAAM,IAAA0C,mBAAU,EAACE,6BAAkB,EAAE/B,eAAe,CAAC;EACrD,MAAM,IAAA6B,mBAAU,EAACG,mCAAwB,EAAE9B,eAAe,CAAC;EAC3D,MAAM,IAAA2B,mBAAU,EAACI,wCAA6B,EAAET,kBAAkB,CAAC;AACrE","ignoreList":[]}