{"version":3,"names":["_incidentCodeCore","require","_replace","_interopRequireDefault","_rnFetchBlob","_device","_axios","e","__esModule","default","endpoints","exports","user","usernotifications","_default","updateName","updateNameData","axios","patch","addContact","contact","post","updateContact","deleteContact","contactId","delete","updateOrganizations","organizationsIds","organizations","getProfile","get","setSetting","key","value","getAddress","lat","lng","getAmazonUploadOptions","filePath","newFilePath","isIos","replace","fileStat","RNFetchBlob","fs","stat","amazonOptionsResponse","format","getFileExtension","size","data","uploadPortrait","options","fetch","method","host","path","headers","wrap","completeUpload","deletePortrait","getNotificationList","userId","readAllNotification","put","updateReadUnreadNotificationStatus","payload","notiId","isRead","userID","updateLocationTrackData","updateGeoCredStatus","setSiteKeyStatus","locationId","body","getAllUserGeofences"],"sources":["index.ts"],"sourcesContent":["import {\n  AppUser,\n  AppUserContact,\n  FileUploadOptions,\n  FileUploadRequest,\n  getFileExtension,\n  Id,\n  IncidentVideoUploadOptions,\n  UserSettingKey,\n} from 'incident-code-core';\nimport replace from 'lodash/replace';\nimport RNFetchBlob from 'rn-fetch-blob';\nimport { GeocodeResponse } from 'types';\nimport { isIos } from '../../utils/device';\n\nimport axios from '../axios';\n\nexport const endpoints = {\n  user: 'user',\n  usernotifications: 'usernotifications'\n};\n\n\nexport default {\n  updateName: (updateNameData: AppUser) =>\n    axios.patch(endpoints.user, updateNameData),\n  addContact: (contact: AppUserContact) =>\n    axios.post(`${endpoints.user}/contact`, contact),\n  updateContact: (contact: AppUserContact) =>\n    axios.patch(`${endpoints.user}/contact`, contact),\n  deleteContact: (contactId: string) =>\n    axios.delete(`${endpoints.user}/contact/${contactId}`),\n  updateOrganizations: (organizationsIds: Id[]) =>\n    axios.patch(endpoints.user, { organizations: organizationsIds }),\n  getProfile: () => axios.get<AppUser>(endpoints.user),\n  setSetting: (\n    key: UserSettingKey | string,\n    value: string | number | boolean,\n  ) => axios.patch(`${endpoints.user}/setting`, { key, value }),\n  getAddress: (lat: number, lng: number) =>\n    axios.get<GeocodeResponse>(\n      `https://maps.googleapis.com/maps/api/geocode/json?address=${lat},${lng}&key=AIzaSyDQEfg7mKFvmYzQWFUYpRzv1PlwI6HuikI`,\n    ),\n  getAmazonUploadOptions: async (filePath: string) => {\n    const newFilePath = isIos ? replace(filePath, 'file://', '') : filePath;\n    const fileStat = await RNFetchBlob.fs.stat(newFilePath);\n\n    // @ts-ignore\n    const amazonOptionsResponse: AxiosResponse<IncidentVideoUploadOptions> = await axios.post<\n      FileUploadRequest,\n      FileUploadOptions\n    >(`${endpoints.user}/profile-image`, {\n      format: getFileExtension(filePath),\n      size: fileStat.size,\n    });\n    amazonOptionsResponse.data.filePath = newFilePath;\n    return amazonOptionsResponse;\n  },\n  uploadPortrait: async (options: IncidentVideoUploadOptions) => {\n    if (!options.filePath) return;\n    // upload to s3\n    await RNFetchBlob.fetch(\n      options.method as any,\n      `https://${options.host}${options.path}`,\n      options.headers as any,\n      RNFetchBlob.wrap(options.filePath),\n    );\n  },\n  completeUpload: (options: FileUploadOptions) =>\n    axios.patch(`${endpoints.user}/set-portrait`, options),\n  deletePortrait: () => axios.delete(`${endpoints.user}/remove-portrait`),\n  getNotificationList: (userId: string) =>\n    axios.get(`${endpoints.usernotifications}/${userId}`),\n  readAllNotification: (userId: string) =>\n    axios.put(`${endpoints.usernotifications}/${\"markallnotificationasread\"}/${userId}`),  \n  updateReadUnreadNotificationStatus: (payload: any) =>\n    axios.patch(`${endpoints.usernotifications}/${\"usernotification\"}/${payload.notiId}`, { isRead: payload.isRead, userID: payload.userID }),\n  updateLocationTrackData: (payload: any) =>\n    axios.post(`geocreds/setdata`, payload),\n  updateGeoCredStatus: (payload: any) =>\n    axios.post(`/geocreds/updateUserGeocredsResponse`, payload),\n  setSiteKeyStatus: (payload: any) =>\n    axios.put(`sitekey/onsite/${payload.locationId}/${payload.userId}`, payload.body),  \n  getAllUserGeofences: (userId: string) =>\n    axios.get(`${\"adminPortal/orglocation/userloc\"}/${userId}`),\n};\n"],"mappings":"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","ignoreList":[]}