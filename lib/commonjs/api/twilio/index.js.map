{"version":3,"names":["_crashlytics","_interopRequireDefault","require","_forEach","_map","_conversations","_chat","_token","_axios","_event","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","endpoints","exports","twilio","client","getToken","axios","post","then","response","data","updateClientToken","token","updateToken","access_token","saveTwilioAccessToken","_default","init","accessToken","isTokenExpired","refreshTwilioAccessToken","TwilioClient","on","state","error","getMessages","incidentId","getTwilioAccessTokenFromStorage","channel","getConversationByUniqueName","status","join","channelMembers","getParticipants","members","forEach","member","sid","identity","messageAdded","message","setAllMessagesRead","giftedChatMessage","convertToGiftedChatMessage","event","emit","AppEvent","OnMessageAdded","messagePaginator","map","items","reverse","sendMessage","messageAttributes","catch","crashlytics","log","recordError","removeChannelEvents","removeAllListeners"],"sources":["index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-misused-promises */\nimport crashlytics from '@react-native-firebase/crashlytics';\n// import * as api from '../../api';\nimport { AccessToken, Dict } from 'incident-code-core';\nimport forEach from 'lodash/forEach';\nimport map from 'lodash/map';\n// import { Client as TwilioClient } from 'twilio-chat/lib/client';\n// import { Message as TwilioMessage } from 'twilio-chat/lib/message';\nimport { Client as TwilioClient } from '@twilio/conversations';\nimport { Message as TwilioMessage } from '@twilio/conversations';\nimport { convertToGiftedChatMessage } from '../../utils/chat';\nimport {\n  getTwilioAccessTokenFromStorage,\n  isTokenExpired,\n  refreshTwilioAccessToken,\n  saveTwilioAccessToken,\n} from '../../utils/token';\n\nimport axios from '../axios';\nimport event, { AppEvent } from '../event';\n\nexport const endpoints = {\n  twilio: 'twilio',\n};\n\nlet client: TwilioClient;\n\nconst getToken = (): Promise<AccessToken> =>\n  axios\n    .post<AccessToken>(`${endpoints.twilio}/auth`)\n    .then(response => response.data);\n\nconst updateClientToken = async () => {\n  const token = await getToken();\n  await client.updateToken(token.access_token || '');\n  await saveTwilioAccessToken(token);\n};\n\nexport default {\n  init: async (accessToken: AccessToken) => {\n    if (!client) {\n      try {\n        let token: AccessToken = accessToken;\n        if (isTokenExpired(accessToken)) {\n          token = await refreshTwilioAccessToken();\n        }\n        // client = await TwilioClient.create(token.access_token || '');\n        client = new TwilioClient(token.access_token || '');\n        client.on('stateChanged', (state) => {\n          // //(\"conversation client state--->\", state)\n          if (state === 'initialized') {\n            // Use the client\n\n          }\n        })\n\n      } catch (error) {\n        await updateClientToken();\n        // await api.logger.logError({\n        //   source: 'Twilio init',\n        //   raw: JSON.stringify(error),\n        // });\n      } finally {\n        if (client) {\n          client.on('tokenAboutToExpire', updateClientToken);\n          client.on('tokenExpired', updateClientToken);\n        }\n      }\n    }\n  },\n  getToken,\n  getMessages: async (incidentId: string) => {\n    const token = await getTwilioAccessTokenFromStorage();\n    if (isTokenExpired(token)) {\n      await updateClientToken();\n    }\n    const channel = await client.getConversationByUniqueName(incidentId);\n    if (channel.status !== 'joined') {\n      await channel.join();\n    }\n    const channelMembers = await channel.getParticipants();\n    const members: Dict<string> = {};\n\n    forEach(channelMembers, member => {\n      members[member.sid] = member.identity || '';\n    });\n    // //(\"-channelMembers-->\",channelMembers)\n    const messageAdded = async (message: TwilioMessage) => {\n      // //(\"-new message arrived-->\",message)\n      await channel.setAllMessagesRead();\n      const giftedChatMessage = convertToGiftedChatMessage(message, members);\n      // //(\"gifted chat message -->\",giftedChatMessage)\n      event.emit(AppEvent.OnMessageAdded, giftedChatMessage);\n    };\n\n    channel.on('messageAdded', messageAdded);\n\n    const messagePaginator = await channel.getMessages();\n\n    return map(messagePaginator.items, message =>\n      convertToGiftedChatMessage(message, members),\n    ).reverse();\n  },\n  sendMessage: async (\n    incidentId: string,\n    message: string,\n    messageAttributes?: Record<string, any>,\n  ) => {\n    const channel = await client.getConversationByUniqueName(incidentId);\n    channel\n      .sendMessage(message, messageAttributes)\n      .then()\n      .catch(error => {\n        crashlytics().log('Twilio chat error caught...');\n        // api.logger.logError({\n        //   source: 'Chat Send Message Error',\n        //   raw: JSON.stringify(error),\n        //   message: error.message,\n        // });\n        crashlytics().recordError(error);\n      });\n  },\n  removeChannelEvents: async (incidentId: string) => {\n    try {\n      const channel = await client.getConversationByUniqueName(incidentId);\n      if (channel) {\n        // //('channel removeAllListeners')\n        channel.removeAllListeners();\n      }\n    } catch (e: any) {\n      crashlytics().log('Find channel and remove listeners error');\n      crashlytics().recordError(e);\n    }\n  },\n};\n"],"mappings":"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","ignoreList":[]}