{"version":3,"names":["_asyncStorage","_interopRequireDefault","require","api","_interopRequireWildcard","_constants","_constants2","_constants3","_noop","_sdkConfigs","_reactNativeInAppMessage","_effects","_store","_device","_error","_firebase","_navigation","_actions","_screens","_constants4","_actions2","_constants5","_selectors","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","checkExpiresIn","token","expires_in","expires_at","Date","now","saveToken","payload","console","log","AsyncStorage","setItem","TOKEN_KEY","JSON","stringify","saveUserPhone","phone","USER_PHONE_KEY","getConfigs","response","configs","remoteLogger","data","REMOTE_LOGGER_KEY","put","getConfigsSuccess","logger","debug","error","warn","getConfigsFailure","handleError","triggerOnboardForInactiveUser","active","select","state","incidentPassiveEscortData","incidentEscortData","nextOnboardingScreen","app","persistor","purge","type","getConfigsRequest","getTwilioAccessTokenRequest","getProfile","user","isDeleted","getProfileSuccess","userId","id","topic","sdkConfigs","sdkStage","setUserId","subscribeToTopic","setupFirebaseMessage","spawn","setupAndWatchIOSForegroundNotifications","getProfileFailure","updateProfile","iosForegroundNotification","setupNotifications","_iosForegroundNotific","_iosForegroundNotific2","_iosForegroundNotific3","showIOSForegroundNotification","title","message","body","action","link","noop","_iosForegroundNotific4","NavigatorService","navigate","Screens","Menu","Tips","TipDetail","incident","incidentId","showChat","Notification","hide","show","setAccessTokenFromStorage","parse","getItem","KeyTwilioAccessToken","setAccessTokenFromApi","twilio","getToken","saveAccessToken","tokenWithExpire","ExpireOffset","getTwilioAccessToken","twilioInitialized","makeSelectTwilioInitialized","init","getTwilioAccessTokenSuccess","getTwilioAccessTokenFailure","logErrorToDB","makeSelectUser","source","device","getInfo","raw","logError","newError","appSaga","takeLatest","LOGIN_SUCCESS","REGISTER_USER_SUCCESS","UPDATE_NAME_SUCCESS","GET_PROFILE_REQUEST","UPDATE_PROFILE_REQUEST","GET_CONFIGS_REQUEST","GET_TWILIO_ACCESS_TOKEN_REQUEST","LOG_ERROR"],"sources":["saga.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\n/**\n *\n * App saga\n *\n */\n import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as api from '../../api';\nimport { ExpireOffset, KeyTwilioAccessToken } from '../../api/twilio/constants';\nimport { AxiosResponse } from 'axios';\nimport { LOGIN_SUCCESS } from '../../containers/screens/Onboarding/SignInCodeScreen/constants';\nimport { REGISTER_USER_SUCCESS } from '../../containers/screens/Onboarding/PromocodeScreen/constants';\nimport { LoginSuccessAction } from '../../containers/screens/Onboarding/SignInCodeScreen/types';\nimport { AccessToken, AppUser, Config, ErrorLog } from 'incident-code-core';\nimport noop from 'lodash/noop';\nimport { sdkConfigs } from '../../sdkConfigs'\nimport { Notification } from 'react-native-in-app-message';\nimport { call, put, select, spawn, takeLatest } from 'redux-saga/effects';\nimport { persistor } from '../../store';\nimport { getInfo } from '../../utils/device';\nimport { handleError } from '../../utils/error';\nimport {\n  setupFirebaseMessage,\n  setupNotifications,\n  setUserId,\n  subscribeToTopic,\n} from '../../utils/firebase';\nimport { initBackgroundGeolocationService } from '../../utils/location/backgroundGeolocation';\nimport NavigatorService from '../../utils/navigation';\n\nimport { showIOSForegroundNotification } from '../providers/NotificationProvider/actions';\nimport Screens from '../providers/RoutesProvider/screens';\nimport { UPDATE_NAME_SUCCESS } from '../screens/Onboarding/UpdateNameScreen/constants';\nimport { UpdateNameSuccessAction } from '../screens/Onboarding/UpdateNameScreen/types';\nimport {\n  getConfigsFailure,\n  getConfigsRequest,\n  getConfigsSuccess,\n  getProfileFailure,\n  getProfileSuccess,\n  getTwilioAccessTokenFailure,\n  getTwilioAccessTokenRequest,\n  getTwilioAccessTokenSuccess\n} from './actions';\nimport {\n  GET_CONFIGS_REQUEST,\n  GET_PROFILE_REQUEST,\n  GET_TWILIO_ACCESS_TOKEN_REQUEST,\n  LOG_ERROR,\n  UPDATE_PROFILE_REQUEST,\n  REMOTE_LOGGER_KEY,\n  TOKEN_KEY,\n  USER_PHONE_KEY,\n} from './constants';\nimport { makeSelectTwilioInitialized, makeSelectUser } from './selectors';\nimport { LogErrorAction } from './types';\n\nconst checkExpiresIn = (token: AccessToken): AccessToken => {\n  if (!token.expires_in) return token;\n  return {\n    ...token,\n    expires_at: Date.now() + token.expires_in * 1000,\n  };\n};\n\nexport function* saveToken({ payload }: LoginSuccessAction) {\n  console.log(\"Save Token -->\", payload)\n  const token = checkExpiresIn(payload);\n  console.log(\"Token -->\", token)\n  yield call(AsyncStorage.setItem, TOKEN_KEY, JSON.stringify(token));\n}\n\nexport function* saveUserPhone({ payload }: UpdateNameSuccessAction) {\n  if (payload.phone) {\n    yield call(AsyncStorage.setItem, USER_PHONE_KEY, payload.phone);\n  }\n}\n\nexport function* getConfigs() {\n\n  try {\n    const response: AxiosResponse<Config> = yield call(api.configs.getConfigs);\n    // console.log(\"configs response=>\",response)\n    const remoteLogger = response.data.remoteLogger || '';\n    yield call(\n      AsyncStorage.setItem,\n      REMOTE_LOGGER_KEY,\n      JSON.stringify(remoteLogger),\n    );\n    // console.log(\"configs response=>\",response)\n    yield put(getConfigsSuccess(response.data));\n    // console.log(\"user configs ===>\",JSON.stringify(response.data))\n    api.logger.debug('App Config', 'Get Success', response.data);\n  } catch (error) {\n    // console.log(\"configs response error=>\",error)\n    api.logger.warn('App Config', 'Get Failed', error);\n    yield put(getConfigsFailure(handleError(error)));\n  }\n}\n\nexport function* triggerOnboardForInactiveUser() {\n  const active = yield select(state => {\n    const {\n      incidentPassiveEscortData,\n      incidentEscortData,\n      nextOnboardingScreen,\n    } = state.app;\n\n    return (\n      !!incidentEscortData ||\n      !!incidentPassiveEscortData ||\n      nextOnboardingScreen !== 'Home'\n    );\n  });\n  if (!active) {\n    yield call(() => persistor.purge());\n    yield put({ type: 'USER_DELETED' });\n    yield put(getConfigsRequest());\n    yield put(getTwilioAccessTokenRequest());\n    return true;\n  }\n  return false;\n}\n\nexport function* getProfile() {\n  // console.log(\"get profile api call=>\")\n  try {\n    const response: AxiosResponse<AppUser> = yield call(api.user.getProfile);\n    // console.log(\"ðŸš€ ~ file: saga.ts ~ line 119 ~ function*getProfile ~ response\", JSON.stringify(response));\n    const { isDeleted } = response.data as any;\n\n    if (isDeleted) {\n      if (!(yield* triggerOnboardForInactiveUser())) {\n        yield put(getProfileSuccess(response.data));\n\n        const userId = response.data.id as string;\n        const topic = `${sdkConfigs.configs.sdkStage}_user_${userId}`;\n        AsyncStorage.setItem('userId', userId);\n        AsyncStorage.setItem('userData', JSON.stringify(response.data));\n        yield call(setUserId, userId);\n        yield call(subscribeToTopic, topic);\n        // console.log(\"user configs ===>\",JSON.stringify(response.data))\n        api.logger.debug('User Profile', 'Get Success', response.data);\n        yield call(setupFirebaseMessage);\n        yield spawn(setupAndWatchIOSForegroundNotifications);\n        console.log(\"getAllgeofene request : DELETED BLOCK\")\n        // yield put(getAllGeofenceRequest(userId));\n        // yield call(initBackgroundGeolocationService);\n      }\n    } else {\n      yield put(getProfileSuccess(response.data));\n\n      const userId = response.data.id as string;\n      const topic = `${sdkConfigs.configs.sdkStage}_user_${userId}`;\n      // console.log(\"topic=======***>\",topic)\n      AsyncStorage.setItem('userId', userId);\n      AsyncStorage.setItem('userData', JSON.stringify(response.data));\n      yield call(setUserId, userId);\n      yield call(subscribeToTopic, topic);\n      // console.log(\"user configs ===>\",JSON.stringify(response.data))\n      api.logger.debug('User Profile', 'Get Success', response.data);\n      yield call(setupFirebaseMessage);\n      yield spawn(setupAndWatchIOSForegroundNotifications);\n      // console.log(\"getAllgeofene request : SUCCESS BLOCK\")\n      // yield put(getAllGeofenceRequest(userId));\n\n      // yield call(initBackgroundGeolocationService);\n    }\n  } catch (error) {\n    console.log(\"get profile api call error=>\", error)\n    api.logger.warn('User Profile', 'Get Failed', error);\n    yield put(getProfileFailure(handleError(error)));\n  }\n}\n\nexport function* updateProfile() {\n  // console.log(\"get profile api call=>\")\n  try {\n    const response: AxiosResponse<AppUser> = yield call(api.user.getProfile);\n    // console.log(\"ðŸš€ ~ file: saga.ts ~ line 119 ~ function*getProfile ~ response\", JSON.stringify(response));\n    const { isDeleted } = response.data as any;\n\n    if (isDeleted) {\n      if (!(yield* triggerOnboardForInactiveUser())) {\n        yield put(getProfileSuccess(response.data));\n\n      }\n    } else {\n      yield put(getProfileSuccess(response.data));\n\n    }\n  } catch (error) {\n    console.log(\"get profile api call error=>\", error)\n    api.logger.warn('User Profile', 'Get Failed', error);\n    yield put(getProfileFailure(handleError(error)));\n  }\n}\n\n\nfunction* setupAndWatchIOSForegroundNotifications() {\n  while (true) {\n    const iosForegroundNotification = yield call(setupNotifications);\n    if (iosForegroundNotification) {\n      yield put(\n        showIOSForegroundNotification({\n          title: iosForegroundNotification.message?.title,\n          message: iosForegroundNotification.message?.body,\n          action: iosForegroundNotification.data?.link\n            ? noop\n            : () => {\n              NavigatorService.navigate(Screens.Menu.Tips.TipDetail, {\n                incident: {\n                  id: iosForegroundNotification.data?.incidentId,\n                },\n                showChat: true,\n              });\n              Notification.hide();\n            },\n        }),\n      );\n      Notification.show();\n    }\n  }\n}\n\nfunction* setAccessTokenFromStorage() {\n  return yield call(\n    JSON.parse,\n    yield call(AsyncStorage.getItem, KeyTwilioAccessToken),\n  );\n}\n\nfunction* setAccessTokenFromApi() {\n  const token = yield call(api.twilio.getToken);\n  return saveAccessToken(token);\n}\n\nfunction* saveAccessToken(token: AccessToken) {\n  const tokenWithExpire = !token.expires_at\n    ? {\n      ...token,\n      expires_at: Date.now() + (token.expires_in || 1) * 1000 - ExpireOffset,\n    }\n    : token;\n\n  yield call(\n    AsyncStorage.setItem,\n    KeyTwilioAccessToken,\n    JSON.stringify(tokenWithExpire),\n  );\n\n  return tokenWithExpire;\n}\n\nexport function* getTwilioAccessToken() {\n  const twilioInitialized: boolean = yield select(\n    makeSelectTwilioInitialized(),\n  );\n  try {\n    const token: AccessToken = yield twilioInitialized\n      ? yield call(setAccessTokenFromStorage)\n      : yield call(setAccessTokenFromApi);\n\n    yield call(api.twilio.init, token);\n    yield put(getTwilioAccessTokenSuccess(token));\n  } catch (error) {\n    yield put(getTwilioAccessTokenFailure(handleError(error)));\n  }\n}\n\nexport function* logErrorToDB({ payload }: LogErrorAction) {\n  const user: AppUser = yield select(makeSelectUser());\n  try {\n    const error: ErrorLog = {\n      source: payload.source,\n      message: payload.message,\n      device: getInfo(),\n      user,\n      raw: JSON.stringify(payload.raw),\n    };\n    yield call(api.logger.logError, error);\n  } catch (error) {\n    const newError: ErrorLog = {\n      source: 'logErrorToDB',\n      message: error.message,\n      device: getInfo(),\n      user,\n      raw: JSON.stringify(error),\n    };\n    yield call(api.logger.logError, newError);\n  }\n}\n\nexport default function* appSaga() {\n  yield takeLatest(LOGIN_SUCCESS, saveToken);\n  yield takeLatest(REGISTER_USER_SUCCESS, saveToken);\n  yield takeLatest(UPDATE_NAME_SUCCESS, saveUserPhone);\n  yield takeLatest(GET_PROFILE_REQUEST, getProfile);\n  yield takeLatest(UPDATE_PROFILE_REQUEST, updateProfile);\n  yield takeLatest(GET_CONFIGS_REQUEST, getConfigs);\n  yield takeLatest(GET_TWILIO_ACCESS_TOKEN_REQUEST, getTwilioAccessToken);\n  yield takeLatest(LOG_ERROR, logErrorToDB);\n}\n"],"mappings":"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","ignoreList":[]}