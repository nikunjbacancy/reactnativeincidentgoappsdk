{"version":3,"names":["_asyncStorage","_interopRequireDefault","require","_components","_providers","_react","_interopRequireWildcard","_reactNative","_reactNativePopupMenu","_hooks","_navigation","_token","_constants","_selectors","_screens","_actions","_common","_selectors2","_actions2","_actions3","_actions4","_api","_reactNativeToastMessage","_reactNativeRootSiblings","_lodash","_reactNativePushNotification","_PanicActionModal","_backgroundGeolocation","_actions5","_reactNativeBackgroundGeolocation","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","__DEV__","Promise","resolve","then","NPMModule","isLoading","useSelector","makeSelectIsLoading","iOSForegroundNotification","makeSelectIOSForegroundNotification","showPanicActionPopup","setPanicActionPopup","useState","userData","makeSelectUser","geoCredStatusUpdate","useAction","geoCredStatusRequest","getAllGeofenceRequestAction","getAllGeofenceRequest","getConfigsRequestAction","getConfigsRequest","getProfileRequestAction","getProfileRequest","updateProfileRequestAction","updateProfileRequest","getTwilioAccessTokenAction","getTwilioAccessTokenRequest","setLocation","UpdateLocationData","startDuressRequest","triggerDuressRequest","isLogoutNotReceived","logoutObject","title","body","isBackgroundState","updateReadUnreadStatus","notificationReadUnreadStatusRequest","geoCredPNObject","setGeoCredPNObject","siteKeyNotificationId","setSiteKeyNotificationId","useEffect","Platform","OS","NativeModules","NetworkModule","startNetworkListener","PushNotification","popInitialNotification","notification","_notification$data","_notification$data2","_notification$data3","_notification$data4","_notification$data5","_notification$data6","data","event","type","emit","AppEvent","OnLocationQuestion","OnSiteKeyNotificataionReceived","_notification$data7","OnChatMessageTap","console","log","id","isTokenValid","isValid","on","OnReceiveAlert","onAlertReceived","OnOrganizationGroupUpdated","onOrganizationGroupUpdated","OnLogout","onSiteKeyNotificationReceived","AsyncStorage","getItem","ANDROID_HEADLESS_NOTIFICATION_KEY","incidentId","removeItem","NavigatorService","navigate","Screens","Menu","Tips","TipDetail","incident","showChat","AppState","addEventListener","handleAppStateChange","updateUserLocation","onLocationChange","BackgroundGeolocation","onLocation","location","checkCurrentLatLongWithGeofence","coords","latitude","longitude","geofenceListener","onGeofence","geofence","userId","JSON","parse","error","action","updateEventOnGeofenceCross","remove","locationId","undefined","gmtDateStr","getLocalTime","sentAt","getTimeAgo","payload","isRead","userID","notiId","notificationId","readFrom","newState","Alert","alert","text","onPress","setItem","Onboarding","Index","cancelable","triggerDuress","onYesTap","fetchLocation","response","lat","toString","lng","updateUserLoctionData","onNoTap","useCallback","createElement","RootSiblingParent","LanguageProvider","ThemeProvider","MenuProvider","LoadingIndicator","Routes","ref","setTopLevelNavigator","onNavigationStateChange","logScreen","Toast","setRef","InAppNotification","message","isVisible","isEmpty","actionPositiveText","actionNagetiveText","onAction","onHide","showIcon","showActionIcon","SiteKeyModal","hideModal","isFromNotification","notification_id","IncidentGoPackage","ReduxProvider","exports"],"sources":["index.tsx"],"sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * Generated with the TypeScript template\n * https://github.com/react-native-community/react-native-template-typescript\n *\n * @format\n */\nif (__DEV__) import('../../core/reactotron');\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { InAppNotification, LoadingIndicator, SiteKeyModal } from '../../components';\nimport {\n  LanguageProvider,\n  Routes,\n  ThemeProvider,\n  ReduxProvider\n} from '../../containers/providers';\nimport React, { FC, useEffect, useCallback, useState } from 'react';\nimport { Alert, AppState, Platform, NativeModules } from 'react-native';\nimport { MenuProvider } from 'react-native-popup-menu';\nimport { useAction, useSelector } from '../../utils/hooks';\nimport NavigatorService from '../../utils/navigation';\nimport { isTokenValid } from '../../utils/token';\nimport { ANDROID_HEADLESS_NOTIFICATION_KEY } from '../providers/NotificationProvider/constants';\nimport { makeSelectIOSForegroundNotification } from '../providers/NotificationProvider/selectors';\nimport Screens from '../providers/RoutesProvider/screens';\nimport {\n  getConfigsRequest,\n  getProfileRequest,\n  getTwilioAccessTokenRequest,\n  updateProfileRequest\n} from './actions';\nimport { getTimeAgo, getLocalTime } from '../../utils/common'\nimport { makeSelectIsLoading, makeSelectUser } from './selectors';\nimport { UpdateLocationData } from '../../containers/app/actions';\nimport { triggerDuressRequest } from '../../containers/screens/Onboarding/WarningScreen/actions';\nimport { notificationReadUnreadStatusRequest } from '../../containers/screens/Menu/NotificationListScreen/actions';\nimport { AppEvent, event } from '../../api';\nimport Toast from 'react-native-toast-message';\nimport { RootSiblingParent } from 'react-native-root-siblings';\nimport { isEmpty } from 'lodash';\nimport PushNotification from 'react-native-push-notification';\nimport PanicActionModal from '../../components/PanicActionModal';\nimport { updateUserLocation, updateUserLoctionData, fetchLocation, checkCurrentLatLongWithGeofence, updateEventOnGeofenceCross } from '../../utils/location/backgroundGeolocation';\nimport { geoCredStatusRequest, getAllGeofenceRequest } from '../../utils/location/actions';\nimport BackgroundGeolocation from 'react-native-background-geolocation';\n\n// LogBox.ignoreLogs([\"EventEmitter.removeListener\"]);\n\nconst NPMModule: FC = () => {\n\n  const isLoading = useSelector(makeSelectIsLoading());\n  const iOSForegroundNotification = useSelector(\n    makeSelectIOSForegroundNotification(),\n  );\n  const [showPanicActionPopup, setPanicActionPopup] = useState(false)\n  const userData = useSelector(makeSelectUser());\n  const geoCredStatusUpdate = useAction(geoCredStatusRequest)\n  const getAllGeofenceRequestAction = useAction(getAllGeofenceRequest)\n  const getConfigsRequestAction = useAction(getConfigsRequest);\n  const getProfileRequestAction = useAction(getProfileRequest);\n  const updateProfileRequestAction = useAction(updateProfileRequest);\n  const getTwilioAccessTokenAction = useAction(getTwilioAccessTokenRequest);\n  const setLocation = useAction(UpdateLocationData);\n  const startDuressRequest = useAction(triggerDuressRequest);\n  var isLogoutNotReceived = false\n  type LogoutObject = {\n    title: string; \n    body: string;\n  };\n  \n  var logoutObject: LogoutObject = { title: \"\", body: \"\" };\n  var isBackgroundState = false\n  const updateReadUnreadStatus = useAction(notificationReadUnreadStatusRequest);\n  const [geoCredPNObject, setGeoCredPNObject] = useState({});\n  const [siteKeyNotificationId, setSiteKeyNotificationId] = useState(\"\");\n  // const readUnReadresult = useSelector((state) => { return state.notificationListState.notiReadData });\n\n  useEffect(() => {\n\n    Platform.OS == 'android' && NativeModules.NetworkModule.startNetworkListener();\n\n    PushNotification.popInitialNotification(notification => {\n      if (notification?.data.event === \"LocationQuestion\" && notification?.data.type === \"Location\") {\n        event.emit(AppEvent.OnLocationQuestion, notification.data);\n      }\n      // Handle site key notifications\n      if ((notification?.data?.type === \"SiteKey\" && notification?.data?.event === \"SiteKey\") ||\n        (notification?.data?.data?.type === \"SiteKey\" && notification?.data?.data?.event === \"SiteKey\")\n      ) {\n        event.emit(AppEvent.OnSiteKeyNotificataionReceived, notification.data);\n      }\n      // Handle chat message notifications\n      if (notification?.data?.event === \"Message\" && notification?.data?.type === \"chat\") {\n        event.emit(AppEvent.OnChatMessageTap, notification.data?.data);\n      }\n    })\n\n    getConfigsRequestAction();\n\n    console.log(\"Line ===== 103\")\n    console.log(\"userData?.id ===>\",userData?.id)\n    userData?.id && getAllGeofenceRequestAction(userData?.id);\n\n    isTokenValid().then(isValid => {\n      //(\"isTokenValid-->\", isValid)\n      if (isValid) {\n        getProfileRequestAction();\n        getTwilioAccessTokenAction();\n      }\n    });\n\n    // //(\"logout event register\")\n    // event.on(AppEvent.OnBeaconUpdated, onBeaconClosed);\n    event.on(AppEvent.OnReceiveAlert, onAlertReceived);\n    event.on(AppEvent.OnOrganizationGroupUpdated, onOrganizationGroupUpdated);\n    event.on(AppEvent.OnLogout, OnLogout);\n    event.on(AppEvent.OnLocationQuestion, OnLocationQuestion);\n    event.on(AppEvent.OnSiteKeyNotificataionReceived, onSiteKeyNotificationReceived);\n\n\n    AsyncStorage.getItem(ANDROID_HEADLESS_NOTIFICATION_KEY).then(\n      async incidentId => {\n        if (incidentId) {\n          await AsyncStorage.removeItem(ANDROID_HEADLESS_NOTIFICATION_KEY);\n          NavigatorService.navigate(Screens.Menu.Tips.TipDetail, {\n            incident: {\n              id: incidentId,\n            },\n            showChat: true,\n          });\n        }\n      },\n    );\n\n    AppState.addEventListener('change', handleAppStateChange);\n    updateUserLocation()\n\n  }, []);\n\n  useEffect(() => {\n    // Add geofence listener\n\n    const onLocationChange = BackgroundGeolocation.onLocation(async (location) => {\n      if (Platform.OS == 'ios') {\n        checkCurrentLatLongWithGeofence(location.coords.latitude, location.coords.longitude)\n      }\n    })\n\n    const geofenceListener = BackgroundGeolocation.onGeofence(async (geofence) => {\n      console.log(\"app foregorund : ==>\", geofence)\n      try {\n        if (Platform.OS == 'ios') { return }\n        // Retrieve user data safely\n        let userId = \"\";\n        try {\n          const userData = await AsyncStorage.getItem('userData');\n          userId = userData ? JSON.parse(userData).id : \"\";\n        } catch (error) {\n          console.log(\"Error retrieving user data from AsyncStorage:\", error);\n          // writeLog(\"Error retrieving user data from AsyncStorage:\"+error)\n        }\n        // Handle geofence entry and exit events\n        if (geofence.action === \"ENTER\") {\n          console.log(\"app foregorund geofence.action: ==>\", geofence.action)\n          try {\n            updateEventOnGeofenceCross(geofence, true, userId);\n            updateUserLocation();\n          } catch (error) {\n            console.log(\"Error handling geofence ENTER event:\", error);\n            // writeLog(\"Error handling geofence ENTER event:\"+error)\n          }\n        } else if (geofence.action === \"EXIT\") {\n          console.log(\"app foregorund geofence.action: ==>\", geofence.action)\n          try {\n            updateEventOnGeofenceCross(geofence, false, userId);\n            updateUserLocation();\n          } catch (error) {\n            console.log(\"Error handling geofence EXIT event:\", error);\n            // writeLog(\"Error handling geofence EXIT event:\"+error)\n          }\n\n        }\n      } catch (error) {\n        console.log(\"Error in geofenceListener:\", error);\n        // writeLog(\"Error in geofenceListener:\"+error)\n      }\n    });\n\n    // Cleanup function to remove the listener\n    return () => {\n      geofenceListener.remove();\n      onLocationChange.remove()\n    };\n  }, []);\n\n  // on sitekey notification received\n  const onSiteKeyNotificationReceived = async (event: any) => {\n    setSiteKeyNotificationId(event.locationId == undefined ? event.data.locationId : event.locationId)\n  }\n\n  const OnLocationQuestion = async (event: any) => {\n    const gmtDateStr = getLocalTime(event.sentAt);\n    if (getTimeAgo(gmtDateStr) <= 30) {\n      if (userData) {\n        setGeoCredPNObject(event)\n        let payload = {\n          isRead: true,\n          userID: userData != null ? userData.id : \"0\",\n          notiId: event != null ? event.notificationId : \"\",\n          readFrom: \"app\"\n        }\n        updateReadUnreadStatus(payload)\n      }\n    }\n    else {\n\n    }\n\n  }\n\n  const handleAppStateChange = (newState: string) => {\n    isBackgroundState = newState == 'active' ? false : true\n    if (newState == 'active') {\n      if (isLogoutNotReceived) {\n        isLogoutNotReceived = false\n        Alert.alert(\n          logoutObject.title,\n          logoutObject.body,\n          [\n            {\n              text: 'OK',\n              onPress: () => {\n                AsyncStorage.setItem(\"isLogout\", \"true\");\n                NavigatorService.navigate(Screens.Onboarding.Index);\n              }\n            },\n          ],\n          { cancelable: false },\n        );\n      }\n    }\n  }\n\n  const onAlertReceived = () => {\n    triggerDuress();\n  }\n\n  const onOrganizationGroupUpdated = async () => {\n    // //(\"event called onOrganizationGroupUpdated-->\")\n    updateProfileRequestAction()\n  }\n\n  // geocred feature ::: call on Click YES Button \n  const onYesTap = async () => {\n    setPanicActionPopup(false)\n    const location = await fetchLocation();\n    // console.log(\"onYesTap location--==>\", JSON.stringify(location))\n    if (location) {\n      const locationId = geoCredPNObject != null ? +geoCredPNObject.locationId : 0;\n      let payload = {\n        userId: userData.id,\n        locationId: locationId,\n        incidentId: geoCredPNObject != null ? geoCredPNObject?.incidentId : \"\",\n        response: \"yes\",\n        lat: location.coords.latitude.toString(),\n        lng: location.coords.longitude.toString()\n      }\n      // console.log(\"onNoTap onYesTap--==>\", payload)\n      geoCredStatusUpdate(payload)\n      updateUserLoctionData(location)\n    }\n  }\n\n  // geocred feature ::: call on Click NO Button \n  const onNoTap = async () => {\n    setPanicActionPopup(false)\n    const location = await fetchLocation();\n    if (location) {\n      const locationId = geoCredPNObject != null ? +geoCredPNObject.locationId : 0;\n      let payload = {\n        userId: userData.id,\n        locationId: locationId,\n        incidentId: geoCredPNObject != null ? geoCredPNObject?.incidentId : \"\",\n        response: \"no\",\n        lat: location.coords.latitude.toString(),\n        lng: location.coords.longitude.toString()\n      }\n      // console.log(\"onNoTap payload--==>\", payload)\n      geoCredStatusUpdate(payload)\n      updateUserLoctionData(location)\n    }\n  }\n\n  const OnLogout = async (event: any) => {\n    // //(\"on logout received data -->\",JSON.stringify(event))\n    if (isBackgroundState) {\n      isLogoutNotReceived = true\n      logoutObject = event\n    }\n\n    Alert.alert(\n      event.title,\n      event.body,\n      [\n        {\n          text: 'OK',\n          onPress: () => {\n            AsyncStorage.setItem(\"isLogout\", \"true\");\n            // NavigatorService.navigate(Screens.Onboarding.Index);\n          }\n        },\n      ],\n      { cancelable: false },\n    );\n\n  }\n\n  const triggerDuress = useCallback(() => {\n    startDuressRequest(setLocation);\n  }, [startDuressRequest, setLocation]);\n\n  return (\n    <RootSiblingParent>\n      <LanguageProvider>\n        <ThemeProvider>\n          <MenuProvider>\n            {isLoading ? (\n              <LoadingIndicator />\n            ) : <Routes\n              ref={NavigatorService.setTopLevelNavigator}\n              onNavigationStateChange={NavigatorService.logScreen}\n            />\n            }\n            <Toast ref={(ref) => Toast.setRef(ref)} />\n            <InAppNotification\n              title={iOSForegroundNotification?.title}\n              message={iOSForegroundNotification?.message}\n              onPress={iOSForegroundNotification?.action}\n            />\n            <PanicActionModal\n              isVisible={showPanicActionPopup}\n              title={!isEmpty(geoCredPNObject) ? JSON.parse(geoCredPNObject.data).title : \"\"}\n              message={!isEmpty(geoCredPNObject) ? JSON.parse(geoCredPNObject.data).message : \"\"}\n              actionPositiveText={\"Yes\"}\n              actionNagetiveText={\"No\"}\n              onAction={() => onYesTap()}\n              onHide={() => onNoTap()}\n              showIcon={true}\n              showActionIcon={true}\n            />\n            <SiteKeyModal\n              isVisible={siteKeyNotificationId == \"\" ? false : true}\n              userData={userData}\n              hideModal={() => setSiteKeyNotificationId(\"\")}\n              isFromNotification={true}\n              notification_id={siteKeyNotificationId}\n            />\n          </MenuProvider>\n        </ThemeProvider>\n      </LanguageProvider>\n    </RootSiblingParent>\n  );\n};\n\nconst IncidentGoPackage = () => {\n  return (\n    <ReduxProvider>\n      <NPMModule />\n    </ReduxProvider>\n  )\n}\n\nexport { IncidentGoPackage };\n"],"mappings":"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","ignoreList":[]}