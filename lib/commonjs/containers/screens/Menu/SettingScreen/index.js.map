{"version":3,"names":["_assets","require","_components","_react","_interopRequireWildcard","_reactNative","_reactIntl","_hooks","_navigation","_interopRequireDefault","_asyncStorage","_screens","_actions","_messages","_styles","_reactNativePermissions","_styled","_selectors","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","SettingScreen","phone","useSelector","makeSelectUser","formatMessage","useIntl","notificationSetting","setNotificationSetting","useState","accountDeleteRequestAction","useAction","deleteUserRequest","notificationEnabled","useEffect","checkNotifications","then","status","settings","onNotificationValueChange","console","log","Alert","alert","text","onPress","openSettings","style","setWarning","createElement","Text","messages","warning","showDeleteAccountAlert","deleteAccount","deleteAccountMsg","no","yes","handleLogout","showLogoutAlert","logout","logoutMessage","AsyncStorage","setItem","NavigatorService","navigate","Screens","Onboarding","Index","Fragment","StatusBar","barStyle","backgroundColor","SafeAreaContainer","Header","title","Container","SwitchContainer","SwitchText","description","SwitchButton","value","onValueChange","trackColor","false","colors","lightGrey","true","highlight","thumbColor","nearWhite","LogoutButtonRow","LogoutButton","LogoutButtonText","BackButtonRow","ScreenActionButton","onCancel","back","tintColor","white","styled","theme","black","fonts","defaultBoldFamily","normalSize","_default","exports"],"sources":["index.tsx"],"sourcesContent":["// import NavigatorService from 'utils/navigation';\nimport { colors } from '../../../../assets';\nimport { Header, SafeAreaContainer, ScreenActionButton } from '../../../../components';\nimport React, { useEffect, useState } from 'react';\nimport { StatusBar, Alert } from 'react-native';\nimport { useIntl } from 'react-intl';\nimport { useAction, useSelector } from '../../../../utils/hooks';\nimport NavigatorService from '../../../../utils/navigation';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Screens from '../../../providers/RoutesProvider/screens';\nimport { deleteUserRequest, resetDeleteUser } from './actions';\nimport messages from './messages';\nimport {\n  BackButtonRow,\n  Container,\n  SwitchButton,\n  SwitchContainer,\n  SwitchText,\n  LogoutButtonRow,\n  LogoutButton,\n  LogoutButtonText\n} from './styles';\nimport { checkNotifications, openSettings } from 'react-native-permissions';\nimport styled from '../../../../utils/styled';\nimport { makeSelectUser } from '../../../app/selectors';\n\n// import { getDeviceName, getModel, getBrand, getDeviceId } from 'react-native-device-info'\n\nconst SettingScreen = () => {\n\n  const { phone } = useSelector(makeSelectUser());\n\n  const { formatMessage } = useIntl();\n  const [notificationSetting, setNotificationSetting] = useState(true);\n  const accountDeleteRequestAction = useAction(deleteUserRequest);\n  const notificationEnabled =\n    notificationSetting == null ? true : notificationSetting;\n\n  useEffect(() => {\n    checkNotifications().then(({ status, settings }) => {\n      if (status === \"blocked\") {\n        setNotificationSetting(false);\n      }\n      else {\n        setNotificationSetting(true);\n      }\n    });\n  })\n\n  // useEffect(() => {\n  //   // console.log(\"result===>\", result)\n\n  //   if (result !== null) {\n  //     Toast.show(result.message, {\n  //       position: Toast.positions.CENTER,\n  //       duration: 3000\n  //     });\n  //     resetDeleteAccountUserAction()\n  //     AsyncStorage.setItem(\"isLogout\", \"true\");\n  //     NavigatorService.navigate(Screens.Onboarding.Index);\n  //   }\n\n  // }, [result])\n\n  const onNotificationValueChange = () => {\n    console.log(\"notificationSetting:\" + notificationSetting)\n    switch (notificationSetting) {\n      case true:\n\n        break;\n      case false:\n        Alert.alert(\n          'Permission Required',\n          'This app needs notification permission to receive notifications',\n          [\n            {\n              text: 'Open settings',\n              onPress: openSettings\n            },\n            {\n              text: \"Cancel\",\n              onPress: () => console.log(\"Cancel Pressed\"),\n              style: \"cancel\"\n            },\n          ]\n        );\n        break;\n    }\n  }\n\n  const setWarning = () => {\n    // console.log(\"=formatMessage(messages.warning)=>\",formatMessage(messages.warning))\n    switch (notificationSetting) {\n      case true:\n        return null;\n      case false:\n        return <Text>{formatMessage(messages.warning)}</Text>;\n      default:\n        return null;\n    }\n  }\n\n  const showDeleteAccountAlert = () => {\n    Alert.alert(formatMessage(messages.deleteAccount), formatMessage(messages.deleteAccountMsg), [\n      {\n        text: formatMessage(messages.no),\n        onPress: () => console.log('Cancel Pressed'),\n        style: 'cancel',\n      },\n      {\n        text: formatMessage(messages.yes), onPress: () =>\n          handleLogout()\n      },\n    ]);\n  }\n\n  const handleLogout = () => {\n    accountDeleteRequestAction(phone)\n    // resetDeleteAccountUserAction()\n    // console.log(\"Result Is===>\", result)\n    // AsyncStorage.setItem(\"isLogout\", \"true\");\n    // NavigatorService.navigate(Screens.Onboarding.Index);\n  }\n\n  const showLogoutAlert = () => {\n    Alert.alert(formatMessage(messages.logout), formatMessage(messages.logoutMessage), [\n      {\n        text: formatMessage(messages.no),\n        onPress: () => console.log('Cancel Pressed'),\n        style: 'cancel',\n      },\n      {\n        text: formatMessage(messages.yes), onPress: () => {\n          AsyncStorage.setItem(\"isLogout\", \"true\");\n          NavigatorService.navigate(Screens.Onboarding.Index);\n        }\n      },\n    ]);\n  }\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <Header title={formatMessage(messages.title)} />\n        <Container>\n          <SwitchContainer>\n            <SwitchText>{formatMessage(messages.description)}</SwitchText>\n            <SwitchButton\n              value={notificationEnabled}\n              onValueChange={onNotificationValueChange}\n              trackColor={{\n                false: colors.lightGrey,\n                true: colors.highlight,\n              }}\n              thumbColor={colors.nearWhite}\n            />\n          </SwitchContainer>\n\n          {setWarning()}\n\n          <LogoutButtonRow>\n            <LogoutButton onPress={showLogoutAlert}>\n              <LogoutButtonText>{formatMessage(messages.logout)}</LogoutButtonText>\n            </LogoutButton>\n          </LogoutButtonRow>\n\n          {/* <DeleteButtonRow>\n            <DeleteButton onPress={showDeleteAccountAlert}>\n              <DeleteButtonText>{formatMessage(messages.deleteAccount)}</DeleteButtonText>\n            </DeleteButton>\n          </DeleteButtonRow> */}\n\n        </Container>\n        <BackButtonRow>\n          <ScreenActionButton\n            onCancel={NavigatorService.back}\n            tintColor={colors.white}\n          />\n        </BackButtonRow>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nconst Text = styled.Text`\n  color: ${({ theme }) => theme.colors.black};\n  font-family: ${({ theme }) => theme.fonts.defaultBoldFamily};\n  font-size: ${({ theme }) => theme.fonts.normalSize};\n  text-align: center;\n  padding: 20px 20px 0;\n`;\n\nexport default SettingScreen;\n"],"mappings":"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","ignoreList":[]}