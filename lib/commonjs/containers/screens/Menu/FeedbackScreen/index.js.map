{"version":3,"names":["_assets","require","_components","_constants","_screens","_interopRequireDefault","_react","_reactIntl","_reactNative","_reactNativeRootToast","_hooks","_navigation","_promise","_sdkConfigs","_actions","_constants2","_messages","_selectors","_styles","_validator","_reactNativeBackgroundGeolocation","_api","e","__esModule","default","FeedbackScreen","showEmailButton","sdkConfigs","configs","sdkEnvironment","formatMessage","useIntl","isSending","useSelector","makeSelectIsSending","shouldShowModal","makeSelectShowSuccessModal","showSuccessModalAction","useAction","showSuccessModal","hideSuccessModalAction","hideSuccessModal","schema","FeedbackSchema","initialValues","email","comment","openFaq","Linking","openURL","LINKS","faq","openTos","tos","openPrivacy","privacy","openQuickStartGuide","NavigatorService","navigate","Screens","Menu","Feedback","QuickStartGuide","fromFeedback","goBack","delay","back","sendLocationLogs","BackgroundGeolocation","logger","emailLog","then","err","error","message","createElement","Fragment","StatusBar","barStyle","backgroundColor","SafeAreaContainer","ScrollView","contentContainerStyle","flex","keyboardShouldPersistTaps","keyboardDismissMode","Header","title","messages","InfoRow","InfoText","info","Form","start","SEND_FEEDBACK_REQUEST","resolve","SEND_FEEDBACK_SUCCESS","reject","SEND_FEEDBACK_FAILURE","validationSchema","onResolve","onReject","action","Toast","show","payload","position","positions","BOTTOM","InputRow","EmailInput","name","autoCapitalize","keyboardType","textContentType","placeholder","emailInput","StyledErrorField","TextRow","TextInput","autoCompleteType","multiline","numberOfLines","commentInput","PaddingView","size","PrivacyRow","PrivacyText","guideDescription","guideText","PrivacyLinkText","key","onPress","locationLogDesc","SendButtonRow","GradientButton","text","locationLogButton","ScreenActionButtonField","disabled","loading","send","onCancel","tintColor","colors","white","ScreenActionModal","isVisible","actionText","ok","feedbackSentTitle","feedbackSentDescription","onAction","onHide","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import { colors } from '../../../../assets';\nimport {\n  Form,\n  GradientButton,\n  Header,\n  PaddingView,\n  SafeAreaContainer,\n  ScreenActionButtonField,\n  ScreenActionModal,\n} from '../../../../components';\nimport { LINKS } from '../../../../containers/app/constants';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\nimport React, { FC } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Linking, ScrollView, StatusBar } from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction, useSelector } from '../../../../utils/hooks';\nimport NavigatorService from '../../../../utils/navigation';\nimport { delay } from '../../../../utils/promise';\nimport { sdkConfigs } from '../../../../sdkConfigs'\nimport { hideSuccessModal, showSuccessModal } from './actions';\nimport {\n  SEND_FEEDBACK_FAILURE,\n  SEND_FEEDBACK_REQUEST,\n  SEND_FEEDBACK_SUCCESS,\n} from './constants';\nimport messages from './messages';\nimport { makeSelectIsSending, makeSelectShowSuccessModal } from './selectors';\nimport {\n  EmailInput,\n  InfoRow,\n  InfoText,\n  InputRow,\n  PrivacyLinkText,\n  PrivacyRow,\n  PrivacyText,\n  SendButtonRow,\n  StyledErrorField,\n  TextInput,\n  TextRow,\n} from './styles';\nimport FeedbackSchema from './validator';\nimport BackgroundGeolocation from 'react-native-background-geolocation';\nimport { logger } from '../../../../api';\n\ninterface Params {}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> {}\n\nconst FeedbackScreen: FC<Props> = () => {\n  const showEmailButton = sdkConfigs.configs.sdkEnvironment !== 'PROD' ? true : false;\n  const { formatMessage } = useIntl();\n\n  const isSending = useSelector(makeSelectIsSending());\n  const shouldShowModal = useSelector(makeSelectShowSuccessModal());\n\n  const showSuccessModalAction = useAction(showSuccessModal);\n  const hideSuccessModalAction = useAction(hideSuccessModal);\n\n  const schema = FeedbackSchema(formatMessage);\n  const initialValues = {\n    email: '',\n    comment: '',\n  };\n\n  const openFaq = () => Linking.openURL(LINKS.faq);\n  const openTos = () => Linking.openURL(LINKS.tos);\n  const openPrivacy = () => Linking.openURL(LINKS.privacy);\n  const openQuickStartGuide = () =>\n    NavigatorService.navigate(Screens.Menu.Feedback.QuickStartGuide, {\n      fromFeedback: true,\n    });\n  const goBack = async () => {\n    hideSuccessModalAction();\n    await delay(300);\n    NavigatorService.back();\n  };\n\n  const sendLocationLogs = () => {\n    BackgroundGeolocation.logger.emailLog(sdkConfigs.configs.email).then(\n      () => {},\n      err => {\n        logger.error(\n          'Email Location Logs Error',\n          'emailLog Error: ' + err?.message,\n          err,\n        );\n      },\n    );\n  };\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <ScrollView\n          contentContainerStyle={{ flex: 1 }}\n          keyboardShouldPersistTaps=\"always\"\n          keyboardDismissMode=\"on-drag\"\n        >\n          <Header title={formatMessage(messages.title)} />\n          <InfoRow>\n            <InfoText>{formatMessage(messages.info)}</InfoText>\n          </InfoRow>\n          <Form\n            start={SEND_FEEDBACK_REQUEST}\n            resolve={SEND_FEEDBACK_SUCCESS}\n            reject={SEND_FEEDBACK_FAILURE}\n            initialValues={initialValues}\n            validationSchema={schema}\n            onResolve={showSuccessModalAction}\n            onReject={action =>\n              Toast.show(action.payload.message, {\n                position: Toast.positions.BOTTOM,\n              })\n            }\n          >\n            <>\n              <InputRow>\n                <EmailInput\n                  name=\"email\"\n                  autoCapitalize=\"none\"\n                  keyboardType=\"email-address\"\n                  textContentType=\"emailAddress\"\n                  placeholder={formatMessage(messages.emailInput)}\n                />\n              </InputRow>\n              <StyledErrorField name=\"email\" />\n              <TextRow>\n                <TextInput\n                  name=\"comment\"\n                  autoCompleteType=\"off\"\n                  textContentType=\"none\"\n                  multiline\n                  numberOfLines={4}\n                  placeholder={formatMessage(messages.commentInput)}\n                />\n              </TextRow>\n              <StyledErrorField name=\"comment\" />\n              <PaddingView size={1} />\n            </>\n            <PrivacyRow>\n              <PrivacyText>\n                {formatMessage(messages.guideDescription, {\n                  guideText: (\n                    <PrivacyLinkText key=\"0\" onPress={openQuickStartGuide}>\n                      {formatMessage(messages.guideText)}\n                    </PrivacyLinkText>\n                  ),\n                  faq: (\n                    <PrivacyLinkText key=\"1\" onPress={openFaq}>\n                      {formatMessage(messages.faq)}\n                    </PrivacyLinkText>\n                  ),\n                  privacy: (\n                    <PrivacyLinkText key=\"2\" onPress={openPrivacy}>\n                      {formatMessage(messages.privacy)}\n                    </PrivacyLinkText>\n                  ),\n                  tos: (\n                    <PrivacyLinkText key=\"3\" onPress={openTos}>\n                      {formatMessage(messages.tos)}\n                    </PrivacyLinkText>\n                  ),\n                })}\n              </PrivacyText>\n            </PrivacyRow>\n            {showEmailButton && (\n              <>\n                <InfoRow>\n                  <InfoText>{formatMessage(messages.locationLogDesc)}</InfoText>\n                </InfoRow>\n                <SendButtonRow>\n                  <GradientButton\n                    text={formatMessage(messages.locationLogButton)}\n                    onPress={sendLocationLogs}\n                  />\n                </SendButtonRow>\n              </>\n            )}\n            <SendButtonRow>\n              <ScreenActionButtonField\n                disabled={isSending}\n                loading={isSending}\n                text={formatMessage(messages.send)}\n                onCancel={NavigatorService.back}\n                tintColor={colors.white}\n              />\n            </SendButtonRow>\n          </Form>\n          <ScreenActionModal\n            isVisible={shouldShowModal}\n            actionText={formatMessage(messages.ok)}\n            title={formatMessage(messages.feedbackSentTitle)}\n            message={formatMessage(messages.feedbackSentDescription)}\n            onAction={goBack}\n            onHide={goBack}\n          />\n        </ScrollView>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default FeedbackScreen;\n"],"mappings":"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","ignoreList":[]}