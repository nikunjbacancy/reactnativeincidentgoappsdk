{"version":3,"names":["_assets","require","_components","_screens","_interopRequireDefault","_reject","_react","_interopRequireWildcard","_reactIntl","_reactNative","_reactNativeRootToast","_hooks","_navigation","_actions","_messages","_OrganizationItem","_selectors","_styles","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","OrganizationScreen","formatMessage","useIntl","isLoading","useSelector","makeSelectIsLoading","organizations","makeSelectUserOrganizations","getUserOrganizationsAction","useAction","getUserOrganizationsRequest","deleteUserOrganizationAction","deleteUserOrganizationRequest","useEffect","onDelete","organization","length","Toast","show","messages","alert","position","positions","CENTER","filteredOrganizations","reject","id","goToSelectOrganization","NavigatorService","navigate","Screens","Menu","Organization","SelectOrganizations","renderItem","itemInfo","createElement","item","Fragment","StatusBar","barStyle","backgroundColor","SafeAreaContainer","Header","title","LoadingIndicator","List","keyExtractor","org","_org$id","toString","data","extraData","AddButtonRow","ScreenActionButton","onCancel","back","onPress","text","addNewOrganization","tintColor","colors","white","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import { colors } from '../../../../assets';\nimport {\n  Header,\n  LoadingIndicator,\n  SafeAreaContainer,\n  ScreenActionButton,\n} from '../../../../components';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\nimport { Organization } from 'incident-code-core';\nimport reject from 'lodash/reject';\nimport React, { useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { ListRenderItemInfo, StatusBar } from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { OrganizationSelection } from 'types';\nimport { useAction, useSelector } from '../../../../utils/hooks';\nimport NavigatorService from '../../../../utils/navigation';\n\nimport {\n  deleteUserOrganizationRequest,\n  getUserOrganizationsRequest,\n} from './actions';\nimport messages from './messages';\nimport OrganizationItem from './OrganizationItem';\nimport { makeSelectIsLoading, makeSelectUserOrganizations } from './selectors';\nimport { AddButtonRow, List } from './styles';\n\nconst OrganizationScreen = () => {\n  const { formatMessage } = useIntl();\n\n  const isLoading = useSelector(makeSelectIsLoading());\n  const organizations = useSelector(makeSelectUserOrganizations());\n\n  const getUserOrganizationsAction = useAction(getUserOrganizationsRequest);\n  const deleteUserOrganizationAction = useAction(deleteUserOrganizationRequest);\n\n  useEffect(() => {\n    getUserOrganizationsAction();\n  }, []);\n\n  const onDelete = (organization: Organization) => {\n    if (organizations.length === 1) {\n      Toast.show(formatMessage(messages.alert), {\n        position: Toast.positions.CENTER,\n      });\n      return;\n    }\n    const filteredOrganizations = reject(organizations, {\n      id: organization.id,\n    });\n    deleteUserOrganizationAction(filteredOrganizations);\n  };\n\n  const goToSelectOrganization = () => {\n    NavigatorService.navigate(Screens.Menu.Organization.SelectOrganizations);\n  };\n\n  const renderItem = (\n    itemInfo: ListRenderItemInfo<OrganizationSelection>,\n  ): React.ReactElement => (\n    <OrganizationItem onDelete={onDelete} organization={itemInfo.item} />\n  );\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <Header title={formatMessage(messages.title)} />\n        {isLoading ? (\n          <LoadingIndicator />\n        ) : (\n          <List\n            keyExtractor={(org: any) => org.id?.toString() || ''}\n            data={organizations}\n            extraData={organizations}\n            renderItem={renderItem}\n          />\n        )}\n        <AddButtonRow>\n          <ScreenActionButton\n            onCancel={NavigatorService.back}\n            onPress={goToSelectOrganization}\n            text={formatMessage(messages.addNewOrganization)}\n            tintColor={colors.white}\n          />\n        </AddButtonRow>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default OrganizationScreen;\n"],"mappings":"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","ignoreList":[]}