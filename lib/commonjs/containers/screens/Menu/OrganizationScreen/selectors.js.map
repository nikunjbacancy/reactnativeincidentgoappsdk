{"version":3,"names":["_reselect","require","_reducer","selectOrganizationScreenStateDomain","state","organizationScreen","initialState","makeSelectIsLoading","createSelector","isLoading","exports","makeSelectUserOrganizations","organizations","makeSelectOrganizationScreenState","subState","_default","default"],"sources":["selectors.ts"],"sourcesContent":["/**\n *\n * OrganizationScreen selectors\n *\n */\n\nimport { createSelector } from 'reselect';\nimport { RootState } from 'store/types';\n\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the OrganizationScreen state domain\n */\n\nconst selectOrganizationScreenStateDomain = (state: RootState) =>\n  state.organizationScreen || initialState;\n\n/**\n * Other specific selectors\n */\n\nconst makeSelectIsLoading = () =>\n  createSelector(\n    selectOrganizationScreenStateDomain,\n    ({ isLoading }) => isLoading,\n  );\n\nconst makeSelectUserOrganizations = () =>\n  createSelector(\n    selectOrganizationScreenStateDomain,\n    ({ organizations }) => organizations,\n  );\n\n/**\n * Default selector used by OrganizationScreen\n */\n\nconst makeSelectOrganizationScreenState = () =>\n  createSelector(selectOrganizationScreenStateDomain, subState => subState);\n\nexport default makeSelectOrganizationScreenState;\nexport { makeSelectIsLoading, makeSelectUserOrganizations };\n"],"mappings":";;;;;;AAMA,IAAAA,SAAA,GAAAC,OAAA;AAGA,IAAAC,QAAA,GAAAD,OAAA;AATA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;;AAEA,MAAME,mCAAmC,GAAIC,KAAgB,IAC3DA,KAAK,CAACC,kBAAkB,IAAIC,qBAAY;;AAE1C;AACA;AACA;;AAEA,MAAMC,mBAAmB,GAAGA,CAAA,KAC1B,IAAAC,wBAAc,EACZL,mCAAmC,EACnC,CAAC;EAAEM;AAAU,CAAC,KAAKA,SACrB,CAAC;AAACC,OAAA,CAAAH,mBAAA,GAAAA,mBAAA;AAEJ,MAAMI,2BAA2B,GAAGA,CAAA,KAClC,IAAAH,wBAAc,EACZL,mCAAmC,EACnC,CAAC;EAAES;AAAc,CAAC,KAAKA,aACzB,CAAC;;AAEH;AACA;AACA;AAFAF,OAAA,CAAAC,2BAAA,GAAAA,2BAAA;AAIA,MAAME,iCAAiC,GAAGA,CAAA,KACxC,IAAAL,wBAAc,EAACL,mCAAmC,EAAEW,QAAQ,IAAIA,QAAQ,CAAC;AAAC,IAAAC,QAAA,GAAAL,OAAA,CAAAM,OAAA,GAE7DH,iCAAiC","ignoreList":[]}