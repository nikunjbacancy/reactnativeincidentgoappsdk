{"version":3,"names":["api","_interopRequireWildcard","require","_reactNativePermissions","_reactNativeRootToast","_interopRequireDefault","_effects","_device","_error","_navigation","_actions","_constants","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","getContactsSaga","permission","isAndroid","PERMISSIONS","ANDROID","READ_CONTACTS","IOS","CONTACTS","permissionStatus","request","RESULTS","GRANTED","contacts","getContacts","put","getContactsSuccess","filteredContacts","error","getContactsFailure","handleError","addContact","payload","id","response","user","addContactSuccess","data","NavigatorService","back","_error$response","Toast","show","message","position","positions","CENTER","addContactFailure","addContactScreenSaga","takeLatest","GET_CONTACTS_REQUEST","ADD_CONTACT_REQUEST"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * AddContactScreen saga\n *\n */\n\nimport * as api from '../../../../../api';\nimport { AxiosResponse } from 'axios';\nimport { AppUserContact } from 'incident-code-core';\nimport { PERMISSIONS, request, RESULTS } from 'react-native-permissions';\nimport Toast from 'react-native-root-toast';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { getContacts, isAndroid } from '../../../../../utils/device';\nimport { handleError } from '../../../../../utils/error';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport {\n  addContactFailure,\n  addContactSuccess,\n  getContactsFailure,\n  getContactsSuccess,\n} from './actions';\nimport { ADD_CONTACT_REQUEST, GET_CONTACTS_REQUEST } from './constants';\nimport { AddContactRequestAction } from './types';\n\nfunction* getContactsSaga():any {\n  try {\n    const permission = isAndroid\n      ? PERMISSIONS.ANDROID.READ_CONTACTS\n      : PERMISSIONS.IOS.CONTACTS;\n    const permissionStatus = yield call(request, permission);\n    //(\"contacts permission ==>\",permission)\n    //(\"contacts permissionStatus ==>\",permissionStatus)\n    if (permissionStatus === RESULTS.GRANTED) {\n      const contacts: AppUserContact[] = yield call(getContacts);\n      //(\"contacts ==>\",contacts)\n      return yield put(\n        getContactsSuccess({\n          contacts,\n          filteredContacts: contacts,\n          permissionStatus,\n        }),\n      );\n    }\n    return yield put(\n      getContactsSuccess({\n        contacts: [],\n        filteredContacts: [],\n        permissionStatus,\n      }),\n    );\n  } catch (error: any) {\n    yield put(getContactsFailure(handleError(error)));\n  }\n}\n\nfunction* addContact({ payload }: AddContactRequestAction) {\n  delete payload.id; // to let api generate id\n\n  try {\n    const response: AxiosResponse<AppUserContact> = yield call(\n      api.user.addContact,\n      payload,\n    );\n    yield put(addContactSuccess(response.data));\n    yield call(NavigatorService.back);\n  } catch (error: any) {\n    Toast.show(error?.response?.data?.message, {\n      position: Toast.positions.CENTER,\n    });\n    yield put(addContactFailure(handleError(error)));\n  }\n}\n\nexport default function* addContactScreenSaga() {\n  yield takeLatest(GET_CONTACTS_REQUEST, getContactsSaga);\n  yield takeLatest(ADD_CONTACT_REQUEST, addContact);\n}\n"],"mappings":"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","ignoreList":[]}