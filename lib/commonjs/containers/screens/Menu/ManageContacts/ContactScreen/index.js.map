{"version":3,"names":["_components","require","_selectors","_screens","_interopRequireDefault","_react","_reactIntl","_reactNative","_reactNativeRootToast","_hooks","_navigation","_ContactItem","_messages","_NoData","_styles","e","__esModule","default","ContactScreen","formatMessage","useIntl","contacts","useSelector","makeSelectAppUserContacts","configs","makeSelectConfigs","isLoading","goToAddContact","length","contactLimit","NavigatorService","navigate","Screens","Menu","ManageContact","AddContact","Toast","show","messages","footerMax","position","positions","CENTER","renderItem","item","createElement","contact","Fragment","StatusBar","barStyle","backgroundColor","SafeAreaContainer","Header","title","InfoRow","InfoText","info","InfoWarning","warning","DescriptionText","List","keyExtractor","_contact$id","id","toString","data","ListEmptyComponent","LoadingIndicator","extraData","AddContactButtonRow","ScreenActionButton","onPress","text","addContactTitle","onCancel","back","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import {\n  Header,\n  LoadingIndicator,\n  SafeAreaContainer,\n  ScreenActionButton,\n} from '../../../../../components';\nimport {\n  makeSelectAppUserContacts,\n  makeSelectConfigs,\n} from '../../../../../containers/app/selectors';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport { AppUserContact } from 'incident-code-core';\nimport React, { FC } from 'react';\nimport { useIntl } from 'react-intl';\nimport { ListRenderItemInfo, StatusBar } from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { useSelector } from '../../../../../utils/hooks';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport ContactItem from './ContactItem';\nimport messages from './messages';\nimport NoData from './NoData';\nimport {\n  AddContactButtonRow,\n  DescriptionText,\n  InfoRow,\n  InfoText,\n  InfoWarning,\n  List,\n} from './styles';\n\nconst ContactScreen: FC = () => {\n  const { formatMessage } = useIntl();\n\n  const contacts = useSelector(makeSelectAppUserContacts());\n  const configs = useSelector(makeSelectConfigs());\n\n  const isLoading = false;\n  const goToAddContact = () => {\n    if (contacts.length < configs.contactLimit) {\n      NavigatorService.navigate(Screens.Menu.ManageContact.AddContact);\n    } else {\n      Toast.show(formatMessage(messages.footerMax), {\n        position: Toast.positions.CENTER,\n      });\n    }\n  };\n\n  const renderItem = ({\n    item,\n  }: ListRenderItemInfo<AppUserContact>): React.ReactElement => (\n    <ContactItem contact={item} />\n  );\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <Header title={formatMessage(messages.title)} />\n        <InfoRow>\n          <InfoText>{formatMessage(messages.info)}</InfoText>\n          <InfoWarning>{formatMessage(messages.warning)}</InfoWarning>\n        </InfoRow>\n        {!!contacts.length && (\n          <DescriptionText>{formatMessage(messages.title)}</DescriptionText>\n        )}\n        <List\n          keyExtractor={(contact: any) => contact.id?.toString() || ''}\n          data={contacts}\n          ListEmptyComponent={isLoading ? <LoadingIndicator /> : <NoData />}\n          extraData={contacts}\n          renderItem={renderItem}\n        />\n        <AddContactButtonRow>\n          <ScreenActionButton\n            onPress={goToAddContact}\n            text={formatMessage(messages.addContactTitle)}\n            onCancel={NavigatorService.back}\n          />\n        </AddContactButtonRow>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default ContactScreen;\n"],"mappings":"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","ignoreList":[]}