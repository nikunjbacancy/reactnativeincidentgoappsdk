{"version":3,"names":["api","_interopRequireWildcard","require","_effects","_error","_actions","_constants","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","toggleContactNotification","payload","user","updateContact","put","toggleContactNotificationSuccess","error","toggleContactNotificationFailure","handleError","deleteContact","deleteContactSuccess","deleteContactFailure","contactScreenSaga","takeLatest","TOGGLE_CONTACT_NOTIFICATION_REQUEST","DELETE_CONTACT_REQUEST"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * ContactScreen saga\n *\n */\n\nimport * as api from '../../../../../api';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../../utils/error';\n\nimport {\n  deleteContactFailure,\n  deleteContactSuccess,\n  toggleContactNotificationFailure,\n  toggleContactNotificationSuccess,\n} from './actions';\nimport {\n  DELETE_CONTACT_REQUEST,\n  TOGGLE_CONTACT_NOTIFICATION_REQUEST,\n} from './constants';\nimport {\n  DeleteContactRequestAction,\n  ToggleContactNotificationRequestAction,\n} from './types';\n\nexport function* toggleContactNotification({\n  payload,\n}: ToggleContactNotificationRequestAction) {\n  try {\n    yield call(api.user.updateContact, payload);\n    yield put(toggleContactNotificationSuccess(payload));\n  } catch (error: any) {\n    yield put(toggleContactNotificationFailure(handleError(error)));\n  }\n}\n\nexport function* deleteContact({ payload }: DeleteContactRequestAction) {\n  try {\n    yield call(api.user.deleteContact, payload);\n    yield put(deleteContactSuccess(payload));\n  } catch (error: any) {\n    yield put(deleteContactFailure(handleError(error)));\n  }\n}\n\nexport default function* contactScreenSaga() {\n  yield takeLatest(\n    TOGGLE_CONTACT_NOTIFICATION_REQUEST,\n    toggleContactNotification,\n  );\n  yield takeLatest(DELETE_CONTACT_REQUEST, deleteContact);\n}\n"],"mappings":";;;;;;;;AAMA,IAAAA,GAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAEA,IAAAG,QAAA,GAAAH,OAAA;AAMA,IAAAI,UAAA,GAAAJ,OAAA;AAGqB,SAAAK,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAP,wBAAAO,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAnBrB;AACA;AACA;AACA;AACA;;AAqBO,UAAUW,yBAAyBA,CAAC;EACzCC;AACsC,CAAC,EAAE;EACzC,IAAI;IACF,MAAM,IAAAJ,aAAI,EAACxB,GAAG,CAAC6B,IAAI,CAACC,aAAa,EAAEF,OAAO,CAAC;IAC3C,MAAM,IAAAG,YAAG,EAAC,IAAAC,yCAAgC,EAACJ,OAAO,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOK,KAAU,EAAE;IACnB,MAAM,IAAAF,YAAG,EAAC,IAAAG,yCAAgC,EAAC,IAAAC,kBAAW,EAACF,KAAK,CAAC,CAAC,CAAC;EACjE;AACF;AAEO,UAAUG,aAAaA,CAAC;EAAER;AAAoC,CAAC,EAAE;EACtE,IAAI;IACF,MAAM,IAAAJ,aAAI,EAACxB,GAAG,CAAC6B,IAAI,CAACO,aAAa,EAAER,OAAO,CAAC;IAC3C,MAAM,IAAAG,YAAG,EAAC,IAAAM,6BAAoB,EAACT,OAAO,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOK,KAAU,EAAE;IACnB,MAAM,IAAAF,YAAG,EAAC,IAAAO,6BAAoB,EAAC,IAAAH,kBAAW,EAACF,KAAK,CAAC,CAAC,CAAC;EACrD;AACF;AAEe,UAAUM,iBAAiBA,CAAA,EAAG;EAC3C,MAAM,IAAAC,mBAAU,EACdC,8CAAmC,EACnCd,yBACF,CAAC;EACD,MAAM,IAAAa,mBAAU,EAACE,iCAAsB,EAAEN,aAAa,CAAC;AACzD","ignoreList":[]}