{"version":3,"names":["_assets","require","_components","_selectors","_react","_interopRequireWildcard","_reactIntl","_reactNative","_reactNativeRootToast","_interopRequireDefault","_hooks","_navigation","_actions","_constants","_messages","_selectors2","_styles","_validator","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","MyAccountScreen","formatMessage","useIntl","isKeyboardShow","setIsKeyboardShow","useState","firstName","lastName","portraitUrl","useSelector","makeSelectUser","isUpdating","makeSelectSelectedIsUpdating","uploadMessageType","makeSelectUploadMessageType","deletePortrait","useAction","deletePortraitRequest","savePortrait","updatePortraitRequest","clearMessage","clearMessageType","schema","UpdateNameSchema","initialValues","goBackWithMessage","Toast","show","messages","accountUpdated","position","positions","CENTER","NavigatorService","back","useEffect","subscriptions","Keyboard","addListener","forEach","s","_s$remove","remove","createElement","Fragment","StatusBar","barStyle","backgroundColor","SafeAreaContainer","ScrollView","contentContainerStyle","flex","keyboardShouldPersistTaps","keyboardDismissMode","Header","title","InfoRow","InfoText","info","ImageUpload","onUpload","onDelete","actionInfoType","Form","start","UPDATE_MY_ACCOUNT_NAME_REQUEST","resolve","UPDATE_MY_ACCOUNT_NAME_SUCCESS","reject","UPDATE_MY_ACCOUNT_NAME_FAILURE","validationSchema","onResolve","onReject","action","payload","message","BOTTOM","FormContent","DescriptionText","description","InputRow","NameInputField","name","autoCompleteType","textContentType","placeholder","firstNamePlaceholder","NameErrorField","lastNamePlaceholder","UpdateButtonRow","ScreenActionButtonField","disabled","loading","text","update","onCancel","tintColor","colors","white","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import { colors } from '../../../../assets';\nimport {\n  Form,\n  Header,\n  ImageUpload,\n  SafeAreaContainer,\n  ScreenActionButtonField,\n} from '../../../../components';\nimport { makeSelectUser } from '../../../../containers/app/selectors';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Keyboard, ScrollView, StatusBar, EmitterSubscription } from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction, useSelector } from '../../../../utils/hooks';\nimport NavigatorService from '../../../../utils/navigation';\n\nimport {\n  clearMessageType,\n  deletePortraitRequest,\n  updatePortraitRequest,\n} from './actions';\nimport {\n  UPDATE_MY_ACCOUNT_NAME_FAILURE,\n  UPDATE_MY_ACCOUNT_NAME_REQUEST,\n  UPDATE_MY_ACCOUNT_NAME_SUCCESS,\n} from './constants';\nimport messages from './messages';\nimport {\n  makeSelectSelectedIsUpdating,\n  makeSelectUploadMessageType,\n} from './selectors';\nimport {\n  DescriptionText,\n  FormContent,\n  InfoRow,\n  InfoText,\n  InputRow,\n  NameErrorField,\n  NameInputField,\n  UpdateButtonRow,\n} from './styles';\nimport UpdateNameSchema from './validator';\n\ninterface Params { }\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst MyAccountScreen: FC<Props> = () => {\n  const { formatMessage } = useIntl();\n  const [isKeyboardShow, setIsKeyboardShow] = useState(false);\n\n  const { firstName, lastName, portraitUrl } = useSelector(makeSelectUser());\n  const isUpdating = useSelector(makeSelectSelectedIsUpdating());\n  const uploadMessageType = useSelector(makeSelectUploadMessageType());\n  const deletePortrait = useAction(deletePortraitRequest);\n  const savePortrait = useAction(updatePortraitRequest);\n  const clearMessage = useAction(clearMessageType);\n\n  const schema = UpdateNameSchema(formatMessage);\n  const initialValues = {\n    firstName,\n    lastName,\n  };\n\n  const goBackWithMessage = () => {\n    Toast.show(formatMessage(messages.accountUpdated), {\n      position: Toast.positions.CENTER,\n    });\n    NavigatorService.back();\n  };\n\n  useEffect(() => {\n    if (uploadMessageType) {\n      return () => {\n        clearMessage();\n      };\n    }\n    return;\n  }, [uploadMessageType]);\n\n  useEffect(() => {\n    let subscriptions: EmitterSubscription[];\n    subscriptions = [\n      Keyboard.addListener(\n        'keyboardDidShow',\n        () => setIsKeyboardShow(true),\n      ),\n      Keyboard.addListener(\n        'keyboardDidHide',\n        () => setIsKeyboardShow(false),\n      )\n    ];\n\n    return () => {\n      subscriptions.forEach((s) => s?.remove?.());\n    }\n  }, []);\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <ScrollView\n          contentContainerStyle={{ flex: 1 }}\n          keyboardShouldPersistTaps=\"always\"\n          keyboardDismissMode=\"on-drag\"\n        >\n          <Header title={formatMessage(messages.title)} />\n          <InfoRow>\n            <InfoText>{formatMessage(messages.info)}</InfoText>\n          </InfoRow>\n          {!isKeyboardShow && (\n            <ImageUpload\n              portraitUrl={portraitUrl}\n              onUpload={savePortrait}\n              onDelete={deletePortrait}\n              actionInfoType={uploadMessageType}\n            />\n          )}\n          <Form\n            start={UPDATE_MY_ACCOUNT_NAME_REQUEST}\n            resolve={UPDATE_MY_ACCOUNT_NAME_SUCCESS}\n            reject={UPDATE_MY_ACCOUNT_NAME_FAILURE}\n            initialValues={initialValues}\n            validationSchema={schema}\n            onResolve={goBackWithMessage}\n            onReject={action =>\n              Toast.show(action.payload.message, {\n                position: Toast.positions.BOTTOM,\n              })\n            }\n          >\n            <FormContent>\n              <DescriptionText>\n                {formatMessage(messages.description)}\n              </DescriptionText>\n              <InputRow>\n                <NameInputField\n                  name=\"firstName\"\n                  autoCompleteType=\"off\"\n                  textContentType=\"none\"\n                  placeholder={formatMessage(messages.firstNamePlaceholder)}\n                />\n              </InputRow>\n              <NameErrorField name=\"firstName\" />\n              <InputRow>\n                <NameInputField\n                  name=\"lastName\"\n                  autoCompleteType=\"off\"\n                  textContentType=\"none\"\n                  placeholder={formatMessage(messages.lastNamePlaceholder)}\n                />\n              </InputRow>\n              <NameErrorField name=\"lastName\" />\n            </FormContent>\n            <UpdateButtonRow>\n              <ScreenActionButtonField\n                disabled={isUpdating}\n                loading={isUpdating}\n                text={formatMessage(messages.update)}\n                onCancel={NavigatorService.back}\n                tintColor={colors.white}\n              />\n            </UpdateButtonRow>\n          </Form>\n        </ScrollView>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default MyAccountScreen;\n"],"mappings":"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","ignoreList":[]}