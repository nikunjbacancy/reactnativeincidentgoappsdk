{"version":3,"names":["api","_interopRequireWildcard","require","_effects","_actions","_constants","_reactNativeRootToast","_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","getNotificationList","payload","console","log","response","user","put","notificationListSuccess","data","error","Toast","show","message","position","positions","CENTER","duration","notificationListFailure","readAllNotification","readAllNotificationSuccess","readAllNotificationStatusFailure","updateReadUnreadStatus","isReadUnreadFrom","readFrom","updateReadUnreadNotificationStatus","updatedResponse","isReadFrom","notificationReadUnreadStatusSuccess","notificationReadUnreadStatusFailure","notificationListScreenSaga","takeLatest","NOTIFICATION_LIST_REQUEST","UPDATE_READUNREAD_STATUS_REQUEST","READ_ALL_NOTIFICATION_REQUEST"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * NotificationScreen saga\n *\n */\n\nimport * as api from '../../../../api';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../utils/error';\n\nimport {\n  notificationListFailure,\n  notificationListSuccess,\n  notificationReadUnreadStatusSuccess,\n  notificationReadUnreadStatusFailure,\n  readAllNotificationSuccess,\n  readAllNotificationStatusFailure\n} from './actions';\nimport { NOTIFICATION_LIST_REQUEST, READ_ALL_NOTIFICATION_REQUEST, UPDATE_READUNREAD_STATUS_REQUEST } from './constants';\nimport { NotificationListRequestAction } from './types';\nimport Toast from 'react-native-root-toast';\n\nexport function* getNotificationList({\n  payload,\n}: NotificationListRequestAction) {\n  try {\n    console.log(\"getNotificationList request===>\",payload)\n    const response = yield call(api.user.getNotificationList, payload);\n    // console.log(\"notification list response ===>\",JSON.stringify(response))\n    yield put(notificationListSuccess(response.data));\n  } catch (error) {\n    Toast.show((error as Error).message, {\n      position: Toast.positions.CENTER,\n      duration: 3000\n    });\n    yield put(notificationListFailure(error as Error));\n  }\n}\n\nexport function* readAllNotification({\n  payload,\n}: NotificationListRequestAction) {\n  try {\n    console.log(\"readall payload=>\",payload)\n    const response = yield call(api.user.readAllNotification, payload);\n    // console.log(\"readAllNotification response ===>\",JSON.stringify(response))\n    yield put(readAllNotificationSuccess(response.data));\n  } catch (error) {\n    Toast.show((error as Error).message, {\n      position: Toast.positions.CENTER,\n      duration: 3000\n    });\n    yield put(readAllNotificationStatusFailure(error as Error));\n  }\n}\n\n\nexport function* updateReadUnreadStatus({\n  payload,\n}: NotificationListRequestAction) {\n  try {\n    let isReadUnreadFrom = payload.readFrom\n    delete payload.readFrom\n    let response = yield call(api.user.updateReadUnreadNotificationStatus, payload);\n    const updatedResponse = {...response.data, isReadFrom: isReadUnreadFrom };\n    // console.log('*****update Read Unread Status API call successful:',JSON.stringify(updatedResponse));\n    yield put(notificationReadUnreadStatusSuccess(updatedResponse));\n  } catch (error) {\n    // console.log(\"updateReadUnreadStatus error===>\",error)\n    yield put(notificationReadUnreadStatusFailure(error as Error));\n  }\n}\n\nexport default function* notificationListScreenSaga() {\n  yield takeLatest(NOTIFICATION_LIST_REQUEST, getNotificationList);\n  yield takeLatest(UPDATE_READUNREAD_STATUS_REQUEST, updateReadUnreadStatus);\n  yield takeLatest(READ_ALL_NOTIFICATION_REQUEST, readAllNotification);\n}\n"],"mappings":"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","ignoreList":[]}