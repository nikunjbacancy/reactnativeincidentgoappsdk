{"version":3,"names":["_api","require","_event","_interopRequireDefault","_components","_types","_selectors","_screens","_filter","_forEach","_react","_interopRequireWildcard","_reactIntl","_reactNative","_hooks","_navigation","_notification","_actions","_messages","_selectors2","_styles","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","TipDetailScreen","navigation","getParam","incidentParam","showChat","tipId","formatMessage","useIntl","badges","setBadges","useState","cameraRef","useRef","getIncidentVideosAction","useAction","getIncidentVideosRequest","showCallModalAction","showCallModal","hideCallModalAction","hideCallModal","showChatModalAction","showChatModal","hideChatModalAction","hideChatModal","uploadVideoAction","uploadVideoRequest","addMessageAction","addMessage","sendMessageAction","sendMessageRequest","getIncidentAction","getIncidentRequest","incidentVideos","useSelector","makeSelectIncidentVideos","organization","makeSelectOrganization","isLoading","makeSelectIsLoading","shouldShowCallModal","makeSelectShouldShowCallModal","shouldShowChatModal","makeSelectShouldShowChatModal","tipCameraMode","makeSelectTipCameraMode","messages","makeSelectMessages","incident","makeSelectIncident","isVideoPaused","setIsVideoPaused","categoryConfig","useIncidentCategoryConfig","category","useEffect","id","organizationId","getBadges","then","notificationBadges","filter","notificationAdded","event","on","AppEvent","OnNotificationBadge","messageAdded","message","addBadge","OnMessageAdded","onIncidentUpdated","incidentId","setTimeout","Alert","alert","tipDetailMessages","tipClosed","tipClosedDetail","text","ok","onPress","backToMyTips","resolved","cancelable","OnIncidentUpdated","clean","_incident$id","off","twilio","removeChannelEvents","toString","handleRecordFinished","useCallback","videoUri","handleShowChatModal","TipCameraMode","video","_cameraRef$current","current","pausePreview","removeBadge","handleHideChatModal","_cameraRef$current2","resumePreview","tipEvent","myTips","Screens","Menu","Tips","MyTips","incidentResolved","isResolved","NavigatorService","navigate","Closed","Active","handleSendMessage","messagesToSent","forEach","createElement","LoadingIndicator","Fragment","StatusBar","barStyle","backgroundColor","SafeAreaContainer","BackButtonContainer","BackButton","back","CategoryContainer","CategoryImage","source","uri","imageUrl","OrganizationContainer","OrganizationName","name","CategoryContent","TipStatusIcon","active","CategoryName","display","TipCamera","ref","isRecordEnabled","camera","onPhonePress","onChatPress","onRecordFinished","CallModal","onShow","onHide","isVisible","hideModal","ChatModal","isReadMode","onMessageSent","_default","exports"],"sources":["index.tsx"],"sourcesContent":["/* eslint-disable no-unused-expressions,@typescript-eslint/no-misused-promises */\nimport { AppEvent, twilio } from '../../../../../api';\nimport event from '../../../../../api/event';\nimport {\n  CallModal,\n  ChatModal,\n  LoadingIndicator,\n  SafeAreaContainer,\n  TipCamera,\n  TipStatusIcon,\n} from '../../../../../components';\nimport { TipCameraMode } from '../../../../../components/TipCamera/types';\nimport { makeSelectTipCameraMode } from '../../../../../containers/app/selectors';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport { Id, Incident } from 'incident-code-core';\nimport filter from 'lodash/filter';\nimport forEach from 'lodash/forEach';\nimport React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Alert, StatusBar } from 'react-native';\nimport { RNCamera } from 'react-native-camera';\nimport { IMessage as GiftedChatMessage } from 'react-native-gifted-chat';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction, useIncidentCategoryConfig, useSelector } from '../../../../../utils/hooks';\nimport NavigatorService from '../../../../../utils/navigation';\nimport { addBadge, getBadges, removeBadge } from '../../../../../utils/notification';\n\nimport {\n  addMessage,\n  getIncidentRequest,\n  getIncidentVideosRequest,\n  hideCallModal,\n  hideChatModal,\n  sendMessageRequest,\n  showCallModal,\n  showChatModal,\n  uploadVideoRequest,\n} from './actions';\nimport tipDetailMessages from './messages';\nimport {\n  makeSelectIncident,\n  makeSelectIncidentVideos,\n  makeSelectIsLoading,\n  makeSelectMessages,\n  makeSelectOrganization,\n  makeSelectShouldShowCallModal,\n  makeSelectShouldShowChatModal,\n} from './selectors';\nimport {\n  BackButton,\n  BackButtonContainer,\n  CategoryContainer,\n  CategoryContent,\n  CategoryImage,\n  CategoryName,\n  OrganizationContainer,\n  OrganizationName,\n} from './styles';\n\ninterface Params {\n  incident: Incident;\n  showChat: boolean;\n}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst TipDetailScreen: FC<Props> = ({ navigation: { getParam } }) => {\n  const incidentParam = getParam('incident');\n  const showChat = getParam('showChat');\n  const tipId = getParam('tipId');\n\n  const { formatMessage } = useIntl();\n\n  const [badges, setBadges] = useState<Id[]>([]);\n\n  const cameraRef = useRef<RNCamera>(null);\n\n  const getIncidentVideosAction = useAction(getIncidentVideosRequest);\n  const showCallModalAction = useAction(showCallModal);\n  const hideCallModalAction = useAction(hideCallModal);\n  const showChatModalAction = useAction(showChatModal);\n  const hideChatModalAction = useAction(hideChatModal);\n  const uploadVideoAction = useAction(uploadVideoRequest);\n  const addMessageAction = useAction(addMessage);\n  const sendMessageAction = useAction(sendMessageRequest);\n  const getIncidentAction = useAction(getIncidentRequest);\n\n  const incidentVideos = useSelector(makeSelectIncidentVideos());\n  const organization = useSelector(makeSelectOrganization());\n  const isLoading = useSelector(makeSelectIsLoading());\n  const shouldShowCallModal = useSelector(makeSelectShouldShowCallModal());\n  const shouldShowChatModal = useSelector(makeSelectShouldShowChatModal());\n  const tipCameraMode = useSelector(makeSelectTipCameraMode());\n  const messages = useSelector(makeSelectMessages());\n  const incident = useSelector(makeSelectIncident());\n\n  const [isVideoPaused, setIsVideoPaused] = useState(false);\n\n  const categoryConfig = useIncidentCategoryConfig(incident?.category);\n\n  useEffect(() => {\n    if (incidentParam == null) {\n      getIncidentAction(tipId);\n    } else {\n      getIncidentAction(incidentParam.id);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (incident) {\n      getIncidentVideosAction({\n        incident,\n        organizationId: incident.organization,\n      });\n      getBadges().then((notificationBadges: Id[]) => {\n        setBadges(filter(notificationBadges, n => n === incident.id));\n      });\n      const notificationAdded = (notificationBadges: Id[]) => {\n        setBadges(filter(notificationBadges, n => n === incident.id));\n      };\n      event.on(AppEvent.OnNotificationBadge, notificationAdded);\n      const messageAdded = async (message: GiftedChatMessage) => {\n        //(\"================ tip detail screen index message added ================\",message)\n        await addBadge(incident.id as Id);\n        addMessageAction(message);\n      };\n      event.on(AppEvent.OnMessageAdded, messageAdded);\n      const onIncidentUpdated = (incidentId: Id) => {\n        if (incident.id === incidentId) {\n          hideChatModalAction();\n          setTimeout(\n            () => {\n              Alert.alert(\n                formatMessage(tipDetailMessages.tipClosed),\n                formatMessage(tipDetailMessages.tipClosedDetail),\n                [\n                  {\n                    text: formatMessage(tipDetailMessages.ok),\n                    onPress: () => backToMyTips({ resolved: true }),\n                  },\n                ],\n                { cancelable: false },\n              );\n            },\n            shouldShowChatModal ? 5000 : 1500,\n          );\n        }\n      };\n      event.on(AppEvent.OnIncidentUpdated, onIncidentUpdated);\n      return function clean() {\n        event.off(AppEvent.OnNotificationBadge, notificationAdded);\n        event.off(AppEvent.OnMessageAdded, messageAdded);\n        event.off(AppEvent.OnIncidentUpdated, onIncidentUpdated);\n        twilio.removeChannelEvents(incident.id?.toString() || '');\n      };\n    }\n    return;\n  }, [incident, setBadges]);\n\n  useEffect(() => {\n    if (!isLoading && showChat) {\n      setTimeout(() => {\n        showChatModalAction();\n      }, 1300);\n    }\n  }, [isLoading]);\n\n  const handleRecordFinished = useCallback(\n    (videoUri: string) => {\n      uploadVideoAction({ videoUri, incident });\n    },\n    [incident],\n  );\n\n  const handleShowChatModal = useCallback(async () => {\n    if (tipCameraMode === TipCameraMode.video) {\n      return setIsVideoPaused(true);\n    }\n    setTimeout(() => {\n      cameraRef?.current?.pausePreview();\n    }, 100);\n    await removeBadge(incident?.id as Id);\n  }, [incident, tipCameraMode]);\n\n  const handleHideChatModal = useCallback(async () => {\n    if (tipCameraMode === TipCameraMode.video) {\n      return setIsVideoPaused(false);\n    }\n    cameraRef?.current?.resumePreview();\n    await removeBadge(incident?.id as Id);\n  }, [incident, tipCameraMode]);\n\n  const backToMyTips = useCallback(\n    (tipEvent?: { resolved?: boolean }) => {\n      const myTips = Screens.Menu.Tips.MyTips;\n      const incidentResolved = tipEvent?.resolved || incident?.isResolved;\n      NavigatorService.navigate(\n        incidentResolved ? myTips.Closed : myTips.Active,\n      );\n    },\n    [incident],\n  );\n\n  const handleSendMessage = useCallback(\n    (messagesToSent: GiftedChatMessage[]) => {\n      forEach(messagesToSent, message => {\n        sendMessageAction({ incident, message });\n      });\n    },\n    [incident],\n  );\n\n  if (isLoading) return <LoadingIndicator />;\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <BackButtonContainer>\n          <BackButton back={backToMyTips} />\n          <CategoryContainer>\n            <CategoryImage source={{ uri: categoryConfig.imageUrl }} />\n          </CategoryContainer>\n          <OrganizationContainer>\n            <OrganizationName>{organization.name}</OrganizationName>\n            <CategoryContent>\n              <TipStatusIcon active={!incident?.isResolved} />\n              <CategoryName>{categoryConfig.display}</CategoryName>\n            </CategoryContent>\n          </OrganizationContainer>\n        </BackButtonContainer>\n        <TipCamera\n          ref={cameraRef}\n          isRecordEnabled={!incident?.isResolved}\n          tipCameraMode={TipCameraMode.camera}\n          incidentVideos={incidentVideos}\n          onPhonePress={showCallModalAction}\n          onChatPress={showChatModalAction}\n          onRecordFinished={handleRecordFinished}\n          isVideoPaused={isVideoPaused}\n          badges={badges}\n        />\n        <CallModal\n          onShow={handleShowChatModal}\n          onHide={handleHideChatModal}\n          isVisible={shouldShowCallModal}\n          hideModal={hideCallModalAction}\n          organization={organization}\n        />\n        <ChatModal\n          isReadMode={incident?.isResolved}\n          onShow={handleShowChatModal}\n          onHide={handleHideChatModal}\n          isVisible={shouldShowChatModal}\n          hideModal={hideChatModalAction}\n          organization={organization}\n          messages={messages}\n          onMessageSent={handleSendMessage}\n        />\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default TipDetailScreen;\n"],"mappings":"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","ignoreList":[]}