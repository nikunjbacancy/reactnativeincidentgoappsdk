{"version":3,"names":["api","_interopRequireWildcard","require","_incidentCodeCore","_map","_interopRequireDefault","_reverse","_effects","_chat","_error","_location","_actions","_types","_actions2","_constants","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","getIncidentVideos","payload","videosResponse","incidents","getVideos","incident","id","organizationResponse","organizations","getOrganization","organizationId","put","getMessagesRequest","organization","data","getIncidentVideosSuccess","videos","reverse","error","getIncidentVideosFailure","handleError","uploadVideo","spawn","uploadVideoInParallel","options","getAmazonS3Options","addIncidentVideo","isUploaded","checkVideoUploadCompletion","uploadVideoSuccess","logger","debug","warn","uploadVideoFailure","amazonOptionsResponse","getAmazonOptions","videoUri","response","getVideo","delay","Error","getMessages","isResolved","getChat","messages","map","message","convertToGiftedChatMessage","getMessagesSuccess","_incident$id","hasChat","location","getCachedFineGeoPoint","startChat","category","comment","twilio","toString","resetState","getTipsRequest","tipStatus","TipStatus","Active","paging","Closed","getMessagesFailure","sendMessage","_location$coordinates","_location$coordinates2","_geocodeResponse$data","_payload$incident$id","geocodeResponse","user","getAddress","coordinates","address","results","formatted_address","messageAttributes","text","addLocation","sendMessageSuccess","sendMessageFailure","_incident$location","_incident$location2","l1","getCachedFineLatLng","l2","lng","lat","distance","geoDistance","getIncident","getIncidentSuccess","getIncidentFailure","tipDetailScreenSaga","takeLatest","GET_INCIDENT_VIDEOS_REQUEST","UPLOAD_VIDEO_REQUEST","GET_MESSAGES_REQUEST","SEND_MESSAGE_REQUEST","GET_INCIDENT_REQUEST"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * TipDetailScreen saga\n *\n */\n\nimport * as api from '../../../../../api';\nimport { AxiosResponse } from 'axios';\nimport {\n  geoDistance,\n  Id,\n  Incident,\n  IncidentChat,\n  IncidentVideo,\n  IncidentVideoUploadOptions,\n  LatLng,\n  Organization,\n  QueryResult,\n} from 'incident-code-core';\nimport { GeoPoint } from 'incident-code-core/dist/types';\nimport map from 'lodash/map';\nimport reverse from 'lodash/reverse';\nimport { IMessage as GiftedChatMessage } from 'react-native-gifted-chat';\nimport { call, delay, put, spawn, takeLatest } from 'redux-saga/effects';\nimport { GeocodeResponse } from '../../../../../types';\nimport { convertToGiftedChatMessage } from '../../../../../utils/chat';\nimport { handleError } from '../../../../../utils/error';\nimport { getCachedFineGeoPoint, getCachedFineLatLng } from '../../../../../utils/location';\n\nimport { getTipsRequest, resetState } from '../MyTipsScreen/actions';\nimport { TipStatus } from '../MyTipsScreen/types';\nimport {\n  addIncidentVideo,\n  getIncidentFailure,\n  getIncidentSuccess,\n  getIncidentVideosFailure,\n  getIncidentVideosSuccess,\n  getMessagesFailure,\n  getMessagesRequest,\n  getMessagesSuccess,\n  sendMessageFailure,\n  sendMessageSuccess,\n  uploadVideoFailure,\n  uploadVideoSuccess,\n} from './actions';\nimport {\n  GET_INCIDENT_REQUEST,\n  GET_INCIDENT_VIDEOS_REQUEST,\n  GET_MESSAGES_REQUEST,\n  SEND_MESSAGE_REQUEST,\n  UPLOAD_VIDEO_REQUEST,\n} from './constants';\nimport {\n  GetIncidentRequestAction,\n  GetIncidentVideosRequestAction,\n  GetMessagesRequestAction,\n  SendMessageRequestAction,\n  UploadVideoRequestAction,\n  UploadVideoRequestPayload,\n} from './types';\n\nfunction* getIncidentVideos({ payload }: GetIncidentVideosRequestAction) {\n  try {\n    const videosResponse: AxiosResponse<QueryResult<\n      IncidentVideo\n    >> = yield call(api.incidents.getVideos, payload.incident.id);\n\n    const organizationResponse: AxiosResponse<Organization> = yield call(\n      api.organizations.getOrganization,\n      payload.organizationId,\n    );\n\n    yield put(\n      getMessagesRequest({\n        incident: payload.incident,\n        organization: organizationResponse.data,\n      }),\n    );\n\n    yield put(\n      getIncidentVideosSuccess({\n        videos: reverse(videosResponse.data.data || []),\n        organization: organizationResponse.data,\n      }),\n    );\n  } catch (error: any) {\n    yield put(getIncidentVideosFailure(handleError(error)));\n  }\n}\n\nexport function* uploadVideo({ payload }: UploadVideoRequestAction) {\n  yield spawn(uploadVideoInParallel, payload);\n}\n\nfunction* uploadVideoInParallel(payload: UploadVideoRequestPayload):any {\n  try {\n    const options = yield call(getAmazonS3Options, payload);\n\n    // add empty video card\n    yield put(addIncidentVideo({ id: options.id, isUploaded: false }));\n\n    yield call(api.incidents.uploadVideo, options);\n\n    yield call(checkVideoUploadCompletion, options);\n\n    yield put(uploadVideoSuccess());\n\n    api.logger.debug('UploadVideo', 'Success');\n  } catch (error: any) {\n    api.logger.warn('UploadVideo', 'Upload Failed', error);\n    yield put(uploadVideoFailure(handleError(error)));\n  }\n}\n\nfunction* getAmazonS3Options(payload: UploadVideoRequestPayload) {\n  try {\n    // get amazon S3 authorization\n    const amazonOptionsResponse: AxiosResponse<IncidentVideoUploadOptions> = yield call(\n      api.incidents.getAmazonOptions,\n      payload.incident,\n      payload.videoUri,\n    );\n\n    api.logger.debug('Get S3 options', 'Success', amazonOptionsResponse.data);\n\n    return amazonOptionsResponse.data;\n  } catch (error: any) {\n    api.logger.warn('Get S3 options', 'Failed', error);\n    yield put(uploadVideoFailure(handleError(error)));\n    return;\n  }\n}\n\nfunction* checkVideoUploadCompletion(options: IncidentVideoUploadOptions) {\n  for (let i = 0; i < 10; i += 1) {\n    try {\n      const response: AxiosResponse<IncidentVideo> = yield call(\n        api.incidents.getVideo,\n        options.id,\n      );\n      if (response.data.isUploaded) {\n        yield put(addIncidentVideo(response.data));\n        api.logger.debug('CheckVideoUpload', 'Success', response.data);\n        return;\n      }\n    } catch (error: any) {\n      api.logger.warn('CheckVideoUpload', 'Failed', error);\n    } finally {\n      yield delay(2000);\n    }\n  }\n  throw new Error('Upload video to S3 failed');\n}\n\nfunction* getMessages({\n  payload: { incident, organization },\n}: GetMessagesRequestAction):any {\n  try {\n    if (incident.isResolved) {\n      const response: AxiosResponse<IncidentChat> = yield call(\n        api.incidents.getChat,\n        incident.id as Id,\n      );\n      if (response.data && response.data.messages) {\n        // //(\"-response.data.messages--->\",JSON.stringify(response.data.messages))\n        const messages: GiftedChatMessage[] = map(\n          response.data.messages,\n          message => convertToGiftedChatMessage(message),\n        );\n        yield put(getMessagesSuccess(messages));\n      }\n    } else {\n      if (!incident.hasChat) {\n        const location = yield call(getCachedFineGeoPoint);\n        yield call(api.incidents.startChat, {\n          incident: incident.id as Id,\n          organization: organization.id as Id,\n          category: incident.category,\n          comment: incident.comment,\n          location,\n        });\n      }\n      const messages: GiftedChatMessage[] = yield call(\n        api.twilio.getMessages,\n        incident.id?.toString() || '',\n      );\n      yield put(getMessagesSuccess(messages));\n      yield put(resetState());\n      yield put(getTipsRequest({ tipStatus: TipStatus.Active, paging: false }));\n      yield put(getTipsRequest({ tipStatus: TipStatus.Closed, paging: false }));\n    }\n  } catch (error: any) {\n    yield put(getMessagesFailure(handleError(error)));\n  }\n}\n\nfunction* sendMessage({ payload }: SendMessageRequestAction) {\n  try {\n    const location: GeoPoint = yield call(getCachedFineGeoPoint);\n    const geocodeResponse: AxiosResponse<GeocodeResponse> = yield call(\n      api.user.getAddress,\n      location.coordinates?.[1] || 0,\n      location.coordinates?.[0] || 0,\n    );\n    const address = geocodeResponse.data.results[0]?.formatted_address || '';\n    const messageAttributes = {\n      location,\n      address,\n    };\n    yield call(\n      api.twilio.sendMessage,\n      payload.incident.id?.toString() || '',\n      payload.message.text,\n      messageAttributes,\n    );\n    yield call(addLocation, payload.incident);\n    yield put(sendMessageSuccess());\n  } catch (error: any) {\n    yield put(sendMessageFailure(handleError(error)));\n  }\n}\n\nfunction* addLocation(incident: Incident) {\n  const l1: LatLng = yield call(getCachedFineLatLng);\n  const l2: LatLng = {\n    lng: incident.location?.coordinates?.[0] || l1.lng,\n    lat: incident.location?.coordinates?.[1] || l1.lat,\n  };\n\n  const distance = geoDistance(l1.lat, l1.lng, l2.lat, l2.lng);\n\n  // don't send if the change is no more than 20 meter\n  if (distance >= 20) {\n    yield call(api.incidents.addLocation, incident.id as Id, l1);\n  }\n}\n\nfunction* getIncident({ payload }: GetIncidentRequestAction) {\n  try {\n    const response: AxiosResponse<Incident> = yield call(\n      api.incidents.getIncident,\n      payload || '',\n    );\n    yield put(getIncidentSuccess(response.data));\n  } catch (error: any) {\n    yield put(getIncidentFailure(handleError(error)));\n  }\n}\n\nexport default function* tipDetailScreenSaga() {\n  yield takeLatest(GET_INCIDENT_VIDEOS_REQUEST, getIncidentVideos);\n  yield takeLatest(UPLOAD_VIDEO_REQUEST, uploadVideo);\n  yield takeLatest(GET_MESSAGES_REQUEST, getMessages);\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n  yield takeLatest(GET_INCIDENT_REQUEST, getIncident);\n}\n"],"mappings":"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","ignoreList":[]}