{"version":3,"names":["_api","require","_assets","_components","_screens","_interopRequireDefault","_filter","_react","_interopRequireWildcard","_reactNative","_reactNavigation","_hooks","_navigation","_notification","_actions","_NoData","_selectors","_styles","_TipItem","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","MyTipsScreen","isFocused","navigation","getParam","tipStatus","badges","setBadges","useState","getTipsRequestAction","useAction","getTipsRequest","tips","useSelector","makeSelectTips","isLoading","makeSelectIsLoading","useEffect","paging","getBadges","then","notificationBadges","onIncidentUpdated","notificationAdded","event","on","AppEvent","OnNotificationBadge","OnIncidentUpdated","componentDidUnMount","off","onEndReached","useCallback","hasMoreData","goToTipDetail","incident","NavigatorService","navigate","Screens","Menu","Tips","TipDetail","renderReportItem","item","_item$id","createElement","TouchableOpacity","onPress","filter","b","id","key","toString","Fragment","StatusBar","barStyle","backgroundColor","SafeAreaContainer","Container","List","data","keyExtractor","_item$id2","renderItem","ListEmptyComponent","LoadingIndicator","onEndReachedThreshold","BackButtonRow","ScreenActionButton","onCancel","Home","Escort","EscortType","tintColor","colors","white","_default","exports","withNavigationFocus"],"sources":["index.tsx"],"sourcesContent":["import { AppEvent, event } from '../../../../../api';\nimport { colors } from '../../../../../assets';\nimport {\n  LoadingIndicator,\n  SafeAreaContainer,\n  ScreenActionButton,\n} from '../../../../../components';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport { Id, Incident } from 'incident-code-core';\nimport filter from 'lodash/filter';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { StatusBar, TouchableOpacity } from 'react-native';\nimport { ScreenProps } from 'react-native-screens';\nimport { withNavigationFocus } from 'react-navigation';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction, useSelector } from '../../../../../utils/hooks';\nimport NavigatorService from '../../../../../utils/navigation';\nimport { getBadges } from '../../../../../utils/notification';\n\nimport { getTipsRequest } from './actions';\nimport NoData from './NoData';\nimport { makeSelectIsLoading, makeSelectTips } from './selectors';\nimport { BackButtonRow, Container, List } from './styles';\nimport TipItem from './TipItem';\nimport { TipStatus } from './types';\n\ninterface ItemIncident {\n  item: Incident;\n}\ninterface Params {\n  tipStatus: TipStatus;\n}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> {\n  isFocused: boolean;\n}\n\nconst MyTipsScreen: FC<Props> = ({ isFocused, navigation: { getParam } }) => {\n  const tipStatus = getParam('tipStatus');\n\n  const [badges, setBadges] = useState<Id[]>([]);\n\n  const getTipsRequestAction = useAction(getTipsRequest);\n\n  const tips = useSelector(makeSelectTips());\n  const isLoading = useSelector(makeSelectIsLoading());\n\n  useEffect(() => {\n    getTipsRequestAction({ tipStatus, paging: false });\n  }, [isFocused, tipStatus]);\n\n  useEffect(() => {\n    getBadges().then((notificationBadges: Id[]) => {\n      setBadges(notificationBadges);\n    });\n    const onIncidentUpdated = () => {\n      getTipsRequestAction({ tipStatus, paging: false });\n    };\n    const notificationAdded = (notificationBadges: Id[]) => {\n      setBadges(notificationBadges);\n    };\n    event.on(AppEvent.OnNotificationBadge, notificationAdded);\n    event.on(AppEvent.OnIncidentUpdated, onIncidentUpdated);\n    return function componentDidUnMount() {\n      event.off(AppEvent.OnNotificationBadge, notificationAdded);\n      event.off(AppEvent.OnIncidentUpdated, onIncidentUpdated);\n    };\n  }, [setBadges]);\n\n  const onEndReached = useCallback(() => {\n    if (tips[tipStatus].hasMoreData) {\n      getTipsRequestAction({ tipStatus, paging: true });\n    }\n  }, [tips, tipStatus]);\n\n  const goToTipDetail = (incident: Incident) => {\n    NavigatorService.navigate(Screens.Menu.Tips.TipDetail, { incident });\n  };\n\n  const renderReportItem = ({ item }: ItemIncident) => {\n    return (\n      <TouchableOpacity onPress={() => goToTipDetail(item)}>\n        <TipItem\n          badges={filter(badges, b => b === item?.id)}\n          key={item?.id?.toString()}\n          incident={item}\n        />\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <Container>\n          <List\n            data={tips[tipStatus].data}\n            keyExtractor={(item: any) => item.id?.toString() || ''}\n            renderItem={renderReportItem}\n            ListEmptyComponent={isLoading ? <LoadingIndicator /> : <NoData />}\n            onEndReached={onEndReached}\n            onEndReachedThreshold={2}\n          />\n        </Container>\n        <BackButtonRow>\n          <ScreenActionButton\n            onCancel={() =>\n              NavigatorService.navigate(Screens.Home.Escort.EscortType)\n            }\n            tintColor={colors.white}\n          />\n        </BackButtonRow>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default withNavigationFocus(MyTipsScreen);\n"],"mappings":"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","ignoreList":[]}