{"version":3,"names":["_assets","require","_components","_react","_interopRequireWildcard","_reactIntl","_reactNative","_location","_navigation","_interopRequireDefault","_screens","_messages","_styles","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ActivateGPSScreen","formatMessage","useIntl","gpsEnabled","setGpsEnabled","useState","goToNextScreen","useCallback","NavigatorService","navigate","Screens","Home","Index","handleActivateGPS","isEnabled","activateGPS","messages","gpsDisabled","createElement","Fragment","StatusBar","barStyle","backgroundColor","Background","SafeAreaContainer","LogoRow","Image","source","images","logoWithText","TitleRow","TitleText","title","ActivateGPSRow","ActivateGPSButton","onPress","text","ContinueButtonRow","ContinueButton","disabled","continue","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../assets';\nimport { SafeAreaContainer } from '../../../../components';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Image, StatusBar } from 'react-native';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { activateGPS } from '../../../../utils/location';\nimport NavigatorService from '../../../../utils/navigation';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\nimport messages from './messages';\nimport {\n  ActivateGPSButton,\n  ActivateGPSRow,\n  Background,\n  ContinueButton,\n  ContinueButtonRow,\n  LogoRow,\n  TitleRow,\n  TitleText,\n} from './styles';\n\ninterface Params { }\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst ActivateGPSScreen: FC<Props> = () => {\n  const { formatMessage } = useIntl();\n  const [gpsEnabled, setGpsEnabled] = useState(false);\n\n  const goToNextScreen = useCallback(async () => {\n    // const isEnabled = await checkBluetoothStatus();\n    // // //(\"checkBluetoothStatus -->\",isEnabled)\n    // // //(\"nextScreen -->\",nextScreen)\n    // if (isEnabled) {\n    //   const beaconInfo = await setUpBeaconInfo();\n    //   beaconRegistration(beaconInfo);\n    // }\n    // navigate(nextScreen);\n    //(\"navigate to home screen\")\n    NavigatorService.navigate(Screens.Home.Index);\n    \n  }, []);\n\n  const handleActivateGPS = useCallback(async () => {\n    const isEnabled = await activateGPS(\n      formatMessage(messages.gpsEnabled),\n      formatMessage(messages.gpsDisabled),\n    );\n    // //(\"isEnabled=>\",isEnabled)\n    setGpsEnabled(isEnabled);\n  }, []);\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <Background />\n      <SafeAreaContainer>\n        <LogoRow>\n          <Image source={images.logoWithText()} />\n        </LogoRow>\n        <TitleRow>\n          <TitleText>{formatMessage(messages.title)}</TitleText>\n        </TitleRow>\n        <ActivateGPSRow>\n          <ActivateGPSButton\n            onPress={handleActivateGPS}\n            text={formatMessage(messages.activateGPS)}\n          />\n        </ActivateGPSRow>\n        <ContinueButtonRow>\n          <ContinueButton\n            disabled={!gpsEnabled}\n            onPress={goToNextScreen}\n            text={formatMessage(messages.continue)}\n          />\n        </ContinueButtonRow>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default ActivateGPSScreen;\n"],"mappings":"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","ignoreList":[]}