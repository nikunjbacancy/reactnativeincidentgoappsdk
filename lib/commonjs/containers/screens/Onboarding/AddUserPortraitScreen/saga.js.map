{"version":3,"names":["api","_interopRequireWildcard","require","_actions","_incidentCodeCore","_effects","_error","_actions2","_constants","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","updatePortrait","payload","options","getAmazonS3Options","user","uploadPortrait","CompletePortraitUpload","put","updatePortraitSuccess","error","updatePortraitFailure","handleError","filePath","amazonOptionsResponse","getAmazonUploadOptions","logger","debug","data","warn","response","completeUpload","updateUserPortrait","delay","Error","myAccountScreenSaga","takeLatest","UPDATE_PORTRAIT_REQUEST"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * AddUserPortraitScreen saga\n *\n */\nimport * as api from '../../../../api';\nimport { AxiosResponse } from 'axios';\nimport { updateUserPortrait } from '../../../../containers/app/actions';\nimport {\n  delay,\n  FileUploadOptions,\n  IncidentVideoUploadOptions,\n} from 'incident-code-core';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../utils/error';\n\nimport { updatePortraitFailure, updatePortraitSuccess } from './actions';\nimport { UPDATE_PORTRAIT_REQUEST } from './constants';\nimport { UpdatePortraitRequestAction } from './types';\n\nexport function* updatePortrait({ payload }: UpdatePortraitRequestAction):any {\n  try {\n    const options: any = yield call(getAmazonS3Options, payload);\n    yield call(api.user.uploadPortrait, options);\n    yield call(CompletePortraitUpload, options);\n    yield put(updatePortraitSuccess());\n  } catch (error: any) {\n    yield put(updatePortraitFailure(handleError(error)));\n  }\n}\n\nfunction* getAmazonS3Options(filePath: string) {\n  try {\n    // get amazon S3 authorization\n    const amazonOptionsResponse: AxiosResponse<IncidentVideoUploadOptions> = yield call(\n      api.user.getAmazonUploadOptions,\n      filePath,\n    );\n\n    api.logger.debug('Get S3 options', 'Success', amazonOptionsResponse.data);\n\n    return amazonOptionsResponse.data;\n  } catch (error: any) {\n    api.logger.warn('Get S3 options', 'Failed', error);\n    yield put(updatePortraitFailure(handleError(error)));\n    return;\n  }\n}\n\nfunction* CompletePortraitUpload(options: FileUploadOptions) {\n  try {\n    const response: AxiosResponse<string> = yield call(\n      api.user.completeUpload,\n      options,\n    );\n    if (response.data) {\n      api.logger.debug('ImageUpload', 'Success');\n      yield put(updateUserPortrait(response.data));\n      return;\n    }\n  } catch (error) {\n    api.logger.warn('ImageUpload', 'Failed', error);\n  } finally {\n    yield delay(2000);\n  }\n  throw new Error('Upload image to S3 failed');\n}\n\nexport default function* myAccountScreenSaga() {\n  yield takeLatest(UPDATE_PORTRAIT_REQUEST, updatePortrait);\n}\n"],"mappings":"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","ignoreList":[]}