{"version":3,"names":["_assets","require","_components","_actions","_selectors","_screens","_interopRequireDefault","_react","_interopRequireWildcard","_reactIntl","_reactNative","_device","_hooks","_location","_navigation","_asyncStorage","_actions2","_messages","_selectors2","_styles","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","WarningScreen","navigation","replace","navigate","formatMessage","useIntl","incidentRecordData","useSelector","makeSelectIncidentEscortData","incidentPassiveData","makeSelectPassiveEscortData","showPanicInfo","makeSelectShowPanicInfo","setLocation","useAction","UpdateLocationData","setShowPanicInfo","makeSetShowPanicInfo","startDuressRequest","triggerDuressRequest","isLogout","setLogout","useState","useEffect","NavigatorService","Screens","Home","Escort","Record","Countdown","id","procedure","isSafetyTimer","AsyncStorage","getItem","then","value","val","nextScreen","makeSelectNextOnboardingScreen","goToNextScreen","useCallback","goTo","Index","isAndroid","Onboarding","PermissionLocation","isActive","checkGPSStatus","ActivateGPS","SignIn","call911","makeCall","triggerDuress","loggedIn","createElement","LoadingIndicator","Fragment","StatusBar","barStyle","backgroundColor","Background","SafeView","ScrollWrapper","LogoRow","Image","source","images","logoWhiteWithText","WarningRow","WarningText","messages","message","WarningButton","onPress","text","DuressButton","isPanicMode","onFill","duress","View","DuressInfo","LocationText","locationMessage","ContinueButtonRow","ContinueButton","button","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../assets';\nimport { LoadingIndicator } from '../../../../components';\nimport { UpdateLocationData } from '../../../../containers/app/actions';\nimport {\n  makeSelectIncidentEscortData,\n  makeSelectNextOnboardingScreen,\n  makeSelectPassiveEscortData\n} from '../../../../containers/app/selectors';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Image, StatusBar, View } from 'react-native';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { isAndroid, makeCall } from '../../../../utils/device';\nimport { useAction, useSelector } from '../../../../utils/hooks';\nimport { checkGPSStatus } from '../../../../utils/location';\nimport NavigatorService from '../../../../utils/navigation';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { makeSetShowPanicInfo, triggerDuressRequest } from './actions';\nimport messages from './messages';\nimport { makeSelectShowPanicInfo } from './selectors';\n\nimport {\n  Background,\n  ContinueButton,\n  ContinueButtonRow,\n  DuressButton,\n  DuressInfo,\n  LogoRow,\n  ScrollWrapper,\n  WarningButton,\n  WarningRow,\n  WarningText,\n  LocationText,\n  SafeView\n} from './styles';\n\n\ninterface Params { }\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst WarningScreen: FC<Props> = ({ navigation: { replace, navigate } }) => {\n  const { formatMessage } = useIntl();\n\n  const incidentRecordData = useSelector(makeSelectIncidentEscortData());\n  const incidentPassiveData = useSelector(makeSelectPassiveEscortData());\n  const showPanicInfo = useSelector(makeSelectShowPanicInfo());\n  const setLocation = useAction(UpdateLocationData);\n  const setShowPanicInfo = useAction(makeSetShowPanicInfo);\n  const startDuressRequest = useAction(triggerDuressRequest);\n  var [isLogout, setLogout] = useState(false);\n\n  // var isLogout = false\n\n  useEffect(() => {\n\n    if (incidentRecordData) {\n      NavigatorService.navigate(Screens.Home.Escort.Record, incidentRecordData);\n    } else if (incidentPassiveData) {\n      NavigatorService.navigate(Screens.Home.Escort.Countdown, {\n        id: incidentPassiveData.id,\n        procedure: incidentPassiveData.procedure,\n        isSafetyTimer: incidentPassiveData.isSafetyTimer,\n      });\n    }\n\n    //check logout param\n    AsyncStorage.getItem(\"isLogout\").then(async (value) => {\n      let val = value == null ? false : true\n      setLogout(val)\n    });\n\n\n  }, []);\n\n  const nextScreen = useSelector(makeSelectNextOnboardingScreen());\n\n  // const goToNextScreen = useCallback(async () => {\n\n  //   const goTo = nextScreen === Screens.Home.Index ? navigate : replace;\n\n  //   // if (isAndroid && nextScreen === Screens.Home.Index) {\n  //   if (isAndroid && (nextScreen === Screens.Onboarding.PermissionLocation || nextScreen === Screens.Home.Index)) {\n\n  //     const isActive = await checkGPSStatus();\n  //     const isEnabled = await checkBluetoothStatus();\n  //     if (isEnabled) {\n  //       AsyncStorage.getItem(BEACON_CONNECTED).then(async (value) => {\n  //         if (JSON.parse(value) != true) {\n  //           const beaconInfo = await setUpBeaconInfo();\n  //           beaconRegistration(beaconInfo);\n  //         }\n  //       });\n  //     }\n  //     //(\"-isActive->\",isActive)\n  //     if (!isActive) return goTo(Screens.Onboarding.ActivateGPS);\n  //     // return goTo(Screens.Home.Index);\n  //     return NavigatorService.navigate(Screens.Home.Index);\n  //   }\n  //   goTo(nextScreen);\n  // }, []);\n\n\n  const goToNextScreen = useCallback(async () => {\n\n    // //(\"next screen is --->\", nextScreen)\n\n    const goTo = nextScreen === Screens.Home.Index ? navigate : replace;\n\n    // if (isAndroid && nextScreen === Screens.Home.Index) {\n    if (isAndroid && (nextScreen === Screens.Onboarding.PermissionLocation || nextScreen === Screens.Home.Index)) {\n\n      const isActive = await checkGPSStatus();\n      // const isEnabled = await checkBluetoothStatus();\n      // if (isEnabled) {\n      //   AsyncStorage.getItem(BEACON_CONNECTED).then(async (value) => {\n      //     if (JSON.parse(value) != true) {\n      //       const beaconInfo = await setUpBeaconInfo();\n      //       beaconRegistration(beaconInfo);\n      //     }\n      //   });\n      // }\n      if (!isActive) return goTo(Screens.Onboarding.ActivateGPS);\n      AsyncStorage.getItem(\"isLogout\").then(async (value) => {\n        if (value != null) {\n          replace(Screens.Onboarding.SignIn);\n        } else {\n          NavigatorService.navigate(Screens.Home.Index)\n        }\n      });\n    }\n    else {\n      //check logout param\n      AsyncStorage.getItem(\"isLogout\").then(async (value) => {\n        //(\"value--->\", value)\n        if (value != null) {\n          replace(Screens.Onboarding.SignIn);\n        } else {\n          goTo(nextScreen);\n        }\n      });\n    }\n    return null;\n  }, []);\n\n  // //here check token is Valid or not, based on validation next screen decide\n  // const checkBeforeMoveToNexScreen = () => {\n\n  //   // if (isValid) {\n  //   //   goToNextScreen()\n  //   // }\n  //   // else {\n  //   //   goToNextScreen()\n  //   // }\n\n  //   goToNextScreen()\n  // }\n\n  const call911 = () => makeCall('911');\n\n  const triggerDuress = useCallback(() => {\n    startDuressRequest(setLocation);\n  }, [startDuressRequest, setLocation]);\n\n  const loggedIn = () => {\n    if (isLogout) {\n      return false\n    }\n    else {\n      return !(nextScreen in Screens.Onboarding) && nextScreen === 'Home';\n    }\n  };\n\n  return incidentRecordData ? (\n    <LoadingIndicator />\n  ) : (\n    <>\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"transparent\" />\n      <Background />\n      <SafeView>\n        <ScrollWrapper>\n          <LogoRow>\n            <Image source={images.logoWhiteWithText()} />\n          </LogoRow>\n          <WarningRow>\n            <WarningText>{formatMessage(messages.message)}</WarningText>\n            <WarningButton\n              onPress={call911}\n              text={formatMessage(messages.call911)}\n            />\n          </WarningRow>\n          {loggedIn() && (\n            <WarningRow>\n              <DuressButton\n                isPanicMode={false}\n                onPress={setShowPanicInfo}\n                onFill={triggerDuress}\n                text={formatMessage(messages.duress)}\n              />\n            </WarningRow>\n          )}\n          <View>\n            <WarningRow>{showPanicInfo && <DuressInfo />}</WarningRow>\n          </View>\n          <LocationText>{formatMessage(messages.locationMessage)}</LocationText>\n          <ContinueButtonRow>\n            <ContinueButton\n              onPress={goToNextScreen}\n              text={formatMessage(messages.button)}\n            />\n          </ContinueButtonRow>\n        </ScrollWrapper>\n      </SafeView>\n    </>\n  );\n};\n\nexport default WarningScreen;\n\n"],"mappings":"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","ignoreList":[]}