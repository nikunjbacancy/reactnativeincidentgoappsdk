{"version":3,"names":["_filter","_interopRequireDefault","require","_some","_reselect","_reducer","e","__esModule","default","selectOrganizationScreenStateDomain","state","selectOrganizationScreen","initialState","exports","makeSelectOrganizations","createSelector","organizations","makeSelectSelectedOrganizations","filter","isSelected","makeSelectEnableNextButton","some","makeSelectError","error","makeSelectErrorMessage","errorMessage","makeSelectSelectOrganizationScreenState","subState","_default"],"sources":["selectors.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen selectors\n *\n */\n\nimport filter from 'lodash/filter';\nimport some from 'lodash/some';\nimport { createSelector } from 'reselect';\nimport { RootState } from 'store/types';\n\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the SelectOrganizationScreen state domain\n */\n\nconst selectOrganizationScreenStateDomain = (state: RootState) =>\n  state.selectOrganizationScreen || initialState;\n\n/**\n * Other specific selectors\n */\n\nconst makeSelectOrganizations = () =>\n  createSelector(\n    selectOrganizationScreenStateDomain,\n    ({ organizations }) => organizations,\n  );\n\nconst makeSelectSelectedOrganizations = () =>\n  createSelector(selectOrganizationScreenStateDomain, ({ organizations }) =>\n    filter(organizations, { isSelected: true }),\n  );\n\nconst makeSelectEnableNextButton = () =>\n  createSelector(selectOrganizationScreenStateDomain, ({ organizations }) =>\n    some(organizations, { isSelected: true }),\n  );\n\nconst makeSelectError = () =>\n  createSelector(selectOrganizationScreenStateDomain, ({ error }) => error);\n\nconst makeSelectErrorMessage = () =>\n  createSelector(\n    selectOrganizationScreenStateDomain,\n    ({ errorMessage }) => errorMessage,\n  );\n\n/**\n * Default selector used by SelectOrganizationScreen\n */\n\nconst makeSelectSelectOrganizationScreenState = () =>\n  createSelector(selectOrganizationScreenStateDomain, subState => subState);\n\nexport default makeSelectSelectOrganizationScreenState;\nexport {\n  selectOrganizationScreenStateDomain,\n  makeSelectOrganizations,\n  makeSelectSelectedOrganizations,\n  makeSelectEnableNextButton,\n  makeSelectError,\n  makeSelectErrorMessage,\n};\n"],"mappings":";;;;;;AAMA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAGA,IAAAG,QAAA,GAAAH,OAAA;AAAyC,SAAAD,uBAAAK,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAXzC;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;;AAEA,MAAMG,mCAAmC,GAAIC,KAAgB,IAC3DA,KAAK,CAACC,wBAAwB,IAAIC,qBAAY;;AAEhD;AACA;AACA;AAFAC,OAAA,CAAAJ,mCAAA,GAAAA,mCAAA;AAIA,MAAMK,uBAAuB,GAAGA,CAAA,KAC9B,IAAAC,wBAAc,EACZN,mCAAmC,EACnC,CAAC;EAAEO;AAAc,CAAC,KAAKA,aACzB,CAAC;AAACH,OAAA,CAAAC,uBAAA,GAAAA,uBAAA;AAEJ,MAAMG,+BAA+B,GAAGA,CAAA,KACtC,IAAAF,wBAAc,EAACN,mCAAmC,EAAE,CAAC;EAAEO;AAAc,CAAC,KACpE,IAAAE,eAAM,EAACF,aAAa,EAAE;EAAEG,UAAU,EAAE;AAAK,CAAC,CAC5C,CAAC;AAACN,OAAA,CAAAI,+BAAA,GAAAA,+BAAA;AAEJ,MAAMG,0BAA0B,GAAGA,CAAA,KACjC,IAAAL,wBAAc,EAACN,mCAAmC,EAAE,CAAC;EAAEO;AAAc,CAAC,KACpE,IAAAK,aAAI,EAACL,aAAa,EAAE;EAAEG,UAAU,EAAE;AAAK,CAAC,CAC1C,CAAC;AAACN,OAAA,CAAAO,0BAAA,GAAAA,0BAAA;AAEJ,MAAME,eAAe,GAAGA,CAAA,KACtB,IAAAP,wBAAc,EAACN,mCAAmC,EAAE,CAAC;EAAEc;AAAM,CAAC,KAAKA,KAAK,CAAC;AAACV,OAAA,CAAAS,eAAA,GAAAA,eAAA;AAE5E,MAAME,sBAAsB,GAAGA,CAAA,KAC7B,IAAAT,wBAAc,EACZN,mCAAmC,EACnC,CAAC;EAAEgB;AAAa,CAAC,KAAKA,YACxB,CAAC;;AAEH;AACA;AACA;AAFAZ,OAAA,CAAAW,sBAAA,GAAAA,sBAAA;AAIA,MAAME,uCAAuC,GAAGA,CAAA,KAC9C,IAAAX,wBAAc,EAACN,mCAAmC,EAAEkB,QAAQ,IAAIA,QAAQ,CAAC;AAAC,IAAAC,QAAA,GAAAf,OAAA,CAAAL,OAAA,GAE7DkB,uCAAuC","ignoreList":[]}