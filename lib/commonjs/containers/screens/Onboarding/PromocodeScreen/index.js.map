{"version":3,"names":["_assets","require","_components","_react","_interopRequireWildcard","_reactIntl","_reactNative","_reactNativeRootToast","_interopRequireDefault","_hooks","_actions","_messages","_styles","_constants","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","PromoCodeScreen","navigation","getParam","goBack","formatMessage","useIntl","promoCodeData","initialValues","partnerCode","token","goBackToSignIn","useCallback","registerUserAction","useAction","registerUserRequest","input","setInput","useState","handleNext","params","createElement","Fragment","StatusBar","barStyle","backgroundColor","Background","SafeAreaContainer","ScrollView","contentContainerStyle","flex","keyboardShouldPersistTaps","keyboardDismissMode","LogoRow","BackButtonCol","IconButton","source","images","icBackDark","onPress","Image","logoWithText","TitleRow","TitleText","messages","title","Form","start","REGISTER_USER_REQUEST","resolve","reject","onReject","action","Toast","show","payload","message","position","positions","BOTTOM","InputRow","CodeTextField","name","keyboardAppearance","placeholder","codePlaceholder","value","onChangeText","ValidationRow","ValidationText","invalidCode","PaddingView","size","SubmitButtonRow","SubmitButtonField","text","next","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../assets';\nimport {\n  Form,\n  IconButton,\n  PaddingView,\n  SafeAreaContainer,\n  SubmitButtonField,\n} from '../../../../components';\n\nimport React, { FC, useCallback, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Image, ScrollView, StatusBar } from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction } from '../../../../utils/hooks';\nimport { registerUserRequest } from \"./actions\";\nimport messages from './messages';\nimport {\n  BackButtonCol,\n  Background,\n  CodeTextField,\n  InputRow,\n  LogoRow,\n  SubmitButtonRow,\n  TitleRow,\n  TitleText,\n  ValidationRow,\n  ValidationText\n} from './styles';\n\n\nimport { REGISTER_USER_REQUEST } from './constants';\n\n\ninterface Params {\n  phone: string;\n  promoCodeData: any;\n}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst PromoCodeScreen: FC<Props> = ({\n  navigation: { getParam, goBack },\n}) => {\n  const { formatMessage } = useIntl();\n\n  // const schema = PromoCodeSchema(formatMessage);\n\n  let promoCodeData = getParam('promoCodeData')\n\n  const initialValues = { partnerCode: '', token: promoCodeData.token };\n\n  const goBackToSignIn = useCallback(() => goBack(), []);\n\n  const registerUserAction = useAction(registerUserRequest);\n\n  const [input, setInput] = useState('');\n  const handleNext = useCallback(() => {\n    if (input === \"\") { return }\n    let params = { partnerCode: input, token: promoCodeData.token };\n    //(\"params-->\", params)\n    registerUserAction(params);\n  }, [input, setInput]);\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <Background />\n      <SafeAreaContainer>\n        <ScrollView\n          contentContainerStyle={{ flex: 1 }}\n          keyboardShouldPersistTaps=\"always\"\n          keyboardDismissMode=\"on-drag\"\n        >\n          <LogoRow>\n            <BackButtonCol>\n              <IconButton\n                source={images.icBackDark()}\n                onPress={goBackToSignIn}\n              />\n            </BackButtonCol>\n            <Image source={images.logoWithText()} />\n          </LogoRow>\n          <TitleRow>\n            <TitleText>\n              {formatMessage(messages.title)}\n            </TitleText>\n          </TitleRow>\n          <Form\n            start={REGISTER_USER_REQUEST}\n            resolve={\"\"}\n            reject={\"\"}\n            initialValues={initialValues}\n            // validationSchema={schema}\n            // onResolve={goToUpdateNameScreen}\n            onReject={action =>\n              Toast.show(action.payload.message, {\n                position: Toast.positions.BOTTOM,\n              })\n            }\n          >\n            <>\n              <InputRow>\n                <CodeTextField\n                  name=\"code\"\n                  keyboardAppearance=\"light\"\n                  placeholder={formatMessage(messages.codePlaceholder)}\n                  value={input}\n                  onChangeText={setInput}\n                />\n              </InputRow>\n              <ValidationRow>\n                <ValidationText>\n                  {formatMessage(messages.invalidCode)}\n                </ValidationText>\n              </ValidationRow>\n              {/* <CodeError>\n                <Text>{formatMessage(messages.invalidCode)}</Text>\n              </CodeError> */}\n              <PaddingView size={1} />\n            </>\n            <SubmitButtonRow>\n              <SubmitButtonField text={formatMessage(messages.next)}\n                onPress={handleNext}\n              />\n            </SubmitButtonRow>\n          </Form>\n        </ScrollView>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default PromoCodeScreen;\n"],"mappings":"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","ignoreList":[]}