{"version":3,"names":["_components","require","_screens","_interopRequireDefault","_react","_interopRequireWildcard","_reactIntl","_reactNative","_hooks","_actions","_messages","_PaginationDots","_selectors","_styles","_WelcomeSwiper","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","WelcomeScreen","navigation","replace","getParam","goBack","formatMessage","useIntl","fromFeedback","currentPage","useSelector","makeSelectCurrentPage","lastIndex","makeSelectLastIndex","welcomeItems","makeSelectWelcomeItems","changePageAction","useAction","changePage","nextPageAction","nextPage","finishWelcomeAction","finishWelcome","resetCurrentPageAction","resetCurrentPage","useEffect","componentWillUnmount","handleFinishWelcomeAction","Screens","Onboarding","SignIn","handleNextPageAction","createElement","Fragment","StatusBar","barStyle","backgroundColor","Background","SafeAreaContainer","index","onIndexChange","PaginationRow","size","BottomNav","SkipButton","onPress","text","messages","skip","NextButton","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import { SafeAreaContainer } from '../../../../components';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\nimport React, { FC, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { StatusBar } from 'react-native';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction, useSelector } from '../../../../utils/hooks';\n\nimport {\n  changePage,\n  finishWelcome,\n  nextPage,\n  resetCurrentPage,\n} from './actions';\nimport messages from './messages';\nimport PaginationDots from './PaginationDots';\nimport {\n  makeSelectCurrentPage,\n  makeSelectLastIndex,\n  makeSelectWelcomeItems,\n} from './selectors';\nimport {\n  Background,\n  BottomNav,\n  NextButton,\n  PaginationRow,\n  SkipButton,\n} from './styles';\nimport WelcomeSwiper from './WelcomeSwiper';\n\ninterface Params {\n  fromFeedback: boolean;\n}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> {}\n\nconst WelcomeScreen: FC<Props> = ({\n  navigation: { replace, getParam, goBack },\n}) => {\n  const { formatMessage } = useIntl();\n\n  const fromFeedback = getParam('fromFeedback');\n\n  const currentPage = useSelector(makeSelectCurrentPage());\n  const lastIndex = useSelector(makeSelectLastIndex());\n  const welcomeItems = useSelector(makeSelectWelcomeItems());\n\n  const changePageAction = useAction(changePage);\n  const nextPageAction = useAction(nextPage);\n  const finishWelcomeAction = useAction(finishWelcome);\n  const resetCurrentPageAction = useAction(resetCurrentPage);\n\n  useEffect(\n    () =>\n      function componentWillUnmount() {\n        resetCurrentPageAction();\n      },\n    [fromFeedback],\n  );\n\n  const handleFinishWelcomeAction = () => {\n    if (fromFeedback) return goBack();\n    finishWelcomeAction();\n    replace(Screens.Onboarding.SignIn);\n    return null;\n  };\n  const handleNextPageAction = () => {\n    if (currentPage + 1 > lastIndex - 1) {\n      if (fromFeedback) return goBack();\n      return handleFinishWelcomeAction();\n    }\n    nextPageAction();\n    return null;\n  };\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <Background />\n      <SafeAreaContainer>\n        <WelcomeSwiper\n          index={currentPage}\n          onIndexChange={changePageAction}\n          welcomeItems={welcomeItems}\n        />\n        <PaginationRow>\n          <PaginationDots size={lastIndex} currentPage={currentPage} />\n        </PaginationRow>\n        <BottomNav>\n          <SkipButton\n            onPress={handleFinishWelcomeAction}\n            text={formatMessage(messages.skip)}\n          />\n          <NextButton onPress={handleNextPageAction} />\n        </BottomNav>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default WelcomeScreen;\n"],"mappings":"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","ignoreList":[]}