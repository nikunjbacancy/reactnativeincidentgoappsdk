{"version":3,"names":["_assets","require","_components","_react","_interopRequireWildcard","_reactIntl","_reactNative","_reactNativeRootToast","_interopRequireDefault","_hooks","_actions","_constants","_messages","_styles","_validator","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","SignInCodeScreen","navigation","getParam","goBack","formatMessage","useIntl","schema","SignInCodeSchema","initialValues","code","phone","isSDK","resendCodeValues","goBackToSignIn","useCallback","resendCodeAction","useAction","resendCode","handleResendCode","createElement","Fragment","StatusBar","barStyle","backgroundColor","Background","SafeAreaContainer","ScrollView","contentContainerStyle","flex","keyboardShouldPersistTaps","keyboardDismissMode","LogoRow","BackButtonCol","IconButton","source","images","icBackDark","onPress","Image","logoWithText","TitleRow","TitleText","messages","title","ResendText","key","Form","start","LOGIN_REQUEST","resolve","LOGIN_SUCCESS","reject","LOGIN_FAILURE","validationSchema","onReject","action","Toast","show","payload","message","position","positions","BOTTOM","InputRow","CodeTextField","name","keyboardType","keyboardAppearance","placeholder","codePlaceholder","CodeError","PaddingView","size","SubmitButtonRow","SubmitButtonField","text","next","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../assets';\nimport {\n  Form,\n  IconButton,\n  PaddingView,\n  SafeAreaContainer,\n  SubmitButtonField,\n} from '../../../../components';\nimport React, { FC, useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Image, ScrollView, StatusBar } from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction } from '../../../../utils/hooks';\nimport { resendCode } from './actions';\nimport { LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS } from './constants';\nimport messages from './messages';\nimport {\n  BackButtonCol,\n  Background,\n  CodeError,\n  CodeTextField,\n  InputRow,\n  LogoRow,\n  ResendText,\n  SubmitButtonRow,\n  TitleRow,\n  TitleText,\n} from './styles';\nimport SignInCodeSchema from './validator';\n\ninterface Params {\n  phone: string;\n}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst SignInCodeScreen: FC<Props> = ({\n  navigation: { getParam, goBack },\n}) => {\n  const { formatMessage } = useIntl();\n  const schema = SignInCodeSchema(formatMessage);\n  const initialValues = { code: '', phone: getParam('phone'), isSDK: true };\n  const resendCodeValues = { phone: getParam('phone'), isSDK: true };\n  const goBackToSignIn = useCallback(() => goBack(), []);\n\n  // const goToUpdateNameScreen = useCallback(\n  //   () => navigate(Screens.Onboarding.PromoCode),\n  //   [navigate],\n  // );\n\n  const resendCodeAction = useAction(resendCode);\n  // const loginRequestAction = useAction(LOGIN_REQUEST);\n  const handleResendCode = useCallback(() => {\n    resendCodeAction(resendCodeValues);\n  }, []);\n\n  // const handleValidateClick = useCallback(() => {\n  //   initialValues.code = ''\n  //   loginRequestAction(initialValues);\n  // }, []);\n\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <Background />\n      <SafeAreaContainer>\n        <ScrollView\n          contentContainerStyle={{ flex: 1 }}\n          keyboardShouldPersistTaps=\"always\"\n          keyboardDismissMode=\"on-drag\"\n        >\n          <LogoRow>\n            <BackButtonCol>\n              <IconButton\n                source={images.icBackDark()}\n                onPress={goBackToSignIn}\n              />\n            </BackButtonCol>\n            <Image source={images.logoWithText()} />\n          </LogoRow>\n          <TitleRow>\n            <TitleText>\n              {formatMessage(messages.title, {\n                resendCode: (\n                  <ResendText key=\"1\" onPress={handleResendCode}>\n                    {formatMessage(messages.resendCode)}\n                  </ResendText>\n                ),\n              })}\n            </TitleText>\n          </TitleRow>\n          <Form\n            start={LOGIN_REQUEST}\n            resolve={LOGIN_SUCCESS}\n            reject={LOGIN_FAILURE}\n            initialValues={initialValues}\n            validationSchema={schema}\n            // onResolve={goToUpdateNameScreen}\n            onReject={action =>\n              Toast.show(action.payload.message, {\n                position: Toast.positions.BOTTOM,\n              })\n            }\n          >\n            <>\n              <InputRow>\n                <CodeTextField\n                  name=\"code\"\n                  keyboardType=\"number-pad\"\n                  keyboardAppearance=\"light\"\n                  placeholder={formatMessage(messages.codePlaceholder)}\n                />\n              </InputRow>\n              <CodeError name=\"code\" />\n              <PaddingView size={1} />\n              \n            </>\n            <SubmitButtonRow>\n              <SubmitButtonField text={formatMessage(messages.next)} />\n            </SubmitButtonRow>\n          </Form>\n        </ScrollView>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default SignInCodeScreen;\n"],"mappings":"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","ignoreList":[]}