{"version":3,"names":["_components","require","_react","_interopRequireWildcard","_reactIntl","_assets","_reactNative","_messages","_interopRequireDefault","_styles","_navigation","_screens","_api","_permission","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","SettingScreen","formatMessage","useIntl","useEffect","requestActivityRecognitionPermission","getLocationActionPermissions","event","on","AppEvent","OnBatteryLevelReceived","onBatteryLevelReceived","batteryLevel","createElement","Fragment","StatusBar","barStyle","backgroundColor","SafeAreaContainer","Header","title","messages","InfoRow","Background","Step1","step1","Step1_Desc","step1_desc","ViewTutorial","Tutorial","Timing","timing","ViewStep2","step2","Loader","ViewStep22","BackButtonRow","ScreenActionButton","onCancel","NavigatorService","navigate","Screens","Home","Escort","EscortType","tintColor","colors","white","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import {\n    Header,\n    SafeAreaContainer,\n    ScreenActionButton,\n} from '../../../../components';\n\nimport React, { FC, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { colors } from '../../../../assets';\nimport { StatusBar } from 'react-native';\n// import Toast from 'react-native-root-toast';\nimport messages from './messages';\nimport {\n    InfoRow, Background, Step1, Step1_Desc, Tutorial,\n    ViewTutorial, Timing, ViewStep2, Loader, ViewStep22, BackButtonRow\n} from './styles';\n// import { beaconRegistrationRequest } from './actions';\n// import { useAction } from '../../../../utils/hooks';\n// import { SET_BEACON_DETAILS } from '../../../../containers/screens/Home/Settings/constants';\n// import NetInfo from \"@react-native-community/netinfo\";\nimport NavigatorService from '../../../../utils/navigation';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\n// import { checkBluetoothStatus, setUpBeaconInfo } from '../../../../utils/beacon';\nimport { AppEvent, event } from '../../../../api';\nimport { getLocationActionPermissions, requestActivityRecognitionPermission } from '../../../../utils/permission';\n\nconst SettingScreen: FC = () => {\n    const { formatMessage } = useIntl();\n    // const beaconRegistration = useAction(beaconRegistrationRequest);\n    // const [beaconDetails, setBeaconDetails] = useState({});\n    // const [isBeaconConnected, setIsBeaconConnected] = useState(false);\n    // const [batteryLevel, setBatteryLevel] = useState(\"\");\n\n    useEffect(() => {\n        requestActivityRecognitionPermission();\n        getLocationActionPermissions();\n        // connectToBeacon();\n        // event.on(AppEvent.OnBeaconConnection, OnBeaconConnection);\n        event.on(AppEvent.OnBatteryLevelReceived, onBatteryLevelReceived);\n    }, []);\n\n    // const OnBeaconConnection = (connectivity: boolean) => {\n    //     setIsBeaconConnected(connectivity);\n    //     if (!connectivity) {\n    //         setBatteryLevel(\"\");\n    //     }\n    // }\n\n    const onBatteryLevelReceived = (batteryLevel: string) => {\n        if (batteryLevel != \"0\") {\n            // setBatteryLevel(batteryLevel);\n        }\n    }\n\n    // const connectToBeacon = async () => {\n    //     const isEnabled = await checkBluetoothStatus();\n    //     if (isEnabled) {\n    //         AsyncStorage.getItem(SET_BEACON_DETAILS).then(async (beacons) => {\n    //             if (beacons) {\n    //                 setBeaconDetails(JSON.parse(beacons));\n    //             }\n    //             else {\n    //                 const beaconInfo = await setUpBeaconInfo();\n    //                 setBeaconDetails(beaconInfo);\n    //             }\n    //         });\n    //     }\n    // };\n\n    // const registerBeacon = async () => {\n    //     NetInfo.fetch().then(async state => {\n    //         switch (state.isConnected) {\n    //             case true:\n    //                 if (!isBeaconConnected) {\n    //                     // beaconRegistration(beaconDetails);\n    //                 }\n    //                 break;\n    //             case false:\n    //                 Toast.show(\"Please check your internet connection.\", { position: Toast.positions.BOTTOM })\n    //                 break;\n    //         }\n    //     });\n    // }\n\n    return (\n        <>\n            <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n            <SafeAreaContainer>\n                <Header title={formatMessage(messages.title)} />\n                <InfoRow>\n                    <Background>\n                        <Step1>{formatMessage(messages.step1)}</Step1>\n                        <Step1_Desc>{formatMessage(messages.step1_desc)}</Step1_Desc>\n                        <ViewTutorial>\n                            <Tutorial />\n                            <Timing>{formatMessage(messages.timing)}</Timing>\n                        </ViewTutorial>\n                    </Background>\n\n                    <Background>\n                        <ViewStep2>\n                            <Step1>{formatMessage(messages.step2)}</Step1>\n                            {\n                                // Object.keys(beaconDetails).length != 0 ? <ViewStep22 /> : <Loader /> \n                                <Loader />\n                            }\n                        </ViewStep2>\n\n                        {\n                            // Object.keys(beaconDetails).length != 0 ? <ViewStep2>\n                            //     <Container>\n                            //         <PlusImage />\n                            //         {\n                            //             batteryLevel != \"\" ? <ViewStep21>\n                            //                 {/* <DeviceDetail>{beaconDetails?.name}</DeviceDetail> */}\n                            //                 <BatteryLevel>{formatMessage(messages.batteryLevel) + \": \" + batteryLevel + \"%\"}</BatteryLevel>\n                            //             </ViewStep21>\n                            //                 : <ViewStep21>\n                            //                     {/* <DeviceDetail>{beaconDetails?.name}</DeviceDetail> */}\n                            //                 </ViewStep21>\n                            //         }\n                            //     </Container>\n                            //     {/* {isBeaconConnected ? <Bullet>{formatMessage(messages.bullet)}</Bullet> :\n                            //         <Bullet_Red>{formatMessage(messages.bullet)}</Bullet_Red>} */}\n                            // </ViewStep2>\n                            //     : <ViewStep22 />\n                            <ViewStep22 />\n                        }\n                    </Background>\n                </InfoRow>\n\n                <BackButtonRow>\n                    <ScreenActionButton\n                        onCancel={() =>\n                            NavigatorService.navigate(Screens.Home.Escort.EscortType)\n                        }\n                        tintColor={colors.white}\n                    />\n                </BackButtonRow>\n            </SafeAreaContainer>\n        </>\n    );\n};\n\nexport default SettingScreen;\n"],"mappings":"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","ignoreList":[]}