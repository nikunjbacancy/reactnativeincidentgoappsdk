{"version":3,"names":["_assets","require","_components","_isEmpty","_interopRequireDefault","_react","_reactIntl","_reactNative","_device","_hooks","_navigation","_actions","_messages","_selectors","_styles","e","__esModule","default","OrganizationNotifyScreen","formatMessage","useIntl","organizations","useSelector","makeSelectIntersectOrganizations","nextButtonEnabled","makeSelectEnableContinueButton","error","makeSelectError","errorMessage","makeSelectErrorMessage","toggleSelectOrganizationAction","useAction","toggleSelectOrganization","addSelectedOrganizationRequestAction","addSelectedOrganizationRequest","createElement","LoadingIndicator","call911","makeCall","renderHeader","Fragment","Header","title","messages","InfoRow","InfoText","info","ErrorRow","ErrorMessage","MarginBottom","renderItem","itemInfo","organization","item","ItemRow","onPress","id","isSelected","ItemCheckImage","source","images","icCheck","ItemText","name","StatusBar","barStyle","backgroundColor","SafeAreaContainer","console","log","isEmpty","Call911Container","Call911Title","call911Title","Call911Info","call911Info","Call911Button","text","List","keyExtractor","org","_org$id","toString","data","extraData","ContinueScreenActionButton","disabled","continue","onCancel","NavigatorService","back","iconImage","icBack","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../../assets';\nimport { Header, LoadingIndicator, SafeAreaContainer } from '../../../../../components';\nimport isEmpty from 'lodash/isEmpty';\nimport React, { FC } from 'react';\nimport { useIntl } from 'react-intl';\nimport { ListRenderItemInfo, StatusBar } from 'react-native';\nimport { OrganizationSelection } from 'types';\nimport { makeCall } from '../../../../../utils/device';\nimport { useAction, useSelector } from '../../../../../utils/hooks';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport {\n  addSelectedOrganizationRequest,\n  toggleSelectOrganization,\n} from './actions';\nimport messages from './messages';\nimport {\n  makeSelectEnableContinueButton,\n  makeSelectError,\n  makeSelectErrorMessage,\n  makeSelectIntersectOrganizations,\n} from './selectors';\nimport {\n  Call911Button,\n  Call911Container,\n  Call911Info,\n  Call911Title,\n  ContinueScreenActionButton,\n  ErrorMessage,\n  ErrorRow,\n  InfoRow,\n  InfoText,\n  ItemCheckImage,\n  ItemRow,\n  ItemText,\n  List,\n  MarginBottom,\n} from './styles';\n\nconst OrganizationNotifyScreen: FC = () => {\n  const { formatMessage } = useIntl();\n\n  const organizations = useSelector(makeSelectIntersectOrganizations());\n  const nextButtonEnabled = useSelector(makeSelectEnableContinueButton());\n  const error = useSelector(makeSelectError());\n  const errorMessage = useSelector(makeSelectErrorMessage());\n\n  const toggleSelectOrganizationAction = useAction(toggleSelectOrganization);\n  const addSelectedOrganizationRequestAction = useAction(\n    addSelectedOrganizationRequest,\n  );\n\n  if (!organizations) return <LoadingIndicator />;\n\n  const call911 = () => makeCall('911');\n\n  const renderHeader = () => (\n    <>\n      <Header title={formatMessage(messages.title)} />\n      <InfoRow>\n        <InfoText>{formatMessage(messages.info)}</InfoText>\n      </InfoRow>\n      {error && (\n        <ErrorRow>\n          <ErrorMessage>{errorMessage}</ErrorMessage>\n        </ErrorRow>\n      )}\n      <MarginBottom />\n    </>\n  );\n\n  const renderItem = (itemInfo: ListRenderItemInfo<OrganizationSelection>) => {\n    const organization = itemInfo.item;\n\n    return (\n      <ItemRow onPress={() => toggleSelectOrganizationAction(organization.id)}>\n        <>\n          {organization.isSelected && (\n            <ItemCheckImage source={images.icCheck()} />\n          )}\n          <ItemText>{itemInfo.item.name}</ItemText>\n        </>\n      </ItemRow>\n    );\n  };\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        {console.log(\"select org screen organizations==>\",organizations)}\n        {isEmpty(organizations) ? (\n          <>\n            <Header title={formatMessage(messages.title)} />\n            <Call911Container>\n              <Call911Title>\n                {formatMessage(messages.call911Title)}\n              </Call911Title>\n              <Call911Info>{formatMessage(messages.call911Info)}</Call911Info>\n              <Call911Button\n                text={formatMessage(messages.call911)}\n                onPress={call911}\n              />\n            </Call911Container>\n          </>\n        ) : (\n          <>\n            {renderHeader()}\n            <List\n              keyExtractor={(org: any) => org.id?.toString() || ''}\n              data={organizations}\n              extraData={organizations}\n              renderItem={renderItem}\n            />\n          </>\n        )}\n        <ContinueScreenActionButton\n          disabled={!nextButtonEnabled}\n          text={formatMessage(messages.continue)}\n          onCancel={NavigatorService.back}\n          onPress={addSelectedOrganizationRequestAction}\n          iconImage={images.icBack()}\n        />\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default OrganizationNotifyScreen;\n"],"mappings":"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","ignoreList":[]}