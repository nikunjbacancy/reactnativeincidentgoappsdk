{"version":3,"names":["api","_interopRequireWildcard","require","_selectors","_screens","_interopRequireDefault","_effects","_error","_navigation","_actions","_constants","_selectors2","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","getIntersectOrganizations","location","select","makeSelectNewTipIncidentLocation","response","organizations","findIntersectOrganizations","put","getIntersectOrganizationsSuccess","data","length","addSelectedOrganizationSuccess","NavigatorService","navigate","Screens","Home","NewTip","SelectCategory","SelectOrganization","error","getIntersectOrganizationsFailure","handleError","addSelectedOrganization","selectedOrganization","makeSelectSelectedOrganization","incidentExpired","makeSelectNewTipIncidentExpired","addSelectedOrganizationFailure","Error","organizationNotifyScreenSaga","takeLatest","GET_INTERSECT_ORGANIZATIONS_REQUEST","SELECT_INCIDENT_ORGANIZATION_REQUEST"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen saga\n *\n */\n\nimport * as api from '../../../../../api';\nimport {\n  makeSelectNewTipIncidentExpired,\n  makeSelectNewTipIncidentLocation,\n} from '../../../../../containers/app/selectors';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport { GeoPoint, OrganizationWithArea } from 'incident-code-core';\nimport { call, put, select, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../../utils/error';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport {\n  addSelectedOrganizationFailure,\n  addSelectedOrganizationSuccess,\n  getIntersectOrganizationsFailure,\n  getIntersectOrganizationsSuccess,\n} from './actions';\nimport {\n  GET_INTERSECT_ORGANIZATIONS_REQUEST,\n  SELECT_INCIDENT_ORGANIZATION_REQUEST,\n} from './constants';\nimport { makeSelectSelectedOrganization } from './selectors';\n\nfunction* getIntersectOrganizations(): any {\n  try {\n    const location: GeoPoint = yield select(makeSelectNewTipIncidentLocation());\n    const response = yield call(\n      api.organizations.findIntersectOrganizations,\n      location,\n    );\n    yield put(getIntersectOrganizationsSuccess(response.data));\n    if (response.data.organizations.length === 1) {\n      yield put(addSelectedOrganizationSuccess(response.data.organizations[0]));\n      yield call(NavigatorService.navigate, Screens.Home.NewTip.SelectCategory);\n    } else {\n      yield call(\n        NavigatorService.navigate,\n        Screens.Home.NewTip.SelectOrganization,\n      );\n    }\n  } catch (error: any) {\n    yield put(getIntersectOrganizationsFailure(handleError(error)));\n  }\n}\n\nfunction* addSelectedOrganization() {\n  const selectedOrganization: OrganizationWithArea = yield select(\n    makeSelectSelectedOrganization(),\n  );\n  const incidentExpired: boolean = yield select(\n    makeSelectNewTipIncidentExpired(),\n  );\n  if (!incidentExpired) {\n    yield put(addSelectedOrganizationSuccess(selectedOrganization));\n    yield call(NavigatorService.navigate, Screens.Home.NewTip.SelectCategory);\n  } else {\n    yield put(addSelectedOrganizationFailure(new Error('Tip expired')));\n  }\n}\n\nexport default function* organizationNotifyScreenSaga() {\n  yield takeLatest(\n    GET_INTERSECT_ORGANIZATIONS_REQUEST,\n    getIntersectOrganizations,\n  );\n  yield takeLatest(\n    SELECT_INCIDENT_ORGANIZATION_REQUEST,\n    addSelectedOrganization,\n  );\n}\n"],"mappings":"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","ignoreList":[]}