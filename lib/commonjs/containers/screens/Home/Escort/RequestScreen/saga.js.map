{"version":3,"names":["api","_interopRequireWildcard","require","_actions","_actions2","_screens","_interopRequireDefault","_incidentCodeCore","_moment","_effects","_location","_backgroundGeolocation","_navigation","_device","_selectors","_actions3","_constants","_selectors2","_reactNative","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","startEscortSync","action","console","log","startEscortTask","fork","startEscort","take","CANCEL_ESCORT_REQUEST","cancelEscort","cancel","put","removeScreenAction","payload","selectedOrganization","select","makeSelectSelectedOrganization","geoPoint","getCachedFineGeoPoint","request","location","organization","id","organizationArea","area","comment","isPanic","response","incidents","addPendingEscort","data","alertOrganization","startChat","startBackgroundGeolocationToEscort","onLocation","checkIncidentStartCompletion","error","startEscortFailure","incident","incidentActionRequest","IncidentAction","AlertOrganization","args","doIncidentAction","start","moment","diff","getEscort","isAndroid","NativeModules","Bluetooth","awakeLockScreen","incidentEscortData","incidentEscort","setIncidentEscortData","NavigatorService","navigate","Screens","Home","Escort","Record","startEscortSuccess","hideCancelEscortModal","logger","debug","warn","Error","makeSelectPendingEscort","updateEscortState","state","IncidentEscortState","Canceled","cancelEscortSuccess","cancelEscortFailure","navToEscortType","EscortType","organizationNotifyScreenSaga","takeLatest","START_ESCORT_REQUEST","CANCEL_ESCORT_SUCCESS"],"sources":["saga.ts"],"sourcesContent":["import * as api from '../../../../../api';\nimport { AxiosResponse } from 'axios';\nimport { setIncidentEscortData } from '../../../../../containers/app/actions';\nimport { removeScreenAction } from '../../../../../containers/providers/RoutesProvider/actions';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport {\n  Id,\n  Incident,\n  IncidentAction,\n  IncidentActionRequest,\n  IncidentEscort,\n  IncidentEscortRequest,\n  IncidentEscortState,\n  Organization,\n  OrganizationWithArea,\n} from 'incident-code-core';\nimport moment from 'moment';\nimport {\n  call,\n  cancel,\n  fork,\n  put,\n  select,\n  take,\n  takeLatest,\n} from 'redux-saga/effects';\nimport { handleError } from '../../../../../utils/error';\nimport { getCachedFineGeoPoint } from '../../../../../utils/location';\nimport { startBackgroundGeolocationToEscort } from '../../../../../utils/location/backgroundGeolocation';\nimport NavigatorService from '../../../../../utils/navigation';\nimport { isAndroid } from '../../../../../utils/device';\n\nimport { makeSelectSelectedOrganization } from '../SelectOrganizationScreen/selectors';\nimport {\n  addPendingEscort,\n  cancelEscortFailure,\n  cancelEscortSuccess,\n  hideCancelEscortModal,\n  startEscortFailure,\n  startEscortSuccess,\n} from './actions';\nimport {\n  CANCEL_ESCORT_REQUEST,\n  CANCEL_ESCORT_SUCCESS,\n  START_ESCORT_REQUEST,\n} from './constants';\nimport { makeSelectPendingEscort } from './selectors';\nimport { StartEscortRequestAction } from './types';\nimport { NativeModules } from 'react-native';\n\nfunction* startEscortSync(action: StartEscortRequestAction) {\n  console.log(\"startEscortSync===>\",action)\n  const startEscortTask = yield fork(startEscort, action);\n  yield take(CANCEL_ESCORT_REQUEST);\n  yield fork(cancelEscort);\n  yield cancel(startEscortTask);\n  yield put(removeScreenAction());\n}\n\nfunction* startEscort({ payload }: StartEscortRequestAction) {\n  // make param?\n  const selectedOrganization: OrganizationWithArea = yield select(\n    makeSelectSelectedOrganization(),\n  );\n  try {\n    const geoPoint = yield call(getCachedFineGeoPoint);\n    const request: IncidentEscortRequest = {\n      location: geoPoint,\n      organization: selectedOrganization.id,\n      organizationArea: selectedOrganization.area as Id,\n      comment: payload.comment,\n      isPanic: payload.isPanic,\n    };\n    const response: AxiosResponse<Incident> = yield call(\n      api.incidents.startEscort,\n      request,\n    );\n    yield put(addPendingEscort(response.data));\n    yield call(alertOrganization, response.data, selectedOrganization);\n    yield call(startChat, response.data, selectedOrganization);\n    console.log(\"================================Request screen saga startBackgroundGeolocationToEscort================================\")\n    yield call(\n      startBackgroundGeolocationToEscort,\n      response.data.id,\n      payload.onLocation,\n    );\n\n    yield call(\n      checkIncidentStartCompletion,\n      response.data,\n      selectedOrganization,\n    );\n  } catch (error) {\n    yield put(startEscortFailure(error as Error));\n  }\n}\n\nfunction* alertOrganization(\n  incident: Incident,\n  organization: OrganizationWithArea,\n) {\n  const incidentActionRequest: IncidentActionRequest = {\n    id: incident.id as Id,\n    action: IncidentAction.AlertOrganization,\n    args: {\n      organization: organization.id as Id,\n      organizationArea: organization.area as Id,\n    },\n  };\n  yield call(api.incidents.doIncidentAction, incidentActionRequest);\n}\n\nfunction* startChat(incident: Incident, organization: Organization) {\n  const location = yield call(getCachedFineGeoPoint);\n  yield call(api.incidents.startChat, {\n    incident: incident.id as Id,\n    organization: organization.id as Id,\n    location,\n  });\n}\n\nfunction* checkIncidentStartCompletion(\n  incident: Incident,\n  organization: Organization,\n) {\n  const start = moment();\n\n  while (moment().diff(start, 'minutes') <= 5) {\n    try {\n      const response: AxiosResponse<IncidentEscort> = yield call(\n        api.incidents.getEscort,\n        incident.id as Id,\n      );\n      // if (response.data.state === IncidentEscortState.Active) {\n      if (isAndroid) {\n        NativeModules.Bluetooth.awakeLockScreen();\n      }\n\n      const incidentEscortData = {\n        incidentEscort: response.data,\n        organization,\n      };\n      yield put(setIncidentEscortData(incidentEscortData));\n      yield call(\n        NavigatorService.navigate,\n        Screens.Home.Escort.Record,\n        incidentEscortData,\n      );\n      yield put(startEscortSuccess());\n      yield put(hideCancelEscortModal());\n      yield put(removeScreenAction());\n      api.logger.debug('Request screen CheckVideoUpload', 'Success', response.data);\n      return;\n      // }\n    } catch (error) {\n      api.logger.warn('Request screen CheckVideoUpload', 'Failed', error);\n    }\n    // finally {\n    //   yield delay(5000);\n    // }\n  }\n  yield put(hideCancelEscortModal());\n  yield put(removeScreenAction());\n  yield put(\n    startEscortFailure(\n      new Error(\n        'WeÂ´re sorry, no security personnel are available now. Please either select a different organization or try again later.',\n      ),\n    ),\n  );\n}\n\nfunction* cancelEscort() {\n  console.log(\"Cancel Escort\")\n  try {\n    const incident: Incident = yield select(makeSelectPendingEscort());\n    yield call(api.incidents.updateEscortState, incident.id, {\n      state: IncidentEscortState.Canceled,\n    });\n    yield put(cancelEscortSuccess());\n  } catch (error) {\n    yield put(cancelEscortFailure(error as Error));\n  }\n}\n\nfunction* navToEscortType() {\n  yield call(NavigatorService.navigate, Screens.Home.Escort.EscortType);\n}\n\nexport default function* organizationNotifyScreenSaga() {\n  yield takeLatest(START_ESCORT_REQUEST, startEscortSync);\n  yield takeLatest(CANCEL_ESCORT_SUCCESS, navToEscortType);\n}\n"],"mappings":"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","ignoreList":[]}