{"version":3,"names":["_immer","_interopRequireDefault","require","_map","_constants","e","__esModule","default","initialState","exports","organizations","undefined","requestingOrganizations","requestingProcedures","procedures","error","errorMessage","timedEscortScreenReducer","produce","draft","action","type","GET_INTERSECT_ORGANIZATIONS_REQUEST","organizationGroups","GET_INTERSECT_ORGANIZATIONS_SUCCESS","payload","map","group","id","_id","GET_ORGANIZATION_PROCEDURES_REQUEST","GET_ORGANIZATION_PROCEDURES_SUCCESS","TOGGLE_SELECT_ORGANIZATION","organization","isSelected","TOGGLE_SELECT_PROCEDURE","procedure","GET_INTERSECT_ORGANIZATIONS_FAILURE","message","GET_ORGANIZATION_PROCEDURES_FAILURE","CLEAR_SELECTIONS","org","_default"],"sources":["reducer.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen reducer\n *\n */\n\nimport produce, { Draft } from 'immer';\nimport map from 'lodash/map';\n\nimport {\n  CLEAR_SELECTIONS,\n  GET_INTERSECT_ORGANIZATIONS_FAILURE,\n  GET_INTERSECT_ORGANIZATIONS_REQUEST,\n  GET_INTERSECT_ORGANIZATIONS_SUCCESS,\n  GET_ORGANIZATION_PROCEDURES_FAILURE,\n  GET_ORGANIZATION_PROCEDURES_REQUEST,\n  GET_ORGANIZATION_PROCEDURES_SUCCESS,\n  TOGGLE_SELECT_ORGANIZATION,\n  TOGGLE_SELECT_PROCEDURE,\n} from './constants';\nimport { TimedEscortActionTypes, TimedEscortState } from './types';\n\nexport const initialState: TimedEscortState = {\n  organizations: undefined,\n  requestingOrganizations: true,\n  requestingProcedures: false,\n  procedures: undefined,\n  error: false,\n  errorMessage: '',\n};\n\nconst timedEscortScreenReducer = produce(\n  (draft: Draft<TimedEscortState>, action: TimedEscortActionTypes) => {\n    switch (action.type) {\n      case GET_INTERSECT_ORGANIZATIONS_REQUEST:\n        draft.requestingOrganizations = true;\n        draft.organizations = [];\n        draft.organizationGroups = [];\n        break;\n      case GET_INTERSECT_ORGANIZATIONS_SUCCESS:\n        draft.requestingOrganizations = false;\n        draft.organizations = action.payload.organizations;\n        draft.organizationGroups = map(\n          action.payload.organizationGroups,\n          (group: any) => {\n            // eslint-disable-next-line no-underscore-dangle\n            group.id = group._id;\n            return group;\n          },\n        );\n        break;\n      case GET_ORGANIZATION_PROCEDURES_REQUEST:\n        draft.requestingOrganizations = true;\n        break;\n      case GET_ORGANIZATION_PROCEDURES_SUCCESS:\n        draft.requestingOrganizations = false;\n        draft.procedures = action.payload;\n        break;\n      case TOGGLE_SELECT_ORGANIZATION:\n        draft.error = false;\n        draft.organizations = map(draft.organizations, organization => {\n          if (organization.id === action.payload) {\n            return {\n              ...organization,\n              isSelected: true,\n            };\n          }\n          return {\n            ...organization,\n            isSelected: false,\n          };\n        });\n        draft.organizationGroups = map(\n          draft.organizationGroups,\n          organization => {\n            if (organization.organization === action.payload) {\n              return {\n                ...organization,\n                isSelected: true,\n              };\n            }\n            return {\n              ...organization,\n              isSelected: false,\n            };\n          },\n        );\n        break;\n      case TOGGLE_SELECT_PROCEDURE:\n        draft.error = false;\n        draft.procedures = map(draft.procedures, procedure => {\n          if (procedure.id === action.payload) {\n            return {\n              ...procedure,\n              isSelected: !procedure.isSelected,\n            };\n          }\n          return {\n            ...procedure,\n            isSelected: false,\n          };\n        });\n        break;\n      case GET_INTERSECT_ORGANIZATIONS_FAILURE:\n        draft.error = action.error;\n        draft.errorMessage = action.payload.message;\n        draft.requestingOrganizations = false;\n        break;\n      case GET_ORGANIZATION_PROCEDURES_FAILURE:\n        draft.error = action.error;\n        draft.errorMessage = action.payload.message;\n        draft.requestingProcedures = false;\n        break;\n      case CLEAR_SELECTIONS:\n        draft.organizations = map(draft.organizations, org => ({\n          ...org,\n          isSelected: false,\n        }));\n        draft.procedures = map(draft.procedures, procedure => ({\n          ...procedure,\n          isSelected: false,\n        }));\n        break;\n      default:\n    }\n  },\n  initialState,\n);\n\nexport default timedEscortScreenReducer;\n"],"mappings":";;;;;;AAMA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,IAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,UAAA,GAAAF,OAAA;AAUqB,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAnBrB;AACA;AACA;AACA;AACA;;AAkBO,MAAMG,YAA8B,GAAAC,OAAA,CAAAD,YAAA,GAAG;EAC5CE,aAAa,EAAEC,SAAS;EACxBC,uBAAuB,EAAE,IAAI;EAC7BC,oBAAoB,EAAE,KAAK;EAC3BC,UAAU,EAAEH,SAAS;EACrBI,KAAK,EAAE,KAAK;EACZC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,wBAAwB,GAAG,IAAAC,cAAO,EACtC,CAACC,KAA8B,EAAEC,MAA8B,KAAK;EAClE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKC,8CAAmC;MACtCH,KAAK,CAACP,uBAAuB,GAAG,IAAI;MACpCO,KAAK,CAACT,aAAa,GAAG,EAAE;MACxBS,KAAK,CAACI,kBAAkB,GAAG,EAAE;MAC7B;IACF,KAAKC,8CAAmC;MACtCL,KAAK,CAACP,uBAAuB,GAAG,KAAK;MACrCO,KAAK,CAACT,aAAa,GAAGU,MAAM,CAACK,OAAO,CAACf,aAAa;MAClDS,KAAK,CAACI,kBAAkB,GAAG,IAAAG,YAAG,EAC5BN,MAAM,CAACK,OAAO,CAACF,kBAAkB,EAChCI,KAAU,IAAK;QACd;QACAA,KAAK,CAACC,EAAE,GAAGD,KAAK,CAACE,GAAG;QACpB,OAAOF,KAAK;MACd,CACF,CAAC;MACD;IACF,KAAKG,8CAAmC;MACtCX,KAAK,CAACP,uBAAuB,GAAG,IAAI;MACpC;IACF,KAAKmB,8CAAmC;MACtCZ,KAAK,CAACP,uBAAuB,GAAG,KAAK;MACrCO,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACK,OAAO;MACjC;IACF,KAAKO,qCAA0B;MAC7Bb,KAAK,CAACJ,KAAK,GAAG,KAAK;MACnBI,KAAK,CAACT,aAAa,GAAG,IAAAgB,YAAG,EAACP,KAAK,CAACT,aAAa,EAAEuB,YAAY,IAAI;QAC7D,IAAIA,YAAY,CAACL,EAAE,KAAKR,MAAM,CAACK,OAAO,EAAE;UACtC,OAAO;YACL,GAAGQ,YAAY;YACfC,UAAU,EAAE;UACd,CAAC;QACH;QACA,OAAO;UACL,GAAGD,YAAY;UACfC,UAAU,EAAE;QACd,CAAC;MACH,CAAC,CAAC;MACFf,KAAK,CAACI,kBAAkB,GAAG,IAAAG,YAAG,EAC5BP,KAAK,CAACI,kBAAkB,EACxBU,YAAY,IAAI;QACd,IAAIA,YAAY,CAACA,YAAY,KAAKb,MAAM,CAACK,OAAO,EAAE;UAChD,OAAO;YACL,GAAGQ,YAAY;YACfC,UAAU,EAAE;UACd,CAAC;QACH;QACA,OAAO;UACL,GAAGD,YAAY;UACfC,UAAU,EAAE;QACd,CAAC;MACH,CACF,CAAC;MACD;IACF,KAAKC,kCAAuB;MAC1BhB,KAAK,CAACJ,KAAK,GAAG,KAAK;MACnBI,KAAK,CAACL,UAAU,GAAG,IAAAY,YAAG,EAACP,KAAK,CAACL,UAAU,EAAEsB,SAAS,IAAI;QACpD,IAAIA,SAAS,CAACR,EAAE,KAAKR,MAAM,CAACK,OAAO,EAAE;UACnC,OAAO;YACL,GAAGW,SAAS;YACZF,UAAU,EAAE,CAACE,SAAS,CAACF;UACzB,CAAC;QACH;QACA,OAAO;UACL,GAAGE,SAAS;UACZF,UAAU,EAAE;QACd,CAAC;MACH,CAAC,CAAC;MACF;IACF,KAAKG,8CAAmC;MACtClB,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACL,KAAK;MAC1BI,KAAK,CAACH,YAAY,GAAGI,MAAM,CAACK,OAAO,CAACa,OAAO;MAC3CnB,KAAK,CAACP,uBAAuB,GAAG,KAAK;MACrC;IACF,KAAK2B,8CAAmC;MACtCpB,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACL,KAAK;MAC1BI,KAAK,CAACH,YAAY,GAAGI,MAAM,CAACK,OAAO,CAACa,OAAO;MAC3CnB,KAAK,CAACN,oBAAoB,GAAG,KAAK;MAClC;IACF,KAAK2B,2BAAgB;MACnBrB,KAAK,CAACT,aAAa,GAAG,IAAAgB,YAAG,EAACP,KAAK,CAACT,aAAa,EAAE+B,GAAG,KAAK;QACrD,GAAGA,GAAG;QACNP,UAAU,EAAE;MACd,CAAC,CAAC,CAAC;MACHf,KAAK,CAACL,UAAU,GAAG,IAAAY,YAAG,EAACP,KAAK,CAACL,UAAU,EAAEsB,SAAS,KAAK;QACrD,GAAGA,SAAS;QACZF,UAAU,EAAE;MACd,CAAC,CAAC,CAAC;MACH;IACF;EACF;AACF,CAAC,EACD1B,YACF,CAAC;AAAC,IAAAkC,QAAA,GAAAjC,OAAA,CAAAF,OAAA,GAEaU,wBAAwB","ignoreList":[]}