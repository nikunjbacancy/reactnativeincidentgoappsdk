{"version":3,"names":["api","_interopRequireWildcard","require","_saga","_effects","_error","_location","_actions","_constants","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","getIntersectOrganizations","console","log","location","getCachedFineGeoPoint","response","organizations","findIntersectOrganizations","put","getIntersectOrganizationsSuccess","data","length","triggerOnboardForInactiveUser","_response$data$organi","toggleSelectOrganization","id","error","getIntersectOrganizationsFailure","handleError","getOrganizationProcedures","payload","getOrganizationProceduresSuccess","getOrganizationProceduresFailure","organizationNotifyScreenSaga","takeLatest","GET_INTERSECT_ORGANIZATIONS_REQUEST","GET_ORGANIZATION_PROCEDURES_REQUEST"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen saga\n *\n */\n\nimport * as api from '../../../../../api';\nimport { AxiosResponse } from 'axios';\nimport { triggerOnboardForInactiveUser } from '../../../../../containers/app/saga';\nimport { GeoPoint, Id, OrganizationProcedure } from 'incident-code-core';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../../utils/error';\nimport { getCachedFineGeoPoint } from '../../../../../utils/location';\n\nimport {\n  getIntersectOrganizationsFailure,\n  getIntersectOrganizationsSuccess,\n  getOrganizationProceduresFailure,\n  getOrganizationProceduresSuccess,\n  toggleSelectOrganization,\n} from './actions';\nimport {\n  GET_INTERSECT_ORGANIZATIONS_REQUEST,\n  GET_ORGANIZATION_PROCEDURES_REQUEST,\n} from './constants';\nimport { GetOrganizationProceduresRequestAction } from './types';\n\nfunction* getIntersectOrganizations(): any {\n  try {\n    console.log(\"===getIntersectOrganizations=====\")\n    const location: GeoPoint = yield call(getCachedFineGeoPoint);\n    console.log(\"getIntersectOrganizations location==>\",location)\n    const response = yield call(\n      api.organizations.findIntersectOrganizations,\n      location,\n    );\n    console.log(\"getIntersectOrganizations location response==>\",response)\n    yield put(getIntersectOrganizationsSuccess(response.data));\n    if (response.data.organizations.length === 0) {\n      yield* triggerOnboardForInactiveUser();\n    }\n    if (response.data.organizations.length === 1) {\n      yield put(\n        toggleSelectOrganization(response.data.organizations[0]?.id as Id),\n      );\n    }\n  } catch (error: any) {\n    console.log(\"getIntersectOrganizationsFailure location error==>\",error)\n    yield put(getIntersectOrganizationsFailure(handleError(error)));\n  }\n}\n\nfunction* getOrganizationProcedures({\n  payload,\n}: GetOrganizationProceduresRequestAction) {\n  try {\n    const response: AxiosResponse<OrganizationProcedure[]> = yield call(\n      api.organizations.getOrganizationProcedures,\n      payload,\n    );\n    console.log(\"getOrganizationProcedures success==>\",response)\n    yield put(getOrganizationProceduresSuccess(response.data));\n  } catch (error: any) {\n    console.log(\"getOrganizationProcedures error==>\",error)\n    yield put(getOrganizationProceduresFailure(handleError(error)));\n  }\n}\n\nexport default function* organizationNotifyScreenSaga() {\n  yield takeLatest(\n    GET_INTERSECT_ORGANIZATIONS_REQUEST,\n    getIntersectOrganizations,\n  );\n  yield takeLatest(\n    GET_ORGANIZATION_PROCEDURES_REQUEST,\n    getOrganizationProcedures,\n  );\n}\n"],"mappings":"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","ignoreList":[]}