{"version":3,"names":["_constants","require","getProcedureRequest","id","type","GET_PROCEDURE_REQUEST","payload","exports","getProcedureSuccess","procedure","GET_PROCEDURE_SUCCESS","getProcedureFailure","error","GET_PROCEDURE_FAILURE","showSetTimerModal","SHOW_SET_TIMER_MODAL","hideSetTimerModal","HIDE_SET_TIMER_MODAL","setTimerSuccess","timer","SET_TIMER_VALUE_SUCCESS","setTimerFailure","SET_TIMER_VALUE_FAILURE","completeProcedureAction","COMPLETE_PROCEDURE_ACTION","showCallModal","SHOW_CALL_MODAL","hideCallModal","HIDE_CALL_MODAL","showSafeModal","SHOW_SAFE_MODAL","hideSafeModal","HIDE_SAFE_MODAL","showPanicInfo","SHOW_PANIC_INFO","hidePanicInfo","HIDE_PANIC_INFO","enterPanicMode","organization","ENTER_PANIC_MODE","enterPanicModeSuccess","ENTER_PANIC_MODE_SUCCESS","enterPanicModeFailure","ENTER_PANIC_MODE_FAILURE","showExitPanicModal","SHOW_EXIT_PANIC_MODAL","hideExitPanicModal","HIDE_EXIT_PANIC_MODAL","imSafeRequest","IM_SAFE_REQUEST","imSafeSuccess","IM_SAFE_SUCCESS","imSafeFailure","IM_SAFE_FAILURE","startCountdownWarning","TRIGGER_COUNTDOWN_WARNING","cancelCountdownWarning","CANCEL_COUNTDOWN_WARNING","startPassiveEscortRequest","START_PASSIVE_ESCORT_REQUEST","startPassiveEscortSuccess","incident","START_PASSIVE_ESCORT_SUCCESS","startPassiveEscortFailure","START_PASSIVE_ESCORT_FAILURE","startVirtualEscortRequest","START_VIRTUAL_ESCORT_REQUEST","startVirtualEscortSuccess","START_VIRTUAL_ESCORT_SUCCESS","startVirtualEscortFailure","START_VIRTUAL_ESCORT_FAILURE","clearAreYouSafe","CLEAR_ARE_YOU_SAFE","logEscortAction","LOG_ESCORT_ACTION_REQUEST","logPassiveEscortActionFailure","LOG_ESCORT_ACTION_FAILURE","clearEscortErrorAction","CLEAR_ESCORT_ERROR","clearProcedure","CLEAR_PROCEDURE","setSafetyTimer","org","SET_SAFETY_TIMER"],"sources":["actions.ts"],"sourcesContent":["/**\n *\n * CountdownClock screen actions\n *\n */\nimport {\n  Id,\n  Incident,\n  IncidentPassiveLogRequest,\n  Organization,\n  OrganizationProcedure,\n  Ref,\n} from 'incident-code-core';\n\nimport {\n  CANCEL_COUNTDOWN_WARNING,\n  CLEAR_ARE_YOU_SAFE,\n  CLEAR_ESCORT_ERROR,\n  CLEAR_PROCEDURE,\n  COMPLETE_PROCEDURE_ACTION,\n  ENTER_PANIC_MODE,\n  ENTER_PANIC_MODE_FAILURE,\n  ENTER_PANIC_MODE_SUCCESS,\n  GET_PROCEDURE_FAILURE,\n  GET_PROCEDURE_REQUEST,\n  GET_PROCEDURE_SUCCESS,\n  HIDE_CALL_MODAL,\n  HIDE_EXIT_PANIC_MODAL,\n  HIDE_PANIC_INFO,\n  HIDE_SAFE_MODAL,\n  HIDE_SET_TIMER_MODAL,\n  IM_SAFE_FAILURE,\n  IM_SAFE_REQUEST,\n  IM_SAFE_SUCCESS,\n  LOG_ESCORT_ACTION_FAILURE,\n  LOG_ESCORT_ACTION_REQUEST,\n  SET_SAFETY_TIMER,\n  SET_TIMER_VALUE_FAILURE,\n  SET_TIMER_VALUE_SUCCESS,\n  SHOW_CALL_MODAL,\n  SHOW_EXIT_PANIC_MODAL,\n  SHOW_PANIC_INFO,\n  SHOW_SAFE_MODAL,\n  SHOW_SET_TIMER_MODAL,\n  START_PASSIVE_ESCORT_FAILURE,\n  START_PASSIVE_ESCORT_REQUEST,\n  START_PASSIVE_ESCORT_SUCCESS,\n  START_VIRTUAL_ESCORT_FAILURE,\n  START_VIRTUAL_ESCORT_REQUEST,\n  START_VIRTUAL_ESCORT_SUCCESS,\n  TRIGGER_COUNTDOWN_WARNING,\n} from './constants';\nimport { CountdownClockActionTypes, ImSafeRequestPayload } from './types';\n\nexport const getProcedureRequest = (id: Id): CountdownClockActionTypes => ({\n  type: GET_PROCEDURE_REQUEST,\n  payload: id,\n});\n\nexport const getProcedureSuccess = (\n  procedure: OrganizationProcedure,\n): CountdownClockActionTypes => ({\n  type: GET_PROCEDURE_SUCCESS,\n  payload: procedure,\n});\n\nexport const getProcedureFailure = (\n  error: Error,\n): CountdownClockActionTypes => ({\n  type: GET_PROCEDURE_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const showSetTimerModal = (): CountdownClockActionTypes => ({\n  type: SHOW_SET_TIMER_MODAL,\n});\n\nexport const hideSetTimerModal = (): CountdownClockActionTypes => ({\n  type: HIDE_SET_TIMER_MODAL,\n});\n\nexport const setTimerSuccess = (timer: number): CountdownClockActionTypes => ({\n  payload: timer,\n  type: SET_TIMER_VALUE_SUCCESS,\n});\n\nexport const setTimerFailure = (error: Error): CountdownClockActionTypes => ({\n  type: SET_TIMER_VALUE_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const completeProcedureAction = (\n  id: string,\n): CountdownClockActionTypes => ({\n  type: COMPLETE_PROCEDURE_ACTION,\n  payload: id,\n});\n\nexport const showCallModal = (): CountdownClockActionTypes => ({\n  type: SHOW_CALL_MODAL,\n});\n\nexport const hideCallModal = (): CountdownClockActionTypes => ({\n  type: HIDE_CALL_MODAL,\n});\n\nexport const showSafeModal = (): CountdownClockActionTypes => ({\n  type: SHOW_SAFE_MODAL,\n});\n\nexport const hideSafeModal = (): CountdownClockActionTypes => ({\n  type: HIDE_SAFE_MODAL,\n});\n\nexport const showPanicInfo = (): CountdownClockActionTypes => ({\n  type: SHOW_PANIC_INFO,\n});\n\nexport const hidePanicInfo = (): CountdownClockActionTypes => ({\n  type: HIDE_PANIC_INFO,\n});\n\nexport const enterPanicMode = (\n  organization: Organization,\n): CountdownClockActionTypes => ({\n  type: ENTER_PANIC_MODE,\n  payload: organization,\n});\n\nexport const enterPanicModeSuccess = (): CountdownClockActionTypes => ({\n  type: ENTER_PANIC_MODE_SUCCESS,\n});\n\nexport const enterPanicModeFailure = (\n  error: Error,\n): CountdownClockActionTypes => ({\n  type: ENTER_PANIC_MODE_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const showExitPanicModal = (): CountdownClockActionTypes => ({\n  type: SHOW_EXIT_PANIC_MODAL,\n});\n\nexport const hideExitPanicModal = (): CountdownClockActionTypes => ({\n  type: HIDE_EXIT_PANIC_MODAL,\n});\n\nexport const imSafeRequest = (\n  payload: ImSafeRequestPayload,\n): CountdownClockActionTypes => ({\n  type: IM_SAFE_REQUEST,\n  payload,\n});\n\nexport const imSafeSuccess = (): CountdownClockActionTypes => ({\n  type: IM_SAFE_SUCCESS,\n});\n\nexport const imSafeFailure = (error: Error): CountdownClockActionTypes => ({\n  type: IM_SAFE_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const startCountdownWarning = (): CountdownClockActionTypes => ({\n  type: TRIGGER_COUNTDOWN_WARNING,\n});\n\nexport const cancelCountdownWarning = (): CountdownClockActionTypes => ({\n  type: CANCEL_COUNTDOWN_WARNING,\n});\n\nexport const startPassiveEscortRequest = (payload: {\n  organization: Organization;\n  id?: Id;\n  safetyTimer: boolean;\n}): CountdownClockActionTypes => ({\n  type: START_PASSIVE_ESCORT_REQUEST,\n  payload,\n});\n\nexport const startPassiveEscortSuccess = (\n  incident: Incident,\n): CountdownClockActionTypes => ({\n  type: START_PASSIVE_ESCORT_SUCCESS,\n  payload: incident,\n});\n\nexport const startPassiveEscortFailure = (\n  error: Error,\n): CountdownClockActionTypes => ({\n  type: START_PASSIVE_ESCORT_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const startVirtualEscortRequest = (\n  organization: Organization,\n): CountdownClockActionTypes => ({\n  type: START_VIRTUAL_ESCORT_REQUEST,\n  payload: organization,\n});\n\nexport const startVirtualEscortSuccess = (): CountdownClockActionTypes => ({\n  type: START_VIRTUAL_ESCORT_SUCCESS,\n});\n\nexport const startVirtualEscortFailure = (\n  error: Error,\n): CountdownClockActionTypes => ({\n  type: START_VIRTUAL_ESCORT_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const clearAreYouSafe = (): CountdownClockActionTypes => ({\n  type: CLEAR_ARE_YOU_SAFE,\n});\n\nexport const logEscortAction = (\n  payload: IncidentPassiveLogRequest,\n): CountdownClockActionTypes => ({\n  type: LOG_ESCORT_ACTION_REQUEST,\n  payload,\n});\n\nexport const logPassiveEscortActionFailure = (\n  error: Error,\n): CountdownClockActionTypes => ({\n  type: LOG_ESCORT_ACTION_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const clearEscortErrorAction = (): CountdownClockActionTypes => ({\n  type: CLEAR_ESCORT_ERROR,\n});\n\nexport const clearProcedure = (): CountdownClockActionTypes => ({\n  type: CLEAR_PROCEDURE,\n});\n\nexport const setSafetyTimer = (\n  org: Ref<Organization>,\n): CountdownClockActionTypes => ({\n  type: SET_SAFETY_TIMER,\n  payload: org,\n});\n"],"mappings":"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","ignoreList":[]}