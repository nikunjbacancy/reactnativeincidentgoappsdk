{"version":3,"names":["_asyncStorage","_interopRequireDefault","require","api","_interopRequireWildcard","_actions","_selectors","_screens","_incidentCodeCore","_moment","_reactNative","_effects","_location","_navigation","_actions2","_types","_types2","_constants","_actions3","_actions4","_constants2","_selectors2","_types3","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","getProcedureById","payload","passiveData","select","makeSelectPassiveEscortData","id","response","incidents","getPassiveEscort","procedure","data","put","getProcedureSuccess","error","Error","getProcedureFailure","procedures","getProcedure","calculateTimer","hours","minutes","seconds","updateTimer","time","setTimerFailure","setTimerSuccess","delayHidePanicInfo","delay","hidePanicInfo","enterPanicMode","Vibration","vibrate","incident","makeSelectIncident","console","log","organization","AsyncStorage","setItem","PANIC_MODE_KEY","PanicMode","Active","passiveToPanicEscort","alertOrganization","startChat","checkIncidentStartCompletion","enterPanicModeSuccess","enterPanicModeFailure","imSafe","updatePassiveEscortState","state","IncidentEscortState","Safe","comment","clearDataAndGoBack","imSafeFailure","clearIncidentEscortData","clearPassiveEscortData","clearSelections","hideSafeModal","NavigatorService","navigate","Screens","Home","Escort","EscortType","imSafeSuccess","resetState","getTipsRequest","tipStatus","TipStatus","paging","Closed","startCountdownWarning","clearCountdownWarning","cancel","createPassiveEscort","safetyTimer","makeSelectProcedure","getIncident","geoPoint","getCachedFineGeoPoint","orgAreaId","areaResp","organizations","findOrganizationArea","request","location","organizationArea","Safety","setPassiveEscortData","isSafetyTimer","startPassiveEscortSuccess","startPassiveEscortFailure","logPassiveEscortAction","updatePassiveEscortLog","logPassiveEscortActionFailure","startVirtualEscortConnection","passiveToActiveEscort","start","moment","diff","getEscort","incidentEscortData","incidentEscort","fromPassive","setIncidentEscortData","Record","startVirtualEscortSuccess","logger","debug","warn","startVirtualEscortFailure","Inactive","incidentActionRequest","action","IncidentAction","AlertOrganization","args","doIncidentAction","countdownScreenSaga","takeLatest","GET_PROCEDURE_REQUEST","SET_TIMER_VALUE_REQUEST","SHOW_PANIC_INFO","ENTER_PANIC_MODE","IM_SAFE_REQUEST","TRIGGER_COUNTDOWN_WARNING","CANCEL_COUNTDOWN_WARNING","START_PASSIVE_ESCORT_REQUEST","START_VIRTUAL_ESCORT_REQUEST","LOG_ESCORT_ACTION_REQUEST"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * CountdownScreen saga\n *\n */\n import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as api from '../../../../../api';\nimport { AxiosResponse } from 'axios';\nimport {\n  clearIncidentEscortData,\n  clearPassiveEscortData,\n  setIncidentEscortData,\n  setPassiveEscortData,\n} from '../../../../../containers/app/actions';\nimport { makeSelectPassiveEscortData } from '../../../../../containers/app/selectors';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport {\n  GeoPoint,\n  Id,\n  Incident,\n  IncidentAction,\n  IncidentActionRequest,\n  IncidentEscort,\n  IncidentEscortState,\n  IncidentPassive,\n  IncidentPassiveEscortRequest,\n  Organization,\n  OrganizationArea,\n  OrganizationProcedure,\n} from 'incident-code-core';\nimport moment from 'moment';\nimport { Vibration } from 'react-native';\nimport { call, delay, put, select, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../../utils/error';\nimport { getCachedFineGeoPoint } from '../../../../../utils/location';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport {\n  getTipsRequest,\n  resetState,\n} from '../../../Menu/Tips/MyTipsScreen/actions';\nimport { TipStatus } from '../../../Menu/Tips/MyTipsScreen/types';\nimport { EscortType } from '../EscortTypeScreen/types';\nimport { PANIC_MODE_KEY } from '../RecordScreen/constants';\nimport { clearSelections } from '../TimedEscortScreen/actions';\nimport {\n  enterPanicModeFailure,\n  enterPanicModeSuccess,\n  getProcedureFailure,\n  getProcedureSuccess,\n  hidePanicInfo,\n  hideSafeModal,\n  imSafeFailure,\n  imSafeSuccess,\n  logPassiveEscortActionFailure,\n  setTimerFailure,\n  setTimerSuccess,\n  startPassiveEscortFailure,\n  startPassiveEscortSuccess,\n  startVirtualEscortFailure,\n  startVirtualEscortSuccess,\n} from './actions';\nimport {\n  CANCEL_COUNTDOWN_WARNING,\n  ENTER_PANIC_MODE,\n  GET_PROCEDURE_REQUEST,\n  IM_SAFE_REQUEST,\n  LOG_ESCORT_ACTION_REQUEST,\n  SET_TIMER_VALUE_REQUEST,\n  SHOW_PANIC_INFO,\n  START_PASSIVE_ESCORT_REQUEST,\n  START_VIRTUAL_ESCORT_REQUEST,\n  TRIGGER_COUNTDOWN_WARNING,\n} from './constants';\nimport { makeSelectIncident, makeSelectProcedure } from './selectors';\nimport {\n  EnterPanicModeAction,\n  GetProcedureRequestAction,\n  ImSafeRequestAction,\n  LogEscortActionRequestAction,\n  PanicMode,\n  SetTimerValueRequestAction,\n  StartPassiveEscortRequestAction,\n  StartVirtualEscortRequestAction,\n  TimerForm,\n} from './types';\n\nfunction* getProcedureById({ payload }: GetProcedureRequestAction) {\n  try {\n    if (!payload) {\n      const passiveData = yield select(makeSelectPassiveEscortData());\n      if (passiveData.id) {\n        const response: AxiosResponse<IncidentPassive> = yield call(\n          api.incidents.getPassiveEscort,\n          passiveData.id,\n        );\n        const procedure = response.data.procedure as OrganizationProcedure;\n        yield put(getProcedureSuccess(procedure));\n      } else {\n        const error = new Error('Unable to retrieve procedure');\n        yield put(getProcedureFailure(error as Error));\n      }\n    } else {\n      const response: AxiosResponse<OrganizationProcedure> = yield call(\n        api.procedures.getProcedure,\n        payload,\n      );\n      yield put(getProcedureSuccess(response.data));\n    }\n  } catch (error) {\n    yield put(getProcedureFailure(error as Error));\n  }\n}\n\nconst calculateTimer = ({ hours, minutes, seconds }: TimerForm) => {\n  return (+hours * 60 + +minutes) * 60 + +seconds;\n};\n\nfunction* updateTimer({ payload }: SetTimerValueRequestAction) {\n  const time = calculateTimer(payload);\n  if (time < 60) {\n    const error: Error = new Error(\n      'Countdown timer must be set to at least a minute',\n    );\n    yield put(setTimerFailure(error));\n  } else {\n    yield put(setTimerSuccess(time));\n  }\n}\n\nfunction* delayHidePanicInfo() {\n  yield delay(4500);\n  yield put(hidePanicInfo());\n}\n\nfunction* enterPanicMode({ payload }: EnterPanicModeAction) {\n  // Vibrates every 5 secs\n  yield call(Vibration.vibrate, [5000, 800], true);\n  const incident = yield select(makeSelectIncident());\n  console.log(\"enterPanicMode incident===>\",incident)\n  const organization = payload;\n  try {\n    yield call(AsyncStorage.setItem, PANIC_MODE_KEY, PanicMode.Active);\n    yield call(api.incidents.passiveToPanicEscort, incident);\n    yield call(alertOrganization, incident, organization);\n    yield call(startChat, incident, organization);\n    yield call(checkIncidentStartCompletion, incident, organization);\n    yield put(enterPanicModeSuccess());\n  } catch (error) {\n    yield put(enterPanicModeFailure((error as Error)));\n  }\n}\n\nfunction* imSafe({ payload }: ImSafeRequestAction) {\n  const incident = yield select(makeSelectIncident());\n  try {\n    yield call(api.incidents.updatePassiveEscortState, incident.id, {\n      state: IncidentEscortState.Safe,\n      comment: payload.comment,\n    });\n    yield call(clearDataAndGoBack);\n  } catch (error) {\n    yield put(imSafeFailure((error as Error)));\n  }\n}\n\nfunction* clearDataAndGoBack() {\n  yield put(clearIncidentEscortData());\n  yield put(clearPassiveEscortData());\n  yield put(clearSelections());\n  yield put(hideSafeModal());\n  yield delay(300);\n  yield call(NavigatorService.navigate, Screens.Home.Escort.EscortType);\n  yield put(imSafeSuccess());\n  yield delay(2000);\n  yield put(resetState());\n  yield put(getTipsRequest({ tipStatus: TipStatus.Active, paging: false }));\n  yield put(getTipsRequest({ tipStatus: TipStatus.Closed, paging: false }));\n}\n\nfunction* startCountdownWarning() {\n  // Vibrates every 5 secs\n  console.log(\"phont vibrate\")\n  yield call(Vibration.vibrate, [5000, 800], true);\n}\n\nfunction* clearCountdownWarning() {\n  yield call(Vibration.cancel);\n}\n\nfunction* createPassiveEscort({ payload }: StartPassiveEscortRequestAction): Generator<any, void, any> {\n  const { organization } = payload;\n  const { id } = payload;\n  const { safetyTimer } = payload;\n  const procedure = yield select(makeSelectProcedure());\n  let incident;\n  try {\n    if (id) {\n      console.log(\"createPassiveEscort 1 ===>\",id)\n      const response = yield call(api.incidents.getIncident, id);\n      incident = response.data;\n    } else {\n      const geoPoint: GeoPoint = yield call(getCachedFineGeoPoint);\n      let orgAreaId;\n      if (organization.id) {\n        const areaResp: AxiosResponse<OrganizationArea> = yield call(\n          api.organizations.findOrganizationArea,\n          organization.id,\n          geoPoint,\n        );\n        orgAreaId = areaResp.data.id;\n      }\n      const request: IncidentPassiveEscortRequest = {\n        location: geoPoint,\n        organization: organization.id,\n        organizationArea: orgAreaId,\n        procedure: procedure.id === EscortType.Safety ? null : procedure.id,\n      };\n      // console.log(\"IncidentPassiveEscortRequest ===>\",JSON.stringify(request))\n      const response: AxiosResponse<Incident> = yield call(\n        api.incidents.createPassiveEscort,\n        request,\n      );\n      // console.log(\"createPassiveEscort 2 ===>\",JSON.stringify(response.data))\n      incident = response.data;\n      // console.log(\"createPassiveEscort 3 ===>\",JSON.stringify(incident))\n    }\n    yield put(\n      setPassiveEscortData({\n        id: incident.id,\n        procedure,\n        isSafetyTimer: safetyTimer,\n      }),\n    );\n    yield put(startPassiveEscortSuccess(incident));\n  } catch (error) {\n    yield put(startPassiveEscortFailure((error as Error)));\n  }\n}\n\nfunction* logPassiveEscortAction({ payload }: LogEscortActionRequestAction) {\n  try {\n    yield call(api.incidents.updatePassiveEscortLog, payload);\n  } catch (error) {\n    yield put(logPassiveEscortActionFailure((error as Error)));\n  }\n}\n\nfunction* startVirtualEscortConnection({\n  payload,\n}: StartVirtualEscortRequestAction) {\n  try {\n    const organization = payload;\n    const incident = yield select(makeSelectIncident());\n    // console.log(\"startVirtualEscortConnection organization ==>\",JSON.stringify(organization))\n    // console.log(\"startVirtualEscortConnection incident ==>\",JSON.stringify(incident))\n    yield call(api.incidents.passiveToActiveEscort, incident);\n    yield call(alertOrganization, incident, organization);\n    yield call(startChat, incident, organization);\n    yield call(checkIncidentStartCompletion, incident, organization);\n  } catch (error) {\n    yield put(startPassiveEscortFailure((error as Error)));\n  }\n}\n\nfunction* checkIncidentStartCompletion(\n  incident: Incident,\n  organization: Organization,\n) {\n  const start = moment();\n  while (moment().diff(start, 'minute') <= 5) {\n    try {\n      const response: AxiosResponse<IncidentEscort> = yield call(\n        api.incidents.getEscort,\n        incident.id as Id,\n      );\n      // console.log(\"incident ===>\",JSON.stringify(incident))\n      // console.log(\"checkIncidentStartCompletion ===>\",JSON.stringify(response))\n      // if (response.data.state === IncidentEscortState.Active) {\n        const incidentEscortData = {\n          incidentEscort: response.data,\n          organization,\n          fromPassive: true,\n        };\n        // console.log(\"incidentEscortData ===>\",JSON.stringify(incidentEscortData))\n        yield put(setIncidentEscortData(incidentEscortData));\n        yield call(clearCountdownWarning);\n        yield call(\n          NavigatorService.navigate,\n          Screens.Home.Escort.Record,\n          incidentEscortData,\n        );\n        yield put(startVirtualEscortSuccess());\n        api.logger.debug('Countdown CheckVideoUpload', 'Success', response.data);\n        return;\n      // }\n    } catch (error) {\n      api.logger.warn('Countdown CheckVideoUpload', 'Failed', error);\n    } finally {\n      yield delay(5000);\n    }\n  }\n  yield put(\n    startVirtualEscortFailure(\n      new Error(\n        'We´re sorry, no security personnel are available now. If this is an emergency, please either contact your organization directly or call 911.',\n      ),\n    ),\n  );\n  yield call(clearCountdownWarning);\n  yield call(AsyncStorage.setItem, PANIC_MODE_KEY, PanicMode.Inactive);\n}\n\nfunction* alertOrganization(incident: Incident, organization: Organization) {\n  const incidentActionRequest: IncidentActionRequest = {\n    id: incident.id as Id,\n    action: IncidentAction.AlertOrganization,\n    args: {\n      organization: organization.id as Id,\n    },\n  };\n  yield call(api.incidents.doIncidentAction, incidentActionRequest);\n}\n\nfunction* startChat(incident: Incident, organization: Organization) {\n  const location = yield call(getCachedFineGeoPoint);\n  yield call(api.incidents.startChat, {\n    incident: incident.id as Id,\n    organization: organization.id as Id,\n    location,\n  });\n}\n\nexport default function* countdownScreenSaga() {\n  yield takeLatest(GET_PROCEDURE_REQUEST, getProcedureById);\n  yield takeLatest(SET_TIMER_VALUE_REQUEST, updateTimer);\n  yield takeLatest(SHOW_PANIC_INFO, delayHidePanicInfo);\n  yield takeLatest(ENTER_PANIC_MODE, enterPanicMode);\n  yield takeLatest(IM_SAFE_REQUEST, imSafe);\n  yield takeLatest(TRIGGER_COUNTDOWN_WARNING, startCountdownWarning);\n  yield takeLatest(CANCEL_COUNTDOWN_WARNING, clearCountdownWarning);\n  yield takeLatest(START_PASSIVE_ESCORT_REQUEST, createPassiveEscort);\n  yield takeLatest(START_VIRTUAL_ESCORT_REQUEST, startVirtualEscortConnection);\n  yield takeLatest(LOG_ESCORT_ACTION_REQUEST, logPassiveEscortAction);\n}\n"],"mappings":"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","ignoreList":[]}