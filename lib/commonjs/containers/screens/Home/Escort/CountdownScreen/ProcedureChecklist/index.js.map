{"version":3,"names":["_assets","require","_react","_interopRequireDefault","_styles","e","__esModule","default","ProcedureChecklist","onActionChecked","actions","renderAction","actionInfo","action","item","createElement","ItemRow","onPress","id","name","isCompleted","Fragment","ItemText","ItemCheckImage","source","images","icCheck","ListContainer","List","keyExtractor","act","_act$id","toString","data","extraData","renderItem","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../../../assets';\nimport React, { FC } from 'react';\nimport { ListRenderItemInfo } from 'react-native';\nimport { CountdownAction } from '../../../../../../types';\n\nimport {\n  ItemCheckImage,\n  ItemRow,\n  ItemText,\n  List,\n  ListContainer,\n} from './styles';\n\ninterface Props {\n  onActionChecked: (\n    id: string | undefined,\n    name: string,\n    complete?: boolean | undefined,\n  ) => void;\n  actions: CountdownAction[] | undefined;\n}\n\nconst ProcedureChecklist: FC<Props> = ({ onActionChecked, actions }) => {\n  const renderAction = (actionInfo: ListRenderItemInfo<CountdownAction>) => {\n    const action = actionInfo.item;\n\n    return (\n      <ItemRow\n        onPress={() =>\n          onActionChecked(action.id, action.name, action.isCompleted)\n        }\n      >\n        <>\n          <ItemText isCompleted={!!action.isCompleted}>{action.name}</ItemText>\n          {action.isCompleted && <ItemCheckImage source={images.icCheck()} />}\n        </>\n      </ItemRow>\n    );\n  };\n\n  return (\n    <>\n      <ListContainer>\n        <List\n          keyExtractor={(act : any) => act.id?.toString() || ''}\n          data={actions || []}\n          extraData={actions}\n          renderItem={renderAction}\n        />\n      </ListContainer>\n    </>\n  );\n};\n\nexport default ProcedureChecklist;\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AAIA,IAAAG,OAAA,GAAAH,OAAA;AAMkB,SAAAE,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAWlB,MAAMG,kBAA6B,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAQ,CAAC,KAAK;EACtE,MAAMC,YAAY,GAAIC,UAA+C,IAAK;IACxE,MAAMC,MAAM,GAAGD,UAAU,CAACE,IAAI;IAE9B,oBACEZ,MAAA,CAAAK,OAAA,CAAAQ,aAAA,CAACX,OAAA,CAAAY,OAAO;MACNC,OAAO,EAAEA,CAAA,KACPR,eAAe,CAACI,MAAM,CAACK,EAAE,EAAEL,MAAM,CAACM,IAAI,EAAEN,MAAM,CAACO,WAAW;IAC3D,gBAEDlB,MAAA,CAAAK,OAAA,CAAAQ,aAAA,CAAAb,MAAA,CAAAK,OAAA,CAAAc,QAAA,qBACEnB,MAAA,CAAAK,OAAA,CAAAQ,aAAA,CAACX,OAAA,CAAAkB,QAAQ;MAACF,WAAW,EAAE,CAAC,CAACP,MAAM,CAACO;IAAY,GAAEP,MAAM,CAACM,IAAe,CAAC,EACpEN,MAAM,CAACO,WAAW,iBAAIlB,MAAA,CAAAK,OAAA,CAAAQ,aAAA,CAACX,OAAA,CAAAmB,cAAc;MAACC,MAAM,EAAEC,cAAM,CAACC,OAAO,CAAC;IAAE,CAAE,CAClE,CACK,CAAC;EAEd,CAAC;EAED,oBACExB,MAAA,CAAAK,OAAA,CAAAQ,aAAA,CAAAb,MAAA,CAAAK,OAAA,CAAAc,QAAA,qBACEnB,MAAA,CAAAK,OAAA,CAAAQ,aAAA,CAACX,OAAA,CAAAuB,aAAa,qBACZzB,MAAA,CAAAK,OAAA,CAAAQ,aAAA,CAACX,OAAA,CAAAwB,IAAI;IACHC,YAAY,EAAGC,GAAS;MAAA,IAAAC,OAAA;MAAA,OAAK,EAAAA,OAAA,GAAAD,GAAG,CAACZ,EAAE,cAAAa,OAAA,uBAANA,OAAA,CAAQC,QAAQ,CAAC,CAAC,KAAI,EAAE;IAAA,CAAC;IACtDC,IAAI,EAAEvB,OAAO,IAAI,EAAG;IACpBwB,SAAS,EAAExB,OAAQ;IACnByB,UAAU,EAAExB;EAAa,CAC1B,CACY,CACf,CAAC;AAEP,CAAC;AAAC,IAAAyB,QAAA,GAAAC,OAAA,CAAA9B,OAAA,GAEaC,kBAAkB","ignoreList":[]}