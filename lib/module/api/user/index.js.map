{"version":3,"names":["getFileExtension","replace","RNFetchBlob","isIos","axios","endpoints","user","usernotifications","updateName","updateNameData","patch","addContact","contact","post","updateContact","deleteContact","contactId","delete","updateOrganizations","organizationsIds","organizations","getProfile","get","setSetting","key","value","getAddress","lat","lng","getAmazonUploadOptions","filePath","newFilePath","fileStat","fs","stat","amazonOptionsResponse","format","size","data","uploadPortrait","options","fetch","method","host","path","headers","wrap","completeUpload","deletePortrait","getNotificationList","userId","readAllNotification","put","updateReadUnreadNotificationStatus","payload","notiId","isRead","userID","updateLocationTrackData","updateGeoCredStatus","setSiteKeyStatus","locationId","body","getAllUserGeofences"],"sources":["index.ts"],"sourcesContent":["import {\n  AppUser,\n  AppUserContact,\n  FileUploadOptions,\n  FileUploadRequest,\n  getFileExtension,\n  Id,\n  IncidentVideoUploadOptions,\n  UserSettingKey,\n} from 'incident-code-core';\nimport replace from 'lodash/replace';\nimport RNFetchBlob from 'rn-fetch-blob';\nimport { GeocodeResponse } from 'types';\nimport { isIos } from '../../utils/device';\n\nimport axios from '../axios';\n\nexport const endpoints = {\n  user: 'user',\n  usernotifications: 'usernotifications'\n};\n\n\nexport default {\n  updateName: (updateNameData: AppUser) =>\n    axios.patch(endpoints.user, updateNameData),\n  addContact: (contact: AppUserContact) =>\n    axios.post(`${endpoints.user}/contact`, contact),\n  updateContact: (contact: AppUserContact) =>\n    axios.patch(`${endpoints.user}/contact`, contact),\n  deleteContact: (contactId: string) =>\n    axios.delete(`${endpoints.user}/contact/${contactId}`),\n  updateOrganizations: (organizationsIds: Id[]) =>\n    axios.patch(endpoints.user, { organizations: organizationsIds }),\n  getProfile: () => axios.get<AppUser>(endpoints.user),\n  setSetting: (\n    key: UserSettingKey | string,\n    value: string | number | boolean,\n  ) => axios.patch(`${endpoints.user}/setting`, { key, value }),\n  getAddress: (lat: number, lng: number) =>\n    axios.get<GeocodeResponse>(\n      `https://maps.googleapis.com/maps/api/geocode/json?address=${lat},${lng}&key=AIzaSyDQEfg7mKFvmYzQWFUYpRzv1PlwI6HuikI`,\n    ),\n  getAmazonUploadOptions: async (filePath: string) => {\n    const newFilePath = isIos ? replace(filePath, 'file://', '') : filePath;\n    const fileStat = await RNFetchBlob.fs.stat(newFilePath);\n\n    // @ts-ignore\n    const amazonOptionsResponse: AxiosResponse<IncidentVideoUploadOptions> = await axios.post<\n      FileUploadRequest,\n      FileUploadOptions\n    >(`${endpoints.user}/profile-image`, {\n      format: getFileExtension(filePath),\n      size: fileStat.size,\n    });\n    amazonOptionsResponse.data.filePath = newFilePath;\n    return amazonOptionsResponse;\n  },\n  uploadPortrait: async (options: IncidentVideoUploadOptions) => {\n    if (!options.filePath) return;\n    // upload to s3\n    await RNFetchBlob.fetch(\n      options.method as any,\n      `https://${options.host}${options.path}`,\n      options.headers as any,\n      RNFetchBlob.wrap(options.filePath),\n    );\n  },\n  completeUpload: (options: FileUploadOptions) =>\n    axios.patch(`${endpoints.user}/set-portrait`, options),\n  deletePortrait: () => axios.delete(`${endpoints.user}/remove-portrait`),\n  getNotificationList: (userId: string) =>\n    axios.get(`${endpoints.usernotifications}/${userId}`),\n  readAllNotification: (userId: string) =>\n    axios.put(`${endpoints.usernotifications}/${\"markallnotificationasread\"}/${userId}`),  \n  updateReadUnreadNotificationStatus: (payload: any) =>\n    axios.patch(`${endpoints.usernotifications}/${\"usernotification\"}/${payload.notiId}`, { isRead: payload.isRead, userID: payload.userID }),\n  updateLocationTrackData: (payload: any) =>\n    axios.post(`geocreds/setdata`, payload),\n  updateGeoCredStatus: (payload: any) =>\n    axios.post(`/geocreds/updateUserGeocredsResponse`, payload),\n  setSiteKeyStatus: (payload: any) =>\n    axios.put(`sitekey/onsite/${payload.locationId}/${payload.userId}`, payload.body),  \n  getAllUserGeofences: (userId: string) =>\n    axios.get(`${\"adminPortal/orglocation/userloc\"}/${userId}`),\n};\n"],"mappings":"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","ignoreList":[]}