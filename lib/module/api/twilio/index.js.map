{"version":3,"names":["crashlytics","forEach","map","Client","TwilioClient","convertToGiftedChatMessage","getTwilioAccessTokenFromStorage","isTokenExpired","refreshTwilioAccessToken","saveTwilioAccessToken","axios","event","AppEvent","endpoints","twilio","client","getToken","post","then","response","data","updateClientToken","token","updateToken","access_token","init","accessToken","on","state","error","getMessages","incidentId","channel","getConversationByUniqueName","status","join","channelMembers","getParticipants","members","member","sid","identity","messageAdded","message","setAllMessagesRead","giftedChatMessage","emit","OnMessageAdded","messagePaginator","items","reverse","sendMessage","messageAttributes","catch","log","recordError","removeChannelEvents","removeAllListeners","e"],"sources":["index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-misused-promises */\nimport crashlytics from '@react-native-firebase/crashlytics';\n// import * as api from '../../api';\nimport { AccessToken, Dict } from 'incident-code-core';\nimport forEach from 'lodash/forEach';\nimport map from 'lodash/map';\n// import { Client as TwilioClient } from 'twilio-chat/lib/client';\n// import { Message as TwilioMessage } from 'twilio-chat/lib/message';\nimport { Client as TwilioClient } from '@twilio/conversations';\nimport { Message as TwilioMessage } from '@twilio/conversations';\nimport { convertToGiftedChatMessage } from '../../utils/chat';\nimport {\n  getTwilioAccessTokenFromStorage,\n  isTokenExpired,\n  refreshTwilioAccessToken,\n  saveTwilioAccessToken,\n} from '../../utils/token';\n\nimport axios from '../axios';\nimport event, { AppEvent } from '../event';\n\nexport const endpoints = {\n  twilio: 'twilio',\n};\n\nlet client: TwilioClient;\n\nconst getToken = (): Promise<AccessToken> =>\n  axios\n    .post<AccessToken>(`${endpoints.twilio}/auth`)\n    .then(response => response.data);\n\nconst updateClientToken = async () => {\n  const token = await getToken();\n  await client.updateToken(token.access_token || '');\n  await saveTwilioAccessToken(token);\n};\n\nexport default {\n  init: async (accessToken: AccessToken) => {\n    if (!client) {\n      try {\n        let token: AccessToken = accessToken;\n        if (isTokenExpired(accessToken)) {\n          token = await refreshTwilioAccessToken();\n        }\n        // client = await TwilioClient.create(token.access_token || '');\n        client = new TwilioClient(token.access_token || '');\n        client.on('stateChanged', (state) => {\n          // //(\"conversation client state--->\", state)\n          if (state === 'initialized') {\n            // Use the client\n\n          }\n        })\n\n      } catch (error) {\n        await updateClientToken();\n        // await api.logger.logError({\n        //   source: 'Twilio init',\n        //   raw: JSON.stringify(error),\n        // });\n      } finally {\n        if (client) {\n          client.on('tokenAboutToExpire', updateClientToken);\n          client.on('tokenExpired', updateClientToken);\n        }\n      }\n    }\n  },\n  getToken,\n  getMessages: async (incidentId: string) => {\n    const token = await getTwilioAccessTokenFromStorage();\n    if (isTokenExpired(token)) {\n      await updateClientToken();\n    }\n    const channel = await client.getConversationByUniqueName(incidentId);\n    if (channel.status !== 'joined') {\n      await channel.join();\n    }\n    const channelMembers = await channel.getParticipants();\n    const members: Dict<string> = {};\n\n    forEach(channelMembers, member => {\n      members[member.sid] = member.identity || '';\n    });\n    // //(\"-channelMembers-->\",channelMembers)\n    const messageAdded = async (message: TwilioMessage) => {\n      // //(\"-new message arrived-->\",message)\n      await channel.setAllMessagesRead();\n      const giftedChatMessage = convertToGiftedChatMessage(message, members);\n      // //(\"gifted chat message -->\",giftedChatMessage)\n      event.emit(AppEvent.OnMessageAdded, giftedChatMessage);\n    };\n\n    channel.on('messageAdded', messageAdded);\n\n    const messagePaginator = await channel.getMessages();\n\n    return map(messagePaginator.items, message =>\n      convertToGiftedChatMessage(message, members),\n    ).reverse();\n  },\n  sendMessage: async (\n    incidentId: string,\n    message: string,\n    messageAttributes?: Record<string, any>,\n  ) => {\n    const channel = await client.getConversationByUniqueName(incidentId);\n    channel\n      .sendMessage(message, messageAttributes)\n      .then()\n      .catch(error => {\n        crashlytics().log('Twilio chat error caught...');\n        // api.logger.logError({\n        //   source: 'Chat Send Message Error',\n        //   raw: JSON.stringify(error),\n        //   message: error.message,\n        // });\n        crashlytics().recordError(error);\n      });\n  },\n  removeChannelEvents: async (incidentId: string) => {\n    try {\n      const channel = await client.getConversationByUniqueName(incidentId);\n      if (channel) {\n        // //('channel removeAllListeners')\n        channel.removeAllListeners();\n      }\n    } catch (e: any) {\n      crashlytics().log('Find channel and remove listeners error');\n      crashlytics().recordError(e);\n    }\n  },\n};\n"],"mappings":"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","ignoreList":[]}