{"version":3,"names":["replace","RNFetchBlob","isIos","getCachedFineGeoPoint","deleteLocalVideo","getFileExtension","axios","endpoints","incidents","getAmazonOptions","incident","filePath","newFilePath","fileStat","fs","stat","geoPoint","amazonOptionsResponse","post","format","size","id","location","data","createIncident","request","getVideo","videoId","get","getVideos","incidentId","uploadVideo","options","fetch","method","host","path","headers","wrap","deleteIncident","delete","doIncidentAction","incidentActionRequest","getIncidents","query","params","getIncident","startChat","incidentChatRequest","getChat","addLocation","latLng","startEscort","getEscort","updateEscortState","incidentEscortId","patch","getPassiveEscort","createPassiveEscort","passiveToActiveEscort","passiveToPanicEscort","updatePassiveEscortLog","updatePassiveEscortState","updateIncidentChatHistory"],"sources":["index.ts"],"sourcesContent":["/* eslint-disable no-console */\nimport { AxiosResponse } from 'axios';\nimport {\n  History,\n  Id,\n  Incident,\n  IncidentActionRequest,\n  IncidentChat,\n  IncidentChatRequest,\n  IncidentEscort,\n  IncidentEscortRequest,\n  IncidentPassive,\n  IncidentPassiveEscortRequest,\n  IncidentPassiveLogRequest,\n  IncidentRequest,\n  IncidentVideo,\n  IncidentVideoRequest,\n  IncidentVideoUploadOptions,\n  LatLng,\n  ObjectId,\n  QueryResult,\n  QuerySpecification,\n} from 'incident-code-core';\nimport replace from 'lodash/replace';\nimport RNFetchBlob from 'rn-fetch-blob';\nimport { isIos } from '../../utils/device';\nimport { getCachedFineGeoPoint } from '../../utils/location';\nimport { deleteLocalVideo, getFileExtension } from '../../utils/video';\n\nimport axios from '../axios';\n\nexport const endpoints = {\n  incidents: 'incidents',\n};\n\nexport default {\n  getAmazonOptions: async (incident: Incident, filePath: string) => {\n    const newFilePath = isIos ? replace(filePath, 'file://', '') : filePath;\n    const fileStat = await RNFetchBlob.fs.stat(newFilePath);\n    const geoPoint = await getCachedFineGeoPoint();\n\n    // @ts-ignore\n    const amazonOptionsResponse: AxiosResponse<IncidentVideoUploadOptions> = await axios.post<\n      IncidentVideoRequest,\n      IncidentVideoUploadOptions\n    >(`${endpoints.incidents}/video`, {\n      format: getFileExtension(filePath),\n      size: fileStat.size,\n      incident: incident.id,\n      location: geoPoint,\n    });\n\n    amazonOptionsResponse.data.filePath = newFilePath;\n\n    return amazonOptionsResponse;\n  },\n  createIncident: async (request: IncidentRequest = {} as IncidentRequest) => {\n    const geoPoint = await getCachedFineGeoPoint();\n    return axios.post<Incident>(endpoints.incidents, {\n      ...request,\n      location: geoPoint,\n    });\n  },\n  getVideo: (videoId?: Id) =>\n    axios.get<IncidentVideo>(`${endpoints.incidents}/videos/${videoId}`),\n  getVideos: (incidentId?: Id) =>\n    axios.get<QueryResult<IncidentVideo>>(\n      `${endpoints.incidents}/${incidentId}/videos/`,\n    ),\n  uploadVideo: async (options: IncidentVideoUploadOptions) => {\n    if (!options.filePath) return;\n    // upload to s3\n    await RNFetchBlob.fetch(\n      options.method as any,\n      `https://${options.host}${options.path}`,\n      options.headers as any,\n      RNFetchBlob.wrap(options.filePath),\n    );\n\n    // delete video after upload\n    await deleteLocalVideo(options.filePath);\n  },\n  deleteIncident: (id?: Id) => axios.delete(`${endpoints.incidents}/${id}`),\n  doIncidentAction: (incidentActionRequest: IncidentActionRequest) =>\n    axios.post(`${endpoints.incidents}/action`, incidentActionRequest),\n  getIncidents: (query: QuerySpecification) =>\n    axios.get<QueryResult<Incident>>(`${endpoints.incidents}/self`, {\n      params: query,\n    }),\n  getIncident: (id: Id) => axios.get<Incident>(`${endpoints.incidents}/${id}`),\n  startChat: (incidentChatRequest: IncidentChatRequest) =>\n    axios.post(`${endpoints.incidents}/chat`, incidentChatRequest),\n  getChat: (id: Id) =>\n    axios.get<IncidentChat>(`${endpoints.incidents}/${id}/chat`),\n  addLocation: (id: Id, latLng: LatLng) =>\n    axios.post(`${endpoints.incidents}/${id}/location`, latLng),\n  startEscort: async (\n    request: IncidentEscortRequest,\n  ): Promise<AxiosResponse<Incident>> =>\n    axios.post(`${endpoints.incidents}/escort`, request),\n  getEscort: async (incidentId: Id): Promise<AxiosResponse<IncidentEscort>> =>\n    axios.get(`${endpoints.incidents}/${incidentId}/escort`),\n  updateEscortState: (\n    incidentEscortId: string | ObjectId | undefined,\n    request: { state: string; comment?: string },\n  ) =>\n    axios.patch(\n      `${endpoints.incidents}/${incidentEscortId}/escort/state`,\n      request,\n    ),\n  getPassiveEscort: async (\n    incidentId: Id,\n  ): Promise<AxiosResponse<IncidentPassive>> =>\n    axios.get(`${endpoints.incidents}/${incidentId}/escort/passive`),\n  createPassiveEscort: async (\n    request: IncidentPassiveEscortRequest = {} as IncidentPassiveEscortRequest,\n  ) => {\n    return axios.post<Incident>(`${endpoints.incidents}/escort/passive`, {\n      ...request,\n    });\n  },\n  passiveToActiveEscort: async (request: Incident) => {\n    return axios.post<void>(`${endpoints.incidents}/escort/passive/expired`, {\n      ...request,\n    });\n  },\n  passiveToPanicEscort: async (request: Incident) => {\n    return axios.post<void>(`${endpoints.incidents}/escort/passive/panic`, {\n      ...request,\n    });\n  },\n  updatePassiveEscortLog: async (\n    request: IncidentPassiveLogRequest = {} as IncidentPassiveLogRequest,\n  ) => {\n    return axios.post<void>(`${endpoints.incidents}/escort/passive/log`, {\n      ...request,\n    });\n  },\n  updatePassiveEscortState: async (\n    incidentEscortId: string | ObjectId | undefined,\n    request: { state: string; comment?: string },\n  ) =>\n    axios.patch(\n      `${endpoints.incidents}/${incidentEscortId}/escort/passive/state`,\n      request,\n    ),\n  updateIncidentChatHistory: async (incidentId: Id, request: History) =>\n    axios.post<void>(`${endpoints.incidents}/${incidentId}/history`, request),\n};\n"],"mappings":"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","ignoreList":[]}