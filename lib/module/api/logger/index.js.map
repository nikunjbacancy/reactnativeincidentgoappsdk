{"version":3,"names":["AsyncStorage","REMOTE_LOGGER_KEY","USER_PHONE_KEY","isEmpty","getInfo","getVersion","axios","getRemoteLogger","remoteLogger","getItem","JSON","parse","getUserPhone","LogLevel","endpoints","log","level","context","message","args","userPhone","post","length","undefined","user","device","version","console","logError","error","debug","warn"],"sources":["index.ts"],"sourcesContent":["/* eslint-disable no-console */\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { REMOTE_LOGGER_KEY, USER_PHONE_KEY } from '../../containers/app/constants';\nimport { ErrorLog } from 'incident-code-core';\nimport isEmpty from 'lodash/isEmpty';\nimport { getInfo, getVersion } from '../../utils/device';\n\nimport axios from '../axios';\n\nconst getRemoteLogger = async () => {\n  const remoteLogger = (await AsyncStorage.getItem(REMOTE_LOGGER_KEY)) || '';\n  return JSON.parse(remoteLogger);\n};\n\nconst getUserPhone = async () => AsyncStorage.getItem(USER_PHONE_KEY);\n\nexport enum LogLevel {\n  log = 'log',\n  error = 'error',\n  debug = 'debug',\n  warn = 'warn',\n}\n\nexport const endpoints = {\n  log: 'log',\n};\n\nconst log = async (\n  level: LogLevel,\n  context: string,\n  message: string,\n  ...args: any[]\n) => {\n  const userPhone = await getUserPhone();\n  const remoteLogger = await getRemoteLogger();\n  if (!isEmpty(remoteLogger)) {\n    axios.post(endpoints.log, {\n      level,\n      context,\n      message,\n      args: args.length === 0 ? undefined : args,\n      user: userPhone,\n      device: getInfo(),\n      version: getVersion(),\n    });\n  }\n\n  console[level](`${context}:`, message, ...args);\n};\n\nconst logError = async (error: ErrorLog) => {\n  await axios.post(`${endpoints.log}/error`, error);\n};\n\nexport default {\n  log: (context: string, message: string, ...args: any[]) => {\n    log(LogLevel.log, context, message, args);\n  },\n  error: (context: string, message: string, ...args: any[]) => {\n    log(LogLevel.error, context, message, args);\n  },\n  debug: (context: string, message: string, ...args: any[]) => {\n    log(LogLevel.debug, context, message, args);\n  },\n  warn: (context: string, message: string, ...args: any[]) => {\n    log(LogLevel.warn, context, message, args);\n  },\n  logError,\n};\n"],"mappings":"AAAA;AACA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,SAASC,iBAAiB,EAAEC,cAAc,QAAQ,gCAAgC;AAElF,OAAOC,OAAO,MAAM,gBAAgB;AACpC,SAASC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AAExD,OAAOC,KAAK,MAAM,UAAU;AAE5B,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,YAAY,GAAG,CAAC,MAAMR,YAAY,CAACS,OAAO,CAACR,iBAAiB,CAAC,KAAK,EAAE;EAC1E,OAAOS,IAAI,CAACC,KAAK,CAACH,YAAY,CAAC;AACjC,CAAC;AAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAYZ,YAAY,CAACS,OAAO,CAACP,cAAc,CAAC;AAErE,WAAYW,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAOpB,OAAO,MAAMC,SAAS,GAAG;EACvBC,GAAG,EAAE;AACP,CAAC;AAED,MAAMA,GAAG,GAAG,MAAAA,CACVC,KAAe,EACfC,OAAe,EACfC,OAAe,EACf,GAAGC,IAAW,KACX;EACH,MAAMC,SAAS,GAAG,MAAMR,YAAY,CAAC,CAAC;EACtC,MAAMJ,YAAY,GAAG,MAAMD,eAAe,CAAC,CAAC;EAC5C,IAAI,CAACJ,OAAO,CAACK,YAAY,CAAC,EAAE;IAC1BF,KAAK,CAACe,IAAI,CAACP,SAAS,CAACC,GAAG,EAAE;MACxBC,KAAK;MACLC,OAAO;MACPC,OAAO;MACPC,IAAI,EAAEA,IAAI,CAACG,MAAM,KAAK,CAAC,GAAGC,SAAS,GAAGJ,IAAI;MAC1CK,IAAI,EAAEJ,SAAS;MACfK,MAAM,EAAErB,OAAO,CAAC,CAAC;MACjBsB,OAAO,EAAErB,UAAU,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAsB,OAAO,CAACX,KAAK,CAAC,CAAC,GAAGC,OAAO,GAAG,EAAEC,OAAO,EAAE,GAAGC,IAAI,CAAC;AACjD,CAAC;AAED,MAAMS,QAAQ,GAAG,MAAOC,KAAe,IAAK;EAC1C,MAAMvB,KAAK,CAACe,IAAI,CAAC,GAAGP,SAAS,CAACC,GAAG,QAAQ,EAAEc,KAAK,CAAC;AACnD,CAAC;AAED,eAAe;EACbd,GAAG,EAAEA,CAACE,OAAe,EAAEC,OAAe,EAAE,GAAGC,IAAW,KAAK;IACzDJ,GAAG,CAACF,QAAQ,CAACE,GAAG,EAAEE,OAAO,EAAEC,OAAO,EAAEC,IAAI,CAAC;EAC3C,CAAC;EACDU,KAAK,EAAEA,CAACZ,OAAe,EAAEC,OAAe,EAAE,GAAGC,IAAW,KAAK;IAC3DJ,GAAG,CAACF,QAAQ,CAACgB,KAAK,EAAEZ,OAAO,EAAEC,OAAO,EAAEC,IAAI,CAAC;EAC7C,CAAC;EACDW,KAAK,EAAEA,CAACb,OAAe,EAAEC,OAAe,EAAE,GAAGC,IAAW,KAAK;IAC3DJ,GAAG,CAACF,QAAQ,CAACiB,KAAK,EAAEb,OAAO,EAAEC,OAAO,EAAEC,IAAI,CAAC;EAC7C,CAAC;EACDY,IAAI,EAAEA,CAACd,OAAe,EAAEC,OAAe,EAAE,GAAGC,IAAW,KAAK;IAC1DJ,GAAG,CAACF,QAAQ,CAACkB,IAAI,EAAEd,OAAO,EAAEC,OAAO,EAAEC,IAAI,CAAC;EAC5C,CAAC;EACDS;AACF,CAAC","ignoreList":[]}