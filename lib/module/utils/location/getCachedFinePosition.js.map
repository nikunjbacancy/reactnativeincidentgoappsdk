{"version":3,"names":["Alert","Geolocation","check","openSettings","request","RESULTS","getPermissions","OptionsForCachedFine","onGeolocationError","onSuccess","getCachedFinePosition","Promise","resolve","reject","permissions","console","log","getPosition","getCurrentPosition","position","error","bestLocation","then","checkResult","GRANTED","requestResult","alert","text","onPress","cancelable"],"sources":["getCachedFinePosition.ts"],"sourcesContent":["import { Alert } from 'react-native';\nimport Geolocation, { GeoPosition } from 'react-native-geolocation-service';\nimport {\n  check,\n  openSettings,\n  request,\n  RESULTS,\n} from 'react-native-permissions';\n\nimport getPermissions from '../permission/getPermissions';\nimport { OptionsForCachedFine } from './constants';\nimport { onGeolocationError } from './onError';\nimport onSuccess from './onSuccess';\n\nconst getCachedFinePosition = () => {\n  return new Promise<GeoPosition>((resolve: any, reject: any) => {\n    const permissions = getPermissions();\n    console.log(\"getCachedFinePosition==>\",permissions)\n    console.log(\"OptionsForCachedFine==>\",OptionsForCachedFine)\n    const getPosition = () => {\n      Geolocation.getCurrentPosition(\n        position => onSuccess(resolve, position),\n        error => onGeolocationError(reject, error),\n        OptionsForCachedFine,\n      );\n    };\n    check(permissions.bestLocation).then(checkResult => {\n      console.log(\"checkResult===>\",checkResult)\n      if (checkResult === RESULTS.GRANTED) {\n        getPosition();\n      } else {\n        request(permissions.bestLocation).then(requestResult => {\n          if (requestResult === RESULTS.GRANTED) {\n            getPosition();\n          } else {\n            Alert.alert(\n              'Permission Warning',\n              'This app needs location permission to ALWAYS to work',\n              [{ text: 'Open settings', onPress: openSettings }],\n              {\n                cancelable: false,\n              },\n            );\n          }\n        });\n      }\n    });\n  });\n};\n\nexport default getCachedFinePosition;\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,cAAc;AACpC,OAAOC,WAAW,MAAuB,kCAAkC;AAC3E,SACEC,KAAK,EACLC,YAAY,EACZC,OAAO,EACPC,OAAO,QACF,0BAA0B;AAEjC,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,oBAAoB,QAAQ,aAAa;AAClD,SAASC,kBAAkB,QAAQ,WAAW;AAC9C,OAAOC,SAAS,MAAM,aAAa;AAEnC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAClC,OAAO,IAAIC,OAAO,CAAc,CAACC,OAAY,EAAEC,MAAW,KAAK;IAC7D,MAAMC,WAAW,GAAGR,cAAc,CAAC,CAAC;IACpCS,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAACF,WAAW,CAAC;IACnDC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAACT,oBAAoB,CAAC;IAC3D,MAAMU,WAAW,GAAGA,CAAA,KAAM;MACxBhB,WAAW,CAACiB,kBAAkB,CAC5BC,QAAQ,IAAIV,SAAS,CAACG,OAAO,EAAEO,QAAQ,CAAC,EACxCC,KAAK,IAAIZ,kBAAkB,CAACK,MAAM,EAAEO,KAAK,CAAC,EAC1Cb,oBACF,CAAC;IACH,CAAC;IACDL,KAAK,CAACY,WAAW,CAACO,YAAY,CAAC,CAACC,IAAI,CAACC,WAAW,IAAI;MAClDR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACO,WAAW,CAAC;MAC1C,IAAIA,WAAW,KAAKlB,OAAO,CAACmB,OAAO,EAAE;QACnCP,WAAW,CAAC,CAAC;MACf,CAAC,MAAM;QACLb,OAAO,CAACU,WAAW,CAACO,YAAY,CAAC,CAACC,IAAI,CAACG,aAAa,IAAI;UACtD,IAAIA,aAAa,KAAKpB,OAAO,CAACmB,OAAO,EAAE;YACrCP,WAAW,CAAC,CAAC;UACf,CAAC,MAAM;YACLjB,KAAK,CAAC0B,KAAK,CACT,oBAAoB,EACpB,sDAAsD,EACtD,CAAC;cAAEC,IAAI,EAAE,eAAe;cAAEC,OAAO,EAAEzB;YAAa,CAAC,CAAC,EAClD;cACE0B,UAAU,EAAE;YACd,CACF,CAAC;UACH;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,eAAenB,qBAAqB","ignoreList":[]}