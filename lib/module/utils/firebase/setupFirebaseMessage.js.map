{"version":3,"names":["AsyncStorage","messaging","AppEvent","event","ANDROID_HEADLESS_NOTIFICATION_KEY","ESCORT_STATE_KEY","EscortState","IncidentType","sendLocalNotification","addBadge","crudGeofenceOperation","isIos","PushNotification","updateUserLocation","NotificationTexts","sendLocalMessage","message","_message$data","_message$data2","_message$data4","_message$data5","_message$data6","_message$data8","_message$data9","_message$data10","_message$data11","_message$data12","_message$data15","_message$data16","_message$data19","_message$data20","_message$data21","_message$data22","_message$data25","data","type","Normal","_message$data3","emit","OnIncidentUpdated","tipId","Escort","PassiveEscort","_message$data7","OnEscortClosed","OnOrganizationGroupUpdated","_message$data13","_message$data14","console","log","JSON","stringify","title","parse","userInfo","_message$data17","_message$data18","OnLogout","notification","_message$data23","_message$data24","incidentId","escortState","getItem","Started","setupFirebaseMessage","onMessage","_message$data52","_message$data53","_message$data26","_message$data27","_message$data30","_message$data31","_message$data32","_message$data35","_message$data36","_message$data37","_message$data38","_message$data39","_message$data40","_message$data41","_message$data43","_message$data44","_message$data45","_message$data46","_message$data47","_message$data48","_message$data49","_message$data28","_message$data29","options","myTips","tipDescription","localNotification","OnRefreshNotificationList","_message$data33","_message$data34","_message$notification","_message$notification2","body","_message$notification3","_message$notification4","_message$data42","siteKeyData","link","undefined","_message$notification5","_message$notification6","_message$data50","_message$data51","onNotificationOpenedApp","remoteMessage","_remoteMessage$data","getInitialNotification","then","_remoteMessage$data2","setBackgroundMessageHandler","_message$data54","_message$data55","_message$data56","_message$data57","_message$data58","_message$data62","_message$data63","setItem","_message$data59","_message$data60","_message$data61","payloaData","isCron","_message$data64","_message$data65"],"sources":["setupFirebaseMessage.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport messaging, {\n  FirebaseMessagingTypes,\n} from '@react-native-firebase/messaging';\nimport { AppEvent, event } from '../../api';\nimport { ANDROID_HEADLESS_NOTIFICATION_KEY } from '../../containers/providers/NotificationProvider/constants';\nimport { ESCORT_STATE_KEY } from '../../containers/screens/Home/Escort/RecordScreen/constants';\nimport { EscortState } from '../../containers/screens/Home/Escort/RecordScreen/types';\nimport { Id, IncidentType } from 'incident-code-core';\nimport { sendLocalNotification } from '../device';\nimport { addBadge } from '../notification';\nimport { crudGeofenceOperation } from '../../utils/location/backgroundGeolocation';\nimport { isIos } from '../device';\nimport PushNotification from 'react-native-push-notification';\nimport { updateUserLocation } from '../../utils/location/backgroundGeolocation';\nimport NotificationTexts from './messages';\n\nconst sendLocalMessage = async (\n  message: FirebaseMessagingTypes.RemoteMessage,\n) => {\n  if (\n    message.data?.type === IncidentType.Normal &&\n    message.data?.event === 'resolved'\n  ) {\n    event.emit(AppEvent.OnIncidentUpdated, message.data?.tipId);\n    return;\n  }\n  // //(\"step -- 2\")\n  if (\n    (message.data?.type === IncidentType.Escort ||\n      message.data?.type === IncidentType.PassiveEscort) &&\n    message.data?.event === 'resolved'\n  ) {\n    event.emit(AppEvent.OnEscortClosed, message.data?.tipId);\n    return;\n  }\n  // //(\"step -- 3\")\n  // if (\n  //   message.data?.type === 'beacon' &&\n  //   message.data?.event === 'beaconUpdate'\n  // ) {\n  //   event.emit(AppEvent.OnBeaconUpdated, message.data);\n  //   return;\n  // }\n  // //(\"step -- 4\")\n  if (\n    message.data?.type === 'group' &&\n    message.data?.event === 'groupChanged' || message.data?.event === 'groupUpdated'\n  ) {\n    event.emit(AppEvent.OnOrganizationGroupUpdated, \"OnOrganizationGroupUpdated\");\n    return;\n  }\n\n  if (message.data?.type === 'Location' && message.data?.event === 'LocationQuestion') {\n    console.log(\"x\", JSON.stringify(message.data))\n    sendLocalNotification({\n      title: JSON.parse(message.data?.data).title,\n      message: JSON.parse(message.data?.data).message,\n      userInfo: message.data\n    });\n    return;\n  }\n  if (message.data?.type === 'chat' && message.data?.event === 'Message') {\n    // if (isAndroid) {\n    //   NativeModules.Bluetooth.awakeLockScreen();\n    // }\n    sendLocalNotification({\n      title: message.data?.event,\n      message: message.data?.data,\n      userInfo: message\n    });\n    return;\n  }\n  if (message.data?.type === 'logout_user') {\n    event.emit(AppEvent.OnLogout, message.notification);\n\n    return;\n  }\n\n  if (message.data?.type === 'Escort' && (message.data?.event === 'PanicCreated' || message.data?.event === 'PanicAccepted')) {\n    sendLocalNotification({\n      title: JSON.parse(message.data?.data).title,\n      message: JSON.parse(message.data?.data).message\n    });\n    return;\n  }\n\n  if (message.data?.incidentId) {\n    await addBadge(message.data.incidentId as Id);\n  }\n  const escortState = await AsyncStorage.getItem(ESCORT_STATE_KEY);\n  if (escortState === EscortState.Started) return;\n};\n\nconst setupFirebaseMessage = () => {\n  // messaging().onMessage((message: FirebaseMessagingTypes.RemoteMessage) => {\n  //   console.log(\"OnMessage ===>\",message)\n  //   if (isIos && message.data?.type === 'Escort' && (message.data?.event === 'PanicAccepted' || message.data?.event === 'PanicCreated')) {\n  //     PushNotification.localNotification({\n  //       // id:message?.messageId,\n  //       title: message?.notification?.title,\n  //       message: message?.notification?.body!,\n  //     });\n  //     return;\n  //   }\n\n  //   if (isIos && message.data?.type === 'chat' && message.data?.event === 'Message') {\n\n  //     PushNotification.localNotification({\n  //       // id:message?.messageId,\n  //       title: message?.notification?.title,\n  //       message: message?.notification?.body!,\n  //     });\n  //     return;\n  //   }\n\n  //   if (isIos &&\n  //     message.data?.type === 'group' &&\n  //     message.data?.event === 'groupChanged' || message.data?.event === 'groupUpdated'\n  //   ) {\n  //     event.emit(AppEvent.OnOrganizationGroupUpdated, \"OnOrganizationGroupUpdated\");\n  //     return;\n  //   }\n\n  //   if (isIos && message.data?.type === 'logout_user') {\n  //     event.emit(AppEvent.OnLogout, message?.notification);\n\n  //     return;\n  //   }\n\n\n  //   if (isIos == false) {\n  //     sendLocalMessage(message);\n  //   }\n\n  //   // update user locaiton on notification arrival\n  //   if (message.data?.type === 'silentPush' && message.data?.event === 'LocationUpdate') {\n  //     updateUserLocation()\n  //   }\n\n  // });\n\n  messaging().onMessage((message: FirebaseMessagingTypes.RemoteMessage) => {\n    console.log(\"onMessage=====>\", JSON.stringify(message))\n\n    if (isIos == false) {\n      sendLocalMessage(message);\n    } else {\n      if (message.data?.type === IncidentType.Normal && message.data?.event === 'resolved') {\n        let options = {\n          title: NotificationTexts.myTips,\n          message: NotificationTexts.tipDescription, // Reference message ID from translation file\n          userInfo: message\n        }\n        PushNotification.localNotification(options);\n        event.emit(AppEvent.OnIncidentUpdated, message.data?.tipId);\n        event.emit(AppEvent.OnRefreshNotificationList, message.data?.tipId);\n        return;\n      }\n      if ((message.data?.type === IncidentType.Escort || message.data?.type === IncidentType.PassiveEscort) && message.data?.event === 'resolved') {\n        event.emit(AppEvent.OnRefreshNotificationList, message.data?.tipId);\n        event.emit(AppEvent.OnEscortClosed, message.data?.tipId);\n        return;\n      }\n      if (message.data?.type === 'Escort' && (message.data?.event === 'PanicAccepted' || message.data?.event === 'PanicCreated')) {\n        let options = {\n          title: message?.notification?.title,\n          message: message?.notification?.body,\n        }\n        PushNotification.localNotification(options);\n        event.emit(AppEvent.OnRefreshNotificationList, message);\n        return;\n      }\n\n      if (message.data?.type === 'chat' && message.data?.event === 'Message') {\n        let options = {\n          title: message?.notification?.title,\n          message: message?.notification?.body,\n          userInfo: message\n        }\n        PushNotification.localNotification(options);\n        event.emit(AppEvent.OnRefreshNotificationList, message);\n        return;\n      }\n\n      // display site key notification when app is in foreground mode\n      if (message.data?.type === 'SiteKey' && message.data?.event === 'SiteKey') {\n        if (typeof message.data?.data === \"string\") {\n          const siteKeyData = JSON.parse(message.data.data);\n          let options = {\n            title: siteKeyData.title || \"\",\n            message: siteKeyData.message || \"\",\n            userInfo: message,\n          };\n          PushNotification.localNotification(options);\n        }\n        return;\n      }\n\n      // handle notify user notification\n      if (message?.data?.link != undefined) {\n\n        let options = {\n          title: message.notification?.title,\n          message: message.notification?.body,\n          userInfo: message\n        }\n        PushNotification.localNotification(options);\n        event.emit(AppEvent.OnRefreshNotificationList, \"NotifyUser\");\n      }\n\n      if (\n        message.data?.type === 'group' &&\n        message.data?.event === 'groupChanged' || message.data?.event === 'groupUpdated'\n      ) {\n        event.emit(AppEvent.OnRefreshNotificationList, \"OnOrganizationGroupUpdated\");\n        event.emit(AppEvent.OnOrganizationGroupUpdated, \"OnOrganizationGroupUpdated\");\n        return;\n      }\n\n      if (message.data?.type === 'logout_user') {\n        event.emit(AppEvent.OnLogout, message?.notification);\n        return;\n      }\n\n      // console.log(\"message.data?.type=>\",message.data?.type)\n      if (message.data?.type === 'Location' && message.data?.event === 'LocationQuestion') {\n        // console.log(\"locationquestion===>\", JSON.stringify(message.data))\n        sendLocalNotification({\n          title: JSON.parse(message.data?.data).title,\n          message: JSON.parse(message.data?.data).message,\n          userInfo: message.data\n        });\n        return;\n      }\n    }\n\n    // update user locaiton on notification arrival\n    if (message.data?.type === 'silentPush' && message.data?.event === 'LocationUpdate') {\n      updateUserLocation()\n    }\n\n  });\n\n  messaging().onNotificationOpenedApp(async (remoteMessage) => {\n    //('onNotificationOpenedApp', remoteMessage);\n    if (remoteMessage.data?.type === 'logout_user') {\n      event.emit(AppEvent.OnLogout, remoteMessage?.notification);\n    }\n  });\n\n  messaging()\n    .getInitialNotification()\n    .then(async (remoteMessage) => {\n      //('getInitialNotification*******',);\n      // //('getInitialNotification', remoteMessage.data?.type);\n\n      if (remoteMessage?.data?.type === 'logout_user') {\n        event.emit(AppEvent.OnLogout, remoteMessage?.notification);\n        // return;\n      }\n\n    });\n\n  messaging().setBackgroundMessageHandler(\n    async (message: FirebaseMessagingTypes.RemoteMessage) => {\n      console.log(\"background Handler message ===>\", message)\n      if (message.data?.incidentId) {\n        await AsyncStorage.setItem(\n          ANDROID_HEADLESS_NOTIFICATION_KEY,\n          message.data.incidentId,\n        );\n      }\n      // sendLocalMessage(message);\n\n      //update user location\n      if (message?.data?.type == \"silentPush\" && message?.data?.event == \"LocationUpdate\") {\n        updateUserLocation()\n      }\n\n      if (message.data?.type === 'geofence' && message.data?.event === 'polygon') {\n        const payloaData = typeof message.data?.data === 'string' ? JSON.parse(message.data.data) : message.data?.data;\n        crudGeofenceOperation(payloaData.data, message.data?.isCron)\n      }\n\n      if (message.data?.type === 'SiteKey' && message.data?.event === 'SiteKey') {\n        sendLocalNotification({\n          title: JSON.parse(message.data?.data).title,\n          message: JSON.parse(message.data?.data).message,\n          userInfo: message.data\n        });\n        return;\n      }\n\n    },\n  );\n};\n\nexport default setupFirebaseMessage;\n"],"mappings":"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","ignoreList":[]}