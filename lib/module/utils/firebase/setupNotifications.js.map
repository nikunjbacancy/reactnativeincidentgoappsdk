{"version":3,"names":["AsyncStorage","AppEvent","event","Screens","ESCORT_STATE_KEY","EscortState","IncidentType","PNotification","isAndroid","isIos","NavigatorService","getIncidentId","notification","_notification$data","_notification$userInf","data","incidentId","_notification$data2","userInfo","_notification$userInf2","undefined","setupNotifications","Promise","configure","onRegister","token","console","log","createChannel","channelId","channelName","channelDescription","playSound","soundName","importance","vibrate","created","onNotification","_notification$data12","_notification$data13","_notification$data15","_notification$data16","_notification$data25","_notification$data26","_notification$data28","_notification$data29","_notification$data36","_notification$userInf3","userInteraction","_notification$data3","_notification$data4","_notification$data6","_notification$data7","type","Normal","_notification$data5","navigate","Menu","Tips","TipDetail","incident","showChat","tipId","_notification$data8","_notification$data9","_notification$data10","_notification$data11","Escort","_notification$data14","emit","OnEscortClosed","OnLocationQuestion","foreground","_notification$data17","_notification$data18","_notification$data19","_notification$data20","OnSiteKeyNotificataionReceived","_notification$data21","_notification$data22","_notification$data23","_notification$data24","PassiveEscort","_notification$data27","OnBeaconUpdated","OnChatMessageTap","_notification$data30","_notification$data31","_notification$data32","_notification$data33","_notification$data34","_notification$data35","incidentType","link","escortState","getItem","Started","id","permissions","alert","badge","sound","popInitialNotification","requestPermissions"],"sources":["setupNotifications.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AppEvent, event } from '../../api';\nimport Screens from '../../containers/providers/RoutesProvider/screens';\nimport { ESCORT_STATE_KEY } from '../../containers/screens/Home/Escort/RecordScreen/constants';\nimport { EscortState } from '../../containers/screens/Home/Escort/RecordScreen/types';\nimport { IncidentType } from 'incident-code-core';\nimport PNotification, {\n  PushNotification\n} from 'react-native-push-notification';\n\nimport { isAndroid, isIos } from '../device';\nimport NavigatorService from '../navigation';\n\nconst getIncidentId = (notification: PushNotification): string | undefined => {\n  // //(\"getIncidentId--->\")\n  // //(\"getIncidentId notification--->\",notification)\n  // @ts-ignore\n  if (notification.data?.incidentId) {\n    // @ts-ignore\n    return notification.data?.incidentId;\n  }\n  if (notification.userInfo?.incidentId) {\n    return notification.userInfo?.incidentId;\n  }\n  return undefined;\n};\n\n// const setupNotifications = (): Promise<PushNotification | undefined> =>\n//   new Promise(() => {\n//     //(\"notification setup\")\n//     PNotification.configure({\n//       onRegister: function (token) {\n//         console.log(\"TOKEN:\", token);\n//       },\n//       onNotification: async notification => {\n//         // //(\"notification: --------- \" + JSON.stringify(notification));\n\n//         if (!notification.userInteraction) {\n//           return;\n//         }\n\n//         if (\n//           // @ts-ignore\n//           notification.data?.type === \"Location\" &&\n//           // @ts-ignore\n//           notification.data?.event === 'LocationQuestion'\n//         ) {\n//           // console.log(\"Incident Escort --------- \");\n//           // @ts-ignore\n//           console.log(\"******************************location question******************************\")\n//           event.emit(AppEvent.OnLocationQuestion, notification.data);\n//           return;\n//         }\n\n//         //incidentType\n//         if (\n//           // @ts-ignore\n//           notification.data?.type === IncidentType.Normal &&\n//           // @ts-ignore\n//           notification.data?.event === 'resolved'\n//         ) {\n//           //(\"AppEvent.OnIncidentUpdated: --------- \");\n//           // @ts-ignore\n//           event.emit(AppEvent.OnIncidentUpdated, notification.data?.tipId);\n//           return;\n//         }\n//         if (\n//           // @ts-ignore\n//           notification.data?.type === IncidentType.Escort &&\n//           // @ts-ignore\n//           notification.data?.event === 'resolved'\n//         ) {\n//           //(\"Incident Escort --------- \");\n//           // @ts-ignore\n//           event.emit(AppEvent.OnEscortClosed, notification.data?.tipId);\n//           return;\n//         }\n\n//         if (\n//           // @ts-ignore\n//           notification.data?.type === 'beacon' &&\n//           // @ts-ignore\n//           notification.data?.event === 'beaconUpdate'\n//         ) {\n//           //(\"AppEvent.OnBeaconUpdated --------- \");\n//           event.emit(AppEvent.OnBeaconUpdated, notification.data);\n//           return;\n//         }\n\n//         if (\n//           // @ts-ignore\n//           notification.data?.incidentType === IncidentType.Escort ||\n//           // @ts-ignore\n//           notification.userInfo?.link\n//         )\n//           return;\n//         // @ts-ignore\n//         // if (isIos) {\n//         //   const incidentId = getIncidentId(notification);\n//         //   if (incidentId) {\n//         //     await addBadge(incidentId as Id);\n//         //   }\n//         // }\n//         const escortState = await AsyncStorage.getItem(ESCORT_STATE_KEY);\n//         if (escortState === EscortState.Started) return;\n//         if (notification.foreground && isIos) {\n//           // //(\"notification foreground received --------------- \")\n//           // return resolve(notification);\n//         }\n//         const incidentId = getIncidentId(notification);\n//         if (incidentId) {\n//           NavigatorService.navigate(Screens.Menu.Tips.TipDetail, {\n//             incident: {\n//               id: incidentId,\n//             },\n//             showChat: true,\n//           });\n//         }\n//       },\n\n//       permissions: {\n//         alert: true,\n//         badge: true,\n//         sound: true\n//       },\n\n//       popInitialNotification: true,\n//       requestPermissions: true,\n//     });\n//   });\n\nconst setupNotifications = (): Promise<PushNotification | undefined> =>\n  new Promise(() => {\n    PNotification.configure({\n      onRegister: function (token) {\n        console.log(\"TOKEN:\", token);\n        if (isAndroid) {\n          PNotification.createChannel(\n            {\n              channelId: \"ico-app\", // (required)\n              channelName: \"icoappchannel\", // (required)\n              channelDescription: \"A channel to categorise your notifications\", // (optional) default: undefined.\n              playSound: true, // (optional) default: true\n              soundName: \"default\", // (optional) See `soundName` parameter of `localNotification` function\n              importance: 4, // (optional) default: Importance.HIGH. Int value of the Android notification importance\n              vibrate: true, // (optional) default: true. Creates the default vibration pattern if true.\n\n            },\n            (created) => console.log(`createChannel returned '${created}'`) // (optional) callback returns whether the channel was created, false means it already existed.\n          );\n\n        }\n      },\n\n      onNotification: async notification => {\n        // console.log(\"onNotification====>\",notification)\n        if (!notification.userInteraction) {\n          return;\n        }\n        console.log(\"on tap====>\",notification)\n        if (isIos) {\n          if (notification.data?.type === IncidentType.Normal && notification.data?.event === 'resolved') {\n            NavigatorService.navigate(Screens.Menu.Tips.TipDetail, {\n              incident: undefined,\n              showChat: false,\n              tipId: notification.data?.tipId\n            });\n            return;\n          }\n          if (notification.data?.data?.type === IncidentType.Normal && notification.data?.data?.event === 'resolved') {\n            NavigatorService.navigate(Screens.Menu.Tips.TipDetail, {\n              incident: undefined,\n              showChat: false,\n              tipId: notification.data?.data?.tipId\n            });\n            return;\n          }\n\n        } else {\n          if (notification.data?.data?.type === IncidentType.Normal && notification.data?.data?.event === 'resolved') {\n            NavigatorService.navigate(Screens.Menu.Tips.TipDetail, {\n              incident: undefined,\n              showChat: false,\n              tipId: notification.data?.data?.tipId\n            });\n            return;\n          }\n        }\n\n        if (\n          // @ts-ignore\n          notification.data?.type === IncidentType.Escort &&\n          // @ts-ignore\n          notification.data?.event === 'resolved'\n        ) {\n          // console.log(\"Incident Escort --------- \");\n          // @ts-ignore\n          event.emit(AppEvent.OnEscortClosed, notification.data?.tipId);\n          return;\n        }\n\n        if (\n          // @ts-ignore\n          notification.data?.type === \"Location\" &&\n          // @ts-ignore\n          notification.data?.event === 'LocationQuestion'\n        ) {\n          // console.log(\"Incident Escort --------- \");\n          // @ts-ignore\n          event.emit(AppEvent.OnLocationQuestion, notification.data);\n\n          return;\n        }\n\n        //handle site key notification\n        if (isIos) {\n          if (notification.foreground == false) {\n            if (notification.data?.type === \"SiteKey\" && notification.data?.event === 'SiteKey' ||\n              notification.data?.data?.type === \"SiteKey\" && notification.data?.data?.event === 'SiteKey'\n            ) {\n              event.emit(AppEvent.OnSiteKeyNotificataionReceived, notification.data);\n              return;\n            }\n          } else {\n            if (notification.data?.data?.type === \"SiteKey\" && notification.data?.data?.event === 'SiteKey') {\n              event.emit(AppEvent.OnSiteKeyNotificataionReceived, notification.data);\n              return;\n            }\n          }\n        }\n        else {\n          if (notification.data?.type === \"SiteKey\" && notification.data?.event === 'SiteKey') {\n            event.emit(AppEvent.OnSiteKeyNotificataionReceived, notification.data);\n            return;\n          }\n        }\n\n        if (\n          // @ts-ignore\n          notification.data?.type === IncidentType.PassiveEscort &&\n          // @ts-ignore\n          notification.data?.event === 'resolved'\n        ) {\n          // @ts-ignore\n          event.emit(AppEvent.OnEscortClosed, notification.data?.tipId);\n          return;\n        }\n\n        if (\n          // @ts-ignore\n          notification.data?.type === 'beacon' &&\n          // @ts-ignore\n          notification.data?.event === 'beaconUpdate'\n        ) {\n          event.emit(AppEvent.OnBeaconUpdated, notification.data);\n          return;\n        }\n\n        if (isIos) {\n          if (notification.foreground == false) {\n            if (notification.data.type === 'chat' && notification.data.event === 'Message') {\n              event.emit(AppEvent.OnChatMessageTap, notification.data.data);\n              return;\n            }\n          }\n          else {\n            if (notification.data?.data.type === 'chat' && notification.data?.data.event === 'Message') {\n              event.emit(AppEvent.OnChatMessageTap, notification.data?.data);\n              return;\n            }\n          }\n        } else {\n          if (notification.data?.data.type === 'chat' && notification.data?.data.event === 'Message') {\n            event.emit(AppEvent.OnChatMessageTap, notification.data?.data);\n            return;\n          }\n        }\n\n        if (\n          // @ts-ignore\n          notification.data?.incidentType === IncidentType.Escort ||\n          // @ts-ignore\n          notification.userInfo?.link\n        )\n          return;\n        // @ts-ignore\n        // if (isIos) {\n        //   const incidentId = getIncidentId(notification);\n        //   if (incidentId) {\n        //     await addBadge(incidentId as Id);\n        //   }\n        // }\n        const escortState = await AsyncStorage.getItem(ESCORT_STATE_KEY);\n        if (escortState === EscortState.Started) return;\n        if (notification.foreground && isIos) {\n          // console.log(\"notification foreground received --------------- \")\n          // return resolve(notification);\n        }\n        const incidentId = getIncidentId(notification);\n        if (incidentId) {\n          NavigatorService.navigate(Screens.Menu.Tips.TipDetail, {\n            incident: {\n              id: incidentId,\n            },\n            showChat: true,\n          });\n        }\n      },\n\n      permissions: {\n        alert: true,\n        badge: true,\n        sound: true\n      },\n\n      popInitialNotification: true,\n      requestPermissions: true,\n    });\n  });\n\nexport default setupNotifications;"],"mappings":"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","ignoreList":[]}