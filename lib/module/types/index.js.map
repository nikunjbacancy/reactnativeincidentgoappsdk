{"version":3,"names":["LogEvent"],"sources":["index.ts"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport {\n  Incident,\n  IncidentVideo,\n  LatLng,\n  Organization,\n  OrganizationProcedure,\n  OrganizationWithArea,\n  ProcedureAction,\n} from 'incident-code-core';\nimport { ReactElement, ReactNodeArray } from 'react';\nimport { MessageDescriptor } from 'react-intl';\nimport Reactotron from 'reactotron-react-native';\n\ndeclare global {\n  interface Console {\n    tron: typeof Reactotron;\n  }\n}\n\n// react-intl\ntype PrimitiveType = string | number | boolean | null | undefined | Date;\n\ntype FormatXMLElementFn = (...args: any[]) => string | object;\n\nexport interface FormatMessage {\n  (\n    descriptor: MessageDescriptor,\n    values?: Record<string, PrimitiveType>,\n  ): string;\n  (\n    descriptor: MessageDescriptor,\n    values?: Record<string, PrimitiveType | ReactElement | FormatXMLElementFn>,\n  ): string | ReactNodeArray;\n}\n\n// redux\nexport interface FluxAction {\n  type: string;\n  payload: any;\n}\n\nexport interface FluxErrorAction {\n  type: string;\n  payload: Error;\n  error: boolean;\n}\n\nexport interface OrganizationSelection extends Organization {\n  isSelected?: boolean;\n}\n\nexport interface ProcedureSelection extends OrganizationProcedure {\n  isSelected?: boolean;\n}\n\nexport interface CountdownAction extends ProcedureAction {\n  isCompleted?: boolean;\n}\n\nexport interface IntersectOrganizationSelection extends OrganizationWithArea {\n  isSelected?: boolean;\n}\n\nexport interface LocalIncident extends Incident {\n  videos?: IncidentVideo[];\n  lastSentLocation?: LatLng;\n}\n\nexport interface IncidentVideoInfo extends IncidentVideo {\n  text?: string;\n}\n\nexport enum LogEvent {\n  TapCamera = 'TapCamera',\n  TapFlash = 'TapFlash',\n  TapMapFilter = 'TapMapFilter',\n  TapMyLocation = 'TapMyLocation',\n  TapRecord = 'TapRecord',\n  TapStopRecord = 'TapStopRecord',\n}\n\nexport interface GeocodeResponse {\n  results: GeocodeResult[];\n}\n\ninterface GeocodeResult {\n  address_components: GeocodeAddressComponent[];\n  formatted_address: string;\n  partial_match: boolean;\n  place_id: string;\n  postcode_localities: string[];\n  types: string[];\n}\n\ninterface GeocodeAddressComponent {\n  long_name: string;\n  short_name: string;\n  types: string[];\n}\n"],"mappings":"AAAA;;AAoBA;;AAgBA;;AAqCA,WAAYA,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA","ignoreList":[]}