{"version":3,"names":[],"sources":["react-native-countdown-component.d.ts"],"sourcesContent":["declare module 'react-native-countdown-component' {\n  import * as React from 'react';\n  import { TextStyle, ViewStyle } from 'react-native';\n\n  export interface CountDownProps {\n    /**\n     * Counter id, to determine whether to reset the counter or not\n     * - `default` null\n     */\n    id?: string | null;\n\n    /**\n     * Override the component style\n     * - `default` {}\n     */\n    style?: ViewStyle;\n\n    /**\n     *  Digit style\n     * - `default`: {backgroundColor: '#FAB913'}\n     */\n    digitStyle?: ViewStyle;\n\n    /**\n     * Digit Text style\n     * - `default`: {color: #FAB913 '#000'}\n     */\n    digitTxtStyle?: TextStyle;\n\n    /**\n     * Time Label style\n     * - `default`: {color: #FAB913 '#000'}\n     */\n    timeLabelStyle?: TextStyle;\n\n    /**\n     * Separator style\n     * - `default`: {color: #FAB913 '#000'}\n     */\n    separatorStyle?: TextStyle;\n\n    /**\n     * Size of the countdown component\n     * - `default`: 15\n     */\n    size?: number;\n\n    /**\n     * Number of seconds to countdown\n     * - `default`: 0\n     */\n    until?: number;\n\n    /**\n     * What function should be invoked when the time is 0\n     * - `default`: null\n     */\n    onFinish?: () => void;\n\n    /**\n     * What function should be invoked when the timer is changing\n     * - `default`: null\n     */\n    onChange?: (until: number) => void;\n\n    /**\n     * What function should be invoked when clicking on the timer\n     * - `default`: null\n     */\n    onPress?: () => void;\n\n    /**\n     * What Digits to show\n     * - `default`: ['D', 'H', 'M', 'S']\n     */\n    timeToShow?: Array<'D' | 'H' | 'M' | 'S'>;\n\n    /**\n     * Text to show in time label\n     * - `default`: {d: 'Days', h: 'Hours', m: 'Minutes', s: 'Seconds'}\n     */\n    timeLabels?: { d?: string; h?: string; m?: string; s?: string };\n\n    /**\n     * Should show separator\n     * - `default`: false\n     */\n    showSeparator?: boolean;\n\n    /**\n     * A boolean to pause and resume the component\n     * - `default`: true\n     */\n    running?: boolean;\n  }\n\n  export interface CountDownState {\n    until: number;\n    lastUntil: number | null;\n    wentBackgroundAt: number | null;\n  }\n  export default class CountDown extends React.PureComponent<\n    CountDownProps,\n    CountDownState\n  > {}\n}\n"],"mappings":"","ignoreList":[]}