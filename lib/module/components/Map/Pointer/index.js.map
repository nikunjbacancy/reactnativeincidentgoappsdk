{"version":3,"names":["colors","React","Platform","styled","POINTER_PARAMS","width","OS","height","color","grey","defaultTranslateX","defaultPointerHeight","Pointer","createElement","PointerContainer","PointerView","View","theme","transparent"],"sources":["index.tsx"],"sourcesContent":["import { colors } from '../../../assets';\nimport React, { FC } from 'react';\nimport { Platform } from 'react-native';\nimport styled from '../../../utils/styled';\n\nconst POINTER_PARAMS = {\n  width: Platform.OS === 'android' ? 10 : 16,\n  height: Platform.OS === 'android' ? 12 : 8,\n  color: colors.grey,\n};\n\nconst defaultTranslateX =\n  Platform.OS === 'android' ? `-12px` : `-${POINTER_PARAMS.width / 2}px`;\n\nconst defaultPointerHeight =\n  Platform.OS === 'android'\n    ? `${POINTER_PARAMS.width}px`\n    : `${POINTER_PARAMS.height}px`;\n\ninterface Props {\n  color?: string;\n  width?: number;\n  height?: number;\n}\n\nconst Pointer: FC<Props> = ({ color, width, height }) => {\n  return (\n    <PointerContainer height={height}>\n      <PointerView color={color} height={height} width={width} />\n    </PointerContainer>\n  );\n};\n\nconst PointerContainer = styled.View<{ height?: number }>`\n  background-color: ${({ theme }) => theme.colors.transparent};\n  height: ${({ height }) => (height ? `${height}px` : defaultPointerHeight)};\n`;\n\nconst PointerView = styled.View<{\n  color?: string;\n  width?: number;\n  height?: number;\n}>`\n  position: relative;\n  transform: translateX(\n    ${({ width }) => (width ? `-${width / 2}px` : defaultTranslateX)}\n  );\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-top-width: ${({ width }) =>\n    width ? `${width}px` : `${POINTER_PARAMS.width}px`};\n  border-left-width: ${({ height }) =>\n    height ? `${height}px` : `${POINTER_PARAMS.height}px`};\n  border-right-width: ${({ height }) =>\n    height ? `${height}px` : `${POINTER_PARAMS.height}px`};\n  border-top-color: ${({ theme, color }) => color || theme.colors.grey};\n  border-left-color: ${({ theme }) => theme.colors.transparent};\n  border-right-color: ${({ theme }) => theme.colors.transparent};\n`;\n\nexport default Pointer;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,KAAK,MAAc,OAAO;AACjC,SAASC,QAAQ,QAAQ,cAAc;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAEH,QAAQ,CAACI,EAAE,KAAK,SAAS,GAAG,EAAE,GAAG,EAAE;EAC1CC,MAAM,EAAEL,QAAQ,CAACI,EAAE,KAAK,SAAS,GAAG,EAAE,GAAG,CAAC;EAC1CE,KAAK,EAAER,MAAM,CAACS;AAChB,CAAC;AAED,MAAMC,iBAAiB,GACrBR,QAAQ,CAACI,EAAE,KAAK,SAAS,GAAG,OAAO,GAAG,IAAIF,cAAc,CAACC,KAAK,GAAG,CAAC,IAAI;AAExE,MAAMM,oBAAoB,GACxBT,QAAQ,CAACI,EAAE,KAAK,SAAS,GACrB,GAAGF,cAAc,CAACC,KAAK,IAAI,GAC3B,GAAGD,cAAc,CAACG,MAAM,IAAI;AAQlC,MAAMK,OAAkB,GAAGA,CAAC;EAAEJ,KAAK;EAAEH,KAAK;EAAEE;AAAO,CAAC,KAAK;EACvD,oBACEN,KAAA,CAAAY,aAAA,CAACC,gBAAgB;IAACP,MAAM,EAAEA;EAAO,gBAC/BN,KAAA,CAAAY,aAAA,CAACE,WAAW;IAACP,KAAK,EAAEA,KAAM;IAACD,MAAM,EAAEA,MAAO;IAACF,KAAK,EAAEA;EAAM,CAAE,CAC1C,CAAC;AAEvB,CAAC;AAED,MAAMS,gBAAgB,GAAGX,MAAM,CAACa,IAAyB;AACzD,sBAAsB,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACjB,MAAM,CAACkB,WAAW;AAC7D,YAAY,CAAC;EAAEX;AAAO,CAAC,KAAMA,MAAM,GAAG,GAAGA,MAAM,IAAI,GAAGI,oBAAqB;AAC3E,CAAC;AAED,MAAMI,WAAW,GAAGZ,MAAM,CAACa,IAIzB;AACF;AACA;AACA,MAAM,CAAC;EAAEX;AAAM,CAAC,KAAMA,KAAK,GAAG,IAAIA,KAAK,GAAG,CAAC,IAAI,GAAGK,iBAAkB;AACpE;AACA;AACA;AACA;AACA,sBAAsB,CAAC;EAAEL;AAAM,CAAC,KAC5BA,KAAK,GAAG,GAAGA,KAAK,IAAI,GAAG,GAAGD,cAAc,CAACC,KAAK,IAAI;AACtD,uBAAuB,CAAC;EAAEE;AAAO,CAAC,KAC9BA,MAAM,GAAG,GAAGA,MAAM,IAAI,GAAG,GAAGH,cAAc,CAACG,MAAM,IAAI;AACzD,wBAAwB,CAAC;EAAEA;AAAO,CAAC,KAC/BA,MAAM,GAAG,GAAGA,MAAM,IAAI,GAAG,GAAGH,cAAc,CAACG,MAAM,IAAI;AACzD,sBAAsB,CAAC;EAAEU,KAAK;EAAET;AAAM,CAAC,KAAKA,KAAK,IAAIS,KAAK,CAACjB,MAAM,CAACS,IAAI;AACtE,uBAAuB,CAAC;EAAEQ;AAAM,CAAC,KAAKA,KAAK,CAACjB,MAAM,CAACkB,WAAW;AAC9D,wBAAwB,CAAC;EAAED;AAAM,CAAC,KAAKA,KAAK,CAACjB,MAAM,CAACkB,WAAW;AAC/D,CAAC;AAED,eAAeN,OAAO","ignoreList":[]}