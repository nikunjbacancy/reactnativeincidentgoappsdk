{"version":3,"names":["logger","images","setTipCameraMode","setTipCameraVideoIndex","makeSelectConfigs","makeSelectTipCameraMode","makeSelectTipVideoIndex","isEmpty","React","forwardRef","memo","useCallback","useEffect","useRef","useState","useIntl","RNCamera","Toast","LogEvent","logEvent","useAction","useSelector","useTimerInterval","getCachedFinePosition","deleteLocalVideo","THUMBNAIL_MARGIN_RIGHT","THUMBNAIL_WIDTH","TRACKER_WIDTH_HALF","messages","PlayButton","BottomControls","Camera","CameraFlashButton","CameraFlipButton","ChatButton","ChatContainer","CircleProgress","CloseButton","Container","TouchableLogo","Logo","PhoneButton","RecordControls","RecordStart","RecordStop","StyledBadge","Timer","VideoContainer","VideoLoading","VideoPlayer","CameraType","FlashMode","TipCameraMode","VideoList","VideoTracker","NavigatorService","TipCamera","badges","tipCameraMode","camera","incidentVideos","isFocused","isVideoPaused","isRecordEnabled","isChatDisabled","onTimeChange","onRecordStarted","onRecordFinished","onPhonePress","onChatPress","ref","_incidentVideos$video","_incidentVideos$2","myRef","formatMessage","recordedTime","cameraType","setCameraType","back","flashMode","setFlashMode","off","recordedProgress","setRecordedProgress","isRecording","setIsRecording","cameraMode","configs","videoIndex","videoLoading","setVideoLoading","videoSeconds","setVideoSeconds","duration","setDuration","trackerY","setTrackerY","shouldPauseVideo","setShouldPauseVideo","videoUrl","setVideoUrl","url","setTipCameraModeAction","setTipCameraVideoIndexAction","handleTimeChange","time","current","maxRecordDuration","handleRecordFinished","filePath","show","canceled","position","positions","CENTER","startTimer","stopTimer","recordSeconds","interval","increment","expire","onExpire","_myRef$current","stopRecording","_incidentVideos$video2","_incidentVideos$","_incidentVideos$video3","onFlipButtonClick","currentCameraType","front","TapCamera","onFlashButtonClick","isFlashOff","isCameraBack","currentFlashMode","on","TapFlash","mode","startCameraRecord","options","quality","Constants","VideoQuality","codec","maxDuration","data","recordAsync","debug","uri","error","warn","stopCameraRecord","record","console","log","TapStopRecord","TapRecord","noLocation","toggleVideoPause","onVideoLoaded","onVideoProgress","video","step","currentTime","onVideoEnd","length","nextIndex","onVideoSelected","index","closeVideoPlayer","onLogoPressed","createElement","node","captureAudio","type","androidCameraPermissionOptions","title","permissionWarning","message","permissionCameraBody","buttonPositive","ok","buttonNegative","cancel","androidRecordAudioPermissionOptions","permissionRecordAudioBody","onPress","isDisabled","image","icFlash","icFlashActive","icFlip","icFlipActive","Fragment","onLoadStart","source","paused","onLoad","onProgress","repeat","onEnd","resizeMode","isPlaying","videos","icClose","icPhoneCall","disabled","progress","size","borderWidth","fill","icChat"],"sources":["index.tsx"],"sourcesContent":["import { logger } from '../../api';\nimport { images } from '../../assets';\nimport {\n  setTipCameraMode,\n  setTipCameraVideoIndex,\n} from '../../containers/app/actions';\nimport {\n  makeSelectConfigs,\n  makeSelectTipCameraMode,\n  makeSelectTipVideoIndex,\n} from '../../containers/app/selectors';\nimport { Id, IncidentVideo } from 'incident-code-core';\nimport isEmpty from 'lodash/isEmpty';\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useIntl } from 'react-intl';\nimport { RecordOptions, RecordResponse, RNCamera } from 'react-native-camera';\nimport Toast from 'react-native-root-toast';\nimport { OnLoadData } from 'react-native-video';\nimport { LogEvent } from '../../types';\nimport { logEvent } from '../../utils/firebase';\nimport { useAction, useSelector, useTimerInterval } from '../../utils/hooks';\nimport { getCachedFinePosition } from '../../utils/location';\nimport { deleteLocalVideo } from '../../utils/video';\nimport {\n  THUMBNAIL_MARGIN_RIGHT,\n  THUMBNAIL_WIDTH,\n  TRACKER_WIDTH_HALF,\n} from './constants';\nimport messages from './messages';\nimport PlayButton from './PlayButton';\nimport {\n  BottomControls,\n  Camera,\n  CameraFlashButton,\n  CameraFlipButton,\n  ChatButton,\n  ChatContainer,\n  CircleProgress,\n  CloseButton,\n  Container,\n  TouchableLogo,\n  Logo,\n  PhoneButton,\n  RecordControls,\n  RecordStart,\n  RecordStop,\n  StyledBadge,\n  Timer,\n  VideoContainer,\n  VideoLoading,\n  VideoPlayer,\n} from './styles';\nimport { CameraType, FlashMode, TipCameraMode } from './types';\nimport VideoList from './VideoList';\nimport VideoTracker from './VideoTracker';\nimport NavigatorService from '../../utils/navigation';\n\ninterface VideoProgress {\n  currentTime: number;\n  playableDuration: number;\n  seekableDuration: number;\n}\n\nexport type TipProps = {\n  tipCameraMode?: TipCameraMode;\n  incidentVideos: IncidentVideo[];\n  isFocused?: boolean;\n  isVideoPaused?: boolean;\n  isRecordEnabled?: boolean;\n  isChatDisabled?: boolean;\n  onTimeChange?(time: number): void;\n  onRecordStarted?(): void;\n  onRecordFinished(uri: string): void;\n  onPhonePress(): void;\n  onChatPress(): void;\n  badges?: Id[];\n}\n\nconst TipCamera = forwardRef((\n  { badges,\n    tipCameraMode = TipCameraMode.camera,\n    incidentVideos,\n    isFocused = true,\n    isVideoPaused,\n    isRecordEnabled,\n    isChatDisabled,\n    onTimeChange,\n    onRecordStarted,\n    onRecordFinished,\n    onPhonePress,\n    onChatPress }: TipProps,\n  ref: React.ForwardedRef<RNCamera>,\n): React.ReactElement => {\n\n  // const myRef = useRef<RNCamera>(ref);\n  let myRef = useRef<RNCamera | null>(null);\n  // console.log(\"myRef===>\", myRef)\n\n  const { formatMessage } = useIntl();\n\n  // camera\n  const recordedTime = useRef(0);\n\n  const [cameraType, setCameraType] = useState(CameraType.back);\n  const [flashMode, setFlashMode] = useState(FlashMode.off);\n  const [recordedProgress, setRecordedProgress] = useState(0);\n  const [isRecording, setIsRecording] = useState(false);\n\n  // video\n  const cameraMode = useSelector(makeSelectTipCameraMode());\n  const configs = useSelector(makeSelectConfigs());\n  const videoIndex = useSelector(makeSelectTipVideoIndex());\n\n  const [videoLoading, setVideoLoading] = useState(true);\n  const [videoSeconds, setVideoSeconds] = useState(0);\n  const [duration, setDuration] = useState(1);\n  const [trackerY, setTrackerY] = useState(-TRACKER_WIDTH_HALF);\n  const [shouldPauseVideo, setShouldPauseVideo] = useState(false);\n  const [videoUrl, setVideoUrl] = useState(incidentVideos[videoIndex]?.url);\n\n  const setTipCameraModeAction = useAction(setTipCameraMode);\n  const setTipCameraVideoIndexAction = useAction(setTipCameraVideoIndex);\n\n  const handleTimeChange = useCallback(\n    (time: number) => {\n      onTimeChange && onTimeChange(time);\n      recordedTime.current = time;\n      setRecordedProgress(time / configs.maxRecordDuration);\n    },\n    [configs],\n  );\n\n  const handleRecordFinished = useCallback((filePath: string) => {\n    if (recordedTime.current < 2) {\n      Toast.show(formatMessage(messages.canceled), {\n        position: Toast.positions.CENTER,\n      });\n\n      return deleteLocalVideo(filePath);\n    }\n    recordedTime.current = 0;\n    onRecordFinished(filePath);\n    return\n  }, []);\n\n  const { startTimer, stopTimer, time: recordSeconds } = useTimerInterval({\n    interval: 500,\n    increment: 0.5,\n    onTimeChange: handleTimeChange,\n    expire: configs.maxRecordDuration,\n    onExpire: () => myRef?.current?.stopRecording()\n  });\n\n  useEffect(() => {\n\n  }, [ref]);\n\n  useEffect(() => {\n    setTipCameraModeAction(tipCameraMode);\n  }, [tipCameraMode]);\n\n  useEffect(() => {\n    if (!isFocused) {\n      setFlashMode(FlashMode.off);\n      setCameraType(CameraType.back);\n    }\n  }, [isFocused]);\n\n  useEffect(() => {\n    if (isRecording) {\n      startTimer();\n    } else {\n      stopTimer();\n    }\n  }, [isRecording]);\n\n  useEffect(() => {\n    setShouldPauseVideo(!!isVideoPaused);\n  }, [isVideoPaused]);\n\n  useEffect(() => {\n    setVideoUrl(incidentVideos[videoIndex]?.url);\n  }, [videoIndex]);\n\n  useEffect(() => {\n    if (incidentVideos[0]?.url) {\n      setVideoUrl(incidentVideos[videoIndex]?.url);\n    }\n  }, [incidentVideos[0]?.url]);\n\n  const onFlipButtonClick = useCallback(() => {\n    if (isRecording) return;\n\n    const currentCameraType =\n      cameraType === CameraType.back ? CameraType.front : CameraType.back;\n\n    logEvent(LogEvent.TapCamera, { cameraType });\n\n    setFlashMode(FlashMode.off);\n    setCameraType(currentCameraType);\n  }, [isRecording, cameraType]);\n\n  const onFlashButtonClick = useCallback(() => {\n    if (isRecording) return;\n    const isFlashOff = flashMode === FlashMode.off;\n    const isCameraBack = cameraType === CameraType.back;\n    const currentFlashMode =\n      isFlashOff && isCameraBack ? FlashMode.on : FlashMode.off;\n\n    logEvent(LogEvent.TapFlash, {\n      mode: currentFlashMode,\n    });\n\n    setFlashMode(currentFlashMode);\n  }, [isRecording, flashMode, cameraType]);\n\n  const startCameraRecord = useCallback(\n    async (camera: RNCamera) => {\n      try {\n        const options: RecordOptions = {\n          quality: RNCamera.Constants.VideoQuality['480p'],\n          codec: 'H264',\n          maxDuration: configs.maxRecordDuration,\n        };\n        setIsRecording(true);\n        const data: RecordResponse = await camera.recordAsync(options);\n        logger.debug('Recorder', 'Recorded', data);\n        await handleRecordFinished(data.uri);\n      } catch (error) {\n        logger.warn('Recorder', 'Record Failed', error);\n      } finally {\n        setIsRecording(false);\n      }\n    },\n    [configs],\n  );\n\n  const stopCameraRecord = useCallback((camera: RNCamera) => {\n    camera.stopRecording();\n    setRecordedProgress(0);\n  }, []);\n\n  const record = useCallback(async () => {\n    onRecordStarted?.();\n    setTipCameraModeAction(TipCameraMode.camera);\n    setTrackerY(-TRACKER_WIDTH_HALF);\n    setVideoSeconds(0);\n    setRecordedProgress(0);\n    console.log(\"!myRef?.current\", !myRef?.current)\n    if (!myRef?.current) return;\n    try {\n      await getCachedFinePosition();\n      if (isRecording) {\n        logEvent(LogEvent.TapStopRecord);\n        stopCameraRecord(myRef?.current);\n      } else {\n        logEvent(LogEvent.TapRecord);\n        await startCameraRecord(myRef?.current);\n      }\n    } catch (error) {\n      Toast.show(formatMessage(messages.noLocation), {\n        position: Toast.positions.CENTER,\n      });\n      stopCameraRecord(myRef?.current);\n    }\n  }, [onRecordStarted, isRecording]);\n\n  // video\n  const toggleVideoPause = useCallback(() => {\n    setShouldPauseVideo(!shouldPauseVideo);\n  }, [shouldPauseVideo]);\n\n  const onVideoLoaded = useCallback((data: OnLoadData) => {\n    setVideoLoading(false);\n    setDuration(data.duration);\n  }, []);\n\n  const onVideoProgress = useCallback(\n    (video: VideoProgress) => {\n      const step = THUMBNAIL_WIDTH / duration;\n      setTrackerY(\n        step * video.currentTime +\n        (THUMBNAIL_WIDTH + THUMBNAIL_MARGIN_RIGHT) * videoIndex -\n        TRACKER_WIDTH_HALF,\n      );\n      setVideoSeconds(video.currentTime);\n    },\n    [videoIndex, duration],\n  );\n\n  const onVideoEnd = useCallback(() => {\n    if (incidentVideos.length === 1) {\n      setVideoSeconds(0);\n      setTipCameraVideoIndexAction(0);\n      setTrackerY(-TRACKER_WIDTH_HALF);\n      setShouldPauseVideo(false);\n    } else {\n      const nextIndex = (videoIndex + 1) % incidentVideos.length;\n      setTipCameraVideoIndexAction(nextIndex);\n      setVideoSeconds(0);\n      setTrackerY(\n        (THUMBNAIL_WIDTH + THUMBNAIL_MARGIN_RIGHT) * nextIndex -\n        TRACKER_WIDTH_HALF,\n      );\n      setVideoUrl(incidentVideos[nextIndex].url);\n    }\n  }, [incidentVideos, videoIndex]);\n\n  const onVideoSelected = useCallback(\n    (index: number) => {\n      if (index !== videoIndex) {\n        setTipCameraVideoIndexAction(index);\n        setVideoSeconds(0);\n        setTrackerY(\n          (THUMBNAIL_WIDTH + THUMBNAIL_MARGIN_RIGHT) * index -\n          TRACKER_WIDTH_HALF,\n        );\n        setVideoUrl(incidentVideos[index].url);\n      }\n    },\n    [incidentVideos, videoIndex],\n  );\n\n  const closeVideoPlayer = useCallback(() => {\n    setTipCameraModeAction(TipCameraMode.camera);\n  }, []);\n\n  const onLogoPressed = () => {\n    NavigatorService.back();\n  }\n\n  return (\n    <Container>\n      {cameraMode === TipCameraMode.camera ? (\n        <Camera\n          // ref={ref}\n          ref={(node : any) => {\n            myRef.current = node;\n            if (typeof ref === 'function') {\n              ref(node);\n            } else if (ref) {\n              ref.current = node;\n            }\n          }}\n          captureAudio\n          type={cameraType}\n          flashMode={flashMode}\n          androidCameraPermissionOptions={{\n            title: formatMessage(messages.permissionWarning),\n            message: formatMessage(messages.permissionCameraBody),\n            buttonPositive: formatMessage(messages.ok),\n            buttonNegative: formatMessage(messages.cancel),\n          }}\n          androidRecordAudioPermissionOptions={{\n            title: formatMessage(messages.permissionWarning),\n            message: formatMessage(messages.permissionRecordAudioBody),\n            buttonPositive: formatMessage(messages.ok),\n            buttonNegative: formatMessage(messages.cancel),\n          }}\n        >\n          <VideoList incidentVideos={incidentVideos} />\n          <CameraFlashButton\n            onPress={onFlashButtonClick}\n            isDisabled={isRecording}\n            image={\n              flashMode === FlashMode.off\n                ? images.icFlash()\n                : images.icFlashActive()\n            }\n          />\n          <CameraFlipButton\n            onPress={onFlipButtonClick}\n            isDisabled={isRecording}\n            image={\n              cameraType === CameraType.back\n                ? images.icFlip()\n                : images.icFlipActive()\n            }\n          />\n        </Camera>\n      ) : (\n        <VideoContainer onPress={toggleVideoPause}>\n          <>\n            <VideoPlayer\n              onLoadStart={() => setVideoLoading(true)}\n              source={{ uri: videoUrl }}\n              paused={shouldPauseVideo}\n              onLoad={onVideoLoaded}\n              onProgress={onVideoProgress}\n              repeat={incidentVideos.length === 1}\n              onEnd={onVideoEnd}\n              resizeMode=\"cover\"\n            />\n            {videoLoading && <VideoLoading />}\n            <PlayButton isPlaying={!shouldPauseVideo} />\n            <VideoTracker\n              trackerY={trackerY}\n              videoIndex={videoIndex}\n              videos={incidentVideos}\n              onVideoSelected={onVideoSelected}\n            />\n            <CloseButton source={images.icClose()} onPress={closeVideoPlayer} />\n          </>\n        </VideoContainer>\n      )}\n\n      <TouchableLogo onPress={onLogoPressed}>\n        <Logo />\n      </TouchableLogo>\n\n      <Timer\n        isRecording={isRecording}\n        recordedTime={recordSeconds || videoSeconds}\n      />\n      <BottomControls>\n        <PhoneButton\n          onPress={onPhonePress}\n          isDisabled={isRecording}\n          image={images.icPhoneCall()}\n        />\n        <RecordControls disabled={!isRecordEnabled} onPress={record}>\n          {isRecording ? (\n            <RecordStop />\n          ) : (\n            <RecordStart disabled={!isRecordEnabled} />\n          )}\n          {isRecording && (\n            <CircleProgress\n              progress={recordedProgress}\n              size={74}\n              borderWidth={0}\n              fill={\"#00000000\"}\n            />\n          )}\n        </RecordControls>\n        <ChatContainer>\n          <ChatButton\n            onPress={onChatPress}\n            isDisabled={isRecording || isChatDisabled}\n            image={images.icChat()}\n          />\n          {!isEmpty(badges) && <StyledBadge length={badges?.length} />}\n        </ChatContainer>\n      </BottomControls>\n    </Container>\n  );\n});\n\nexport default memo(TipCamera);\n"],"mappings":"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","ignoreList":[]}