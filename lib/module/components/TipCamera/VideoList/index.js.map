{"version":3,"names":["map","React","useMemo","useState","styled","splitVideosOnPages","VideoCard","VideoList","incidentVideos","currentPage","setCurrentPage","videoPages","activePage","onNextPage","isLastPage","length","createElement","Container","id","duration","thumbnailUrl","text","index","navigateClick","key","View"],"sources":["index.tsx"],"sourcesContent":["import { IncidentVideo } from 'incident-code-core';\nimport map from 'lodash/map';\nimport React, { FC, useMemo, useState } from 'react';\nimport styled from '../../../utils/styled';\nimport { splitVideosOnPages } from '../../../utils/video';\nimport VideoCard from '../VideoCard';\n\ninterface Props {\n  incidentVideos: IncidentVideo[];\n}\n\nconst VideoList: FC<Props> = ({ incidentVideos }) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const videoPages = useMemo(() => splitVideosOnPages(incidentVideos), [\n    incidentVideos,\n  ]);\n  const activePage = videoPages[currentPage];\n\n  if (!activePage) {\n    return null;\n  }\n\n  const onNextPage = () => {\n    const isLastPage = currentPage + 1 === videoPages.length;\n    setCurrentPage(isLastPage ? 0 : currentPage + 1);\n  };\n\n  return (\n    <Container>\n      {map(activePage, ({ id, duration, thumbnailUrl, text }, index) => (\n        <VideoCard\n          id={id}\n          videoPages={videoPages}\n          currentPage={currentPage}\n          duration={duration}\n          thumbnailUrl={thumbnailUrl}\n          text={text}\n          navigateClick={onNextPage}\n          key={index}\n        />\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled.View`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 70px;\n  height: 90px;\n  padding-left: 23px;\n  padding-right: 23px;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: stretch;\n  justify-content: center;\n`;\n\nexport default VideoList;\n"],"mappings":"AACA,OAAOA,GAAG,MAAM,YAAY;AAC5B,OAAOC,KAAK,IAAQC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,OAAOC,SAAS,MAAM,cAAc;AAMpC,MAAMC,SAAoB,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMQ,UAAU,GAAGT,OAAO,CAAC,MAAMG,kBAAkB,CAACG,cAAc,CAAC,EAAE,CACnEA,cAAc,CACf,CAAC;EACF,MAAMI,UAAU,GAAGD,UAAU,CAACF,WAAW,CAAC;EAE1C,IAAI,CAACG,UAAU,EAAE;IACf,OAAO,IAAI;EACb;EAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,UAAU,GAAGL,WAAW,GAAG,CAAC,KAAKE,UAAU,CAACI,MAAM;IACxDL,cAAc,CAACI,UAAU,GAAG,CAAC,GAAGL,WAAW,GAAG,CAAC,CAAC;EAClD,CAAC;EAED,oBACER,KAAA,CAAAe,aAAA,CAACC,SAAS,QACPjB,GAAG,CAACY,UAAU,EAAE,CAAC;IAAEM,EAAE;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAK,CAAC,EAAEC,KAAK,kBAC3DrB,KAAA,CAAAe,aAAA,CAACV,SAAS;IACRY,EAAE,EAAEA,EAAG;IACPP,UAAU,EAAEA,UAAW;IACvBF,WAAW,EAAEA,WAAY;IACzBU,QAAQ,EAAEA,QAAS;IACnBC,YAAY,EAAEA,YAAa;IAC3BC,IAAI,EAAEA,IAAK;IACXE,aAAa,EAAEV,UAAW;IAC1BW,GAAG,EAAEF;EAAM,CACZ,CACF,CACQ,CAAC;AAEhB,CAAC;AAED,MAAML,SAAS,GAAGb,MAAM,CAACqB,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAelB,SAAS","ignoreList":[]}