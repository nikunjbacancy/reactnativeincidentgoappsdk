{"version":3,"names":["colors","images","isEqual","React","memo","useCallback","useEffect","useRef","useState","Animated","TouchableWithoutFeedback","styled","ACTION_TIMER","COLORS","red","areEqual","prevProps","nextProps","PanicButton","text","onPress","onFill","isPanicMode","textStyle","style","withIcon","pressAction","Value","buttonWidth","setButtonWidth","buttonHeight","setButtonHeight","filledRef","current","timing","duration","toValue","useNativeDriver","start","handlePressIn","callback","finished","handlePressOut","getButtonWidthLayout","event","nativeEvent","layout","width","height","getProgressStyles","interpolate","inputRange","outputRange","backgroundColor","createElement","disabled","onPressIn","onPressOut","Button","onLayout","BackgroundFill","Icon","source","siren","Text","View","theme","darkRed","Image","light","fonts","defaultFamily","normalSize"],"sources":["index.tsx"],"sourcesContent":["import { colors, images } from '../../assets';\nimport isEqual from 'lodash/isEqual';\nimport React, {\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Animated,\n  StyleProp,\n  TextStyle,\n  TouchableWithoutFeedback,\n  ViewStyle,\n} from 'react-native';\nimport styled from '../../utils/styled';\n\nconst ACTION_TIMER = 2000;\nconst COLORS = [colors.red, colors.red];\n\ninterface Props {\n  text: string;\n  onFill(): void;\n  onPress(): void;\n  isPanicMode: boolean;\n  textStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n  withIcon?: boolean;\n}\n\nconst areEqual = (prevProps: any, nextProps: any) => {\n  return isEqual(prevProps, nextProps);\n};\n\nconst PanicButton: FC<Props> = ({\n  text,\n  onPress,\n  onFill,\n  isPanicMode,\n  textStyle,\n  style,\n  withIcon,\n}) => {\n  const pressAction = new Animated.Value(0);\n  const [buttonWidth, setButtonWidth] = useState(0);\n  const [buttonHeight, setButtonHeight] = useState(0);\n  const filledRef = useRef(false);\n\n  useEffect(() => {\n    if (!isPanicMode && filledRef.current) {\n      filledRef.current = false;\n      Animated.timing(pressAction, {\n        duration: ACTION_TIMER / 10,\n        toValue: 0,\n        useNativeDriver:false\n      }).start();\n    }\n  }, [filledRef.current, pressAction, isPanicMode]);\n\n  const handlePressIn = useCallback(() => {\n    onPress();\n    Animated.timing(pressAction, {\n      duration: ACTION_TIMER,\n      toValue: 1,\n      useNativeDriver:false\n    }).start(callback => {\n      if (callback.finished) {\n        filledRef.current = true;\n        onFill();\n      }\n    });\n  }, [Animated, pressAction, onFill]);\n\n  const handlePressOut = useCallback(() => {\n    if (!filledRef.current) {\n      Animated.timing(pressAction, {\n        duration: ACTION_TIMER / 10,\n        toValue: 0,\n        useNativeDriver:false\n      }).start();\n    }\n  }, [Animated, pressAction]);\n\n  const getButtonWidthLayout = useCallback(event => {\n    setButtonWidth(event.nativeEvent.layout.width);\n    setButtonHeight(event.nativeEvent.layout.height);\n  }, []);\n\n  const getProgressStyles = useCallback(() => {\n    const width = pressAction.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, buttonWidth],\n    });\n    const backgroundColor = pressAction.interpolate({\n      inputRange: [0, 1],\n      outputRange: COLORS,\n    });\n    return {\n      width,\n      height: buttonHeight,\n      backgroundColor,\n    };\n  }, [pressAction, buttonWidth]);\n  return (\n    <TouchableWithoutFeedback\n      disabled={isPanicMode}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n    >\n      <Button onLayout={getButtonWidthLayout} style={style}>\n        <BackgroundFill style={getProgressStyles()} />\n        {withIcon && <Icon source={images.siren()} />}\n        <Text style={textStyle}>{text}</Text>\n      </Button>\n    </TouchableWithoutFeedback>\n\n    \n  );\n};\n\nconst Button = styled.View`\n  background-color: ${({ theme }) => theme.colors.darkRed};\n  width: 47%;\n  height: 40px;\n  border-radius: 6px;\n  justify-content: center;\n  overflow: hidden;\n  \n`;\n\nconst Icon = styled.Image`\n  height: 40%;\n  margin: 5px auto 10px;\n  tint-color: ${({ theme }) => theme.colors.light};\n  align-self: center;\n`;\n\nconst BackgroundFill = styled(Animated.View)`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nconst Text = styled.Text`\n  color: ${({ theme }) => theme.colors.light};\n  font-family: ${({ theme }) => theme.fonts.defaultFamily};\n  font-size: ${({ theme }) => theme.fonts.normalSize};\n  text-align: center;\n`;\n\nexport default memo(PanicButton, areEqual);\n"],"mappings":"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","ignoreList":[]}