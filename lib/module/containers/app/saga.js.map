{"version":3,"names":["AsyncStorage","api","ExpireOffset","KeyTwilioAccessToken","LOGIN_SUCCESS","REGISTER_USER_SUCCESS","noop","sdkConfigs","Notification","call","put","select","spawn","takeLatest","persistor","getInfo","handleError","setupFirebaseMessage","setupNotifications","setUserId","subscribeToTopic","NavigatorService","showIOSForegroundNotification","Screens","UPDATE_NAME_SUCCESS","getConfigsFailure","getConfigsRequest","getConfigsSuccess","getProfileFailure","getProfileSuccess","getTwilioAccessTokenFailure","getTwilioAccessTokenRequest","getTwilioAccessTokenSuccess","GET_CONFIGS_REQUEST","GET_PROFILE_REQUEST","GET_TWILIO_ACCESS_TOKEN_REQUEST","LOG_ERROR","UPDATE_PROFILE_REQUEST","REMOTE_LOGGER_KEY","TOKEN_KEY","USER_PHONE_KEY","makeSelectTwilioInitialized","makeSelectUser","checkExpiresIn","token","expires_in","expires_at","Date","now","saveToken","payload","console","log","setItem","JSON","stringify","saveUserPhone","phone","getConfigs","response","configs","remoteLogger","data","logger","debug","error","warn","triggerOnboardForInactiveUser","active","state","incidentPassiveEscortData","incidentEscortData","nextOnboardingScreen","app","purge","type","getProfile","user","isDeleted","userId","id","topic","sdkStage","setupAndWatchIOSForegroundNotifications","updateProfile","iosForegroundNotification","_iosForegroundNotific","_iosForegroundNotific2","_iosForegroundNotific3","title","message","body","action","link","_iosForegroundNotific4","navigate","Menu","Tips","TipDetail","incident","incidentId","showChat","hide","show","setAccessTokenFromStorage","parse","getItem","setAccessTokenFromApi","twilio","getToken","saveAccessToken","tokenWithExpire","getTwilioAccessToken","twilioInitialized","init","logErrorToDB","source","device","raw","logError","newError","appSaga"],"sources":["saga.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\n/**\n *\n * App saga\n *\n */\n import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as api from '../../api';\nimport { ExpireOffset, KeyTwilioAccessToken } from '../../api/twilio/constants';\nimport { AxiosResponse } from 'axios';\nimport { LOGIN_SUCCESS } from '../../containers/screens/Onboarding/SignInCodeScreen/constants';\nimport { REGISTER_USER_SUCCESS } from '../../containers/screens/Onboarding/PromocodeScreen/constants';\nimport { LoginSuccessAction } from '../../containers/screens/Onboarding/SignInCodeScreen/types';\nimport { AccessToken, AppUser, Config, ErrorLog } from 'incident-code-core';\nimport noop from 'lodash/noop';\nimport { sdkConfigs } from '../../sdkConfigs'\nimport { Notification } from 'react-native-in-app-message';\nimport { call, put, select, spawn, takeLatest } from 'redux-saga/effects';\nimport { persistor } from '../../store';\nimport { getInfo } from '../../utils/device';\nimport { handleError } from '../../utils/error';\nimport {\n  setupFirebaseMessage,\n  setupNotifications,\n  setUserId,\n  subscribeToTopic,\n} from '../../utils/firebase';\nimport { initBackgroundGeolocationService } from '../../utils/location/backgroundGeolocation';\nimport NavigatorService from '../../utils/navigation';\n\nimport { showIOSForegroundNotification } from '../providers/NotificationProvider/actions';\nimport Screens from '../providers/RoutesProvider/screens';\nimport { UPDATE_NAME_SUCCESS } from '../screens/Onboarding/UpdateNameScreen/constants';\nimport { UpdateNameSuccessAction } from '../screens/Onboarding/UpdateNameScreen/types';\nimport {\n  getConfigsFailure,\n  getConfigsRequest,\n  getConfigsSuccess,\n  getProfileFailure,\n  getProfileSuccess,\n  getTwilioAccessTokenFailure,\n  getTwilioAccessTokenRequest,\n  getTwilioAccessTokenSuccess\n} from './actions';\nimport {\n  GET_CONFIGS_REQUEST,\n  GET_PROFILE_REQUEST,\n  GET_TWILIO_ACCESS_TOKEN_REQUEST,\n  LOG_ERROR,\n  UPDATE_PROFILE_REQUEST,\n  REMOTE_LOGGER_KEY,\n  TOKEN_KEY,\n  USER_PHONE_KEY,\n} from './constants';\nimport { makeSelectTwilioInitialized, makeSelectUser } from './selectors';\nimport { LogErrorAction } from './types';\n\nconst checkExpiresIn = (token: AccessToken): AccessToken => {\n  if (!token.expires_in) return token;\n  return {\n    ...token,\n    expires_at: Date.now() + token.expires_in * 1000,\n  };\n};\n\nexport function* saveToken({ payload }: LoginSuccessAction) {\n  console.log(\"Save Token -->\", payload)\n  const token = checkExpiresIn(payload);\n  console.log(\"Token -->\", token)\n  yield call(AsyncStorage.setItem, TOKEN_KEY, JSON.stringify(token));\n}\n\nexport function* saveUserPhone({ payload }: UpdateNameSuccessAction) {\n  if (payload.phone) {\n    yield call(AsyncStorage.setItem, USER_PHONE_KEY, payload.phone);\n  }\n}\n\nexport function* getConfigs() {\n\n  try {\n    const response: AxiosResponse<Config> = yield call(api.configs.getConfigs);\n    // console.log(\"configs response=>\",response)\n    const remoteLogger = response.data.remoteLogger || '';\n    yield call(\n      AsyncStorage.setItem,\n      REMOTE_LOGGER_KEY,\n      JSON.stringify(remoteLogger),\n    );\n    // console.log(\"configs response=>\",response)\n    yield put(getConfigsSuccess(response.data));\n    // console.log(\"user configs ===>\",JSON.stringify(response.data))\n    api.logger.debug('App Config', 'Get Success', response.data);\n  } catch (error) {\n    // console.log(\"configs response error=>\",error)\n    api.logger.warn('App Config', 'Get Failed', error);\n    yield put(getConfigsFailure(handleError(error)));\n  }\n}\n\nexport function* triggerOnboardForInactiveUser() {\n  const active = yield select(state => {\n    const {\n      incidentPassiveEscortData,\n      incidentEscortData,\n      nextOnboardingScreen,\n    } = state.app;\n\n    return (\n      !!incidentEscortData ||\n      !!incidentPassiveEscortData ||\n      nextOnboardingScreen !== 'Home'\n    );\n  });\n  if (!active) {\n    yield call(() => persistor.purge());\n    yield put({ type: 'USER_DELETED' });\n    yield put(getConfigsRequest());\n    yield put(getTwilioAccessTokenRequest());\n    return true;\n  }\n  return false;\n}\n\nexport function* getProfile() {\n  // console.log(\"get profile api call=>\")\n  try {\n    const response: AxiosResponse<AppUser> = yield call(api.user.getProfile);\n    // console.log(\"ðŸš€ ~ file: saga.ts ~ line 119 ~ function*getProfile ~ response\", JSON.stringify(response));\n    const { isDeleted } = response.data as any;\n\n    if (isDeleted) {\n      if (!(yield* triggerOnboardForInactiveUser())) {\n        yield put(getProfileSuccess(response.data));\n\n        const userId = response.data.id as string;\n        const topic = `${sdkConfigs.configs.sdkStage}_user_${userId}`;\n        AsyncStorage.setItem('userId', userId);\n        AsyncStorage.setItem('userData', JSON.stringify(response.data));\n        yield call(setUserId, userId);\n        yield call(subscribeToTopic, topic);\n        // console.log(\"user configs ===>\",JSON.stringify(response.data))\n        api.logger.debug('User Profile', 'Get Success', response.data);\n        yield call(setupFirebaseMessage);\n        yield spawn(setupAndWatchIOSForegroundNotifications);\n        console.log(\"getAllgeofene request : DELETED BLOCK\")\n        // yield put(getAllGeofenceRequest(userId));\n        // yield call(initBackgroundGeolocationService);\n      }\n    } else {\n      yield put(getProfileSuccess(response.data));\n\n      const userId = response.data.id as string;\n      const topic = `${sdkConfigs.configs.sdkStage}_user_${userId}`;\n      // console.log(\"topic=======***>\",topic)\n      AsyncStorage.setItem('userId', userId);\n      AsyncStorage.setItem('userData', JSON.stringify(response.data));\n      yield call(setUserId, userId);\n      yield call(subscribeToTopic, topic);\n      // console.log(\"user configs ===>\",JSON.stringify(response.data))\n      api.logger.debug('User Profile', 'Get Success', response.data);\n      yield call(setupFirebaseMessage);\n      yield spawn(setupAndWatchIOSForegroundNotifications);\n      // console.log(\"getAllgeofene request : SUCCESS BLOCK\")\n      // yield put(getAllGeofenceRequest(userId));\n\n      // yield call(initBackgroundGeolocationService);\n    }\n  } catch (error) {\n    console.log(\"get profile api call error=>\", error)\n    api.logger.warn('User Profile', 'Get Failed', error);\n    yield put(getProfileFailure(handleError(error)));\n  }\n}\n\nexport function* updateProfile() {\n  // console.log(\"get profile api call=>\")\n  try {\n    const response: AxiosResponse<AppUser> = yield call(api.user.getProfile);\n    // console.log(\"ðŸš€ ~ file: saga.ts ~ line 119 ~ function*getProfile ~ response\", JSON.stringify(response));\n    const { isDeleted } = response.data as any;\n\n    if (isDeleted) {\n      if (!(yield* triggerOnboardForInactiveUser())) {\n        yield put(getProfileSuccess(response.data));\n\n      }\n    } else {\n      yield put(getProfileSuccess(response.data));\n\n    }\n  } catch (error) {\n    console.log(\"get profile api call error=>\", error)\n    api.logger.warn('User Profile', 'Get Failed', error);\n    yield put(getProfileFailure(handleError(error)));\n  }\n}\n\n\nfunction* setupAndWatchIOSForegroundNotifications() {\n  while (true) {\n    const iosForegroundNotification = yield call(setupNotifications);\n    if (iosForegroundNotification) {\n      yield put(\n        showIOSForegroundNotification({\n          title: iosForegroundNotification.message?.title,\n          message: iosForegroundNotification.message?.body,\n          action: iosForegroundNotification.data?.link\n            ? noop\n            : () => {\n              NavigatorService.navigate(Screens.Menu.Tips.TipDetail, {\n                incident: {\n                  id: iosForegroundNotification.data?.incidentId,\n                },\n                showChat: true,\n              });\n              Notification.hide();\n            },\n        }),\n      );\n      Notification.show();\n    }\n  }\n}\n\nfunction* setAccessTokenFromStorage() {\n  return yield call(\n    JSON.parse,\n    yield call(AsyncStorage.getItem, KeyTwilioAccessToken),\n  );\n}\n\nfunction* setAccessTokenFromApi() {\n  const token = yield call(api.twilio.getToken);\n  return saveAccessToken(token);\n}\n\nfunction* saveAccessToken(token: AccessToken) {\n  const tokenWithExpire = !token.expires_at\n    ? {\n      ...token,\n      expires_at: Date.now() + (token.expires_in || 1) * 1000 - ExpireOffset,\n    }\n    : token;\n\n  yield call(\n    AsyncStorage.setItem,\n    KeyTwilioAccessToken,\n    JSON.stringify(tokenWithExpire),\n  );\n\n  return tokenWithExpire;\n}\n\nexport function* getTwilioAccessToken() {\n  const twilioInitialized: boolean = yield select(\n    makeSelectTwilioInitialized(),\n  );\n  try {\n    const token: AccessToken = yield twilioInitialized\n      ? yield call(setAccessTokenFromStorage)\n      : yield call(setAccessTokenFromApi);\n\n    yield call(api.twilio.init, token);\n    yield put(getTwilioAccessTokenSuccess(token));\n  } catch (error) {\n    yield put(getTwilioAccessTokenFailure(handleError(error)));\n  }\n}\n\nexport function* logErrorToDB({ payload }: LogErrorAction) {\n  const user: AppUser = yield select(makeSelectUser());\n  try {\n    const error: ErrorLog = {\n      source: payload.source,\n      message: payload.message,\n      device: getInfo(),\n      user,\n      raw: JSON.stringify(payload.raw),\n    };\n    yield call(api.logger.logError, error);\n  } catch (error) {\n    const newError: ErrorLog = {\n      source: 'logErrorToDB',\n      message: error.message,\n      device: getInfo(),\n      user,\n      raw: JSON.stringify(error),\n    };\n    yield call(api.logger.logError, newError);\n  }\n}\n\nexport default function* appSaga() {\n  yield takeLatest(LOGIN_SUCCESS, saveToken);\n  yield takeLatest(REGISTER_USER_SUCCESS, saveToken);\n  yield takeLatest(UPDATE_NAME_SUCCESS, saveUserPhone);\n  yield takeLatest(GET_PROFILE_REQUEST, getProfile);\n  yield takeLatest(UPDATE_PROFILE_REQUEST, updateProfile);\n  yield takeLatest(GET_CONFIGS_REQUEST, getConfigs);\n  yield takeLatest(GET_TWILIO_ACCESS_TOKEN_REQUEST, getTwilioAccessToken);\n  yield takeLatest(LOG_ERROR, logErrorToDB);\n}\n"],"mappings":"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","ignoreList":[]}