{"version":3,"names":["IncidentAction","createSelector","initialState","selectAppStateDomain","state","app","makeSelectIsLoading","isLoadingConfigs","isLoadingProfile","isLoadingTwilioToken","makeSelectUser","user","makeSelectAppUserContacts","contacts","makeSelectNextOnboardingScreen","nextOnboardingScreen","makeSelectConfigs","configs","makeSelectNewTipIncident","newTip","incident","makeSelectNewTipIncidentVideos","videos","makeSelectNewTipIncidentLocation","location","undefined","makeSelectNewTipIncidentExpired","makeSelectNewTipOrganization","organization","makeSelectNewTipOrganizationName","name","makeSelectNewTipCategoryName","category","display","makeSelectNewTipIncidentActionRequest","_newTip$organization","_newTip$organization2","incidentActionRequest","id","action","AlertOrganization","args","organizationArea","area","comment","makeSelectTipCameraMode","tipCamera","mode","makeSelectTipVideoIndex","videoIndex","makeSelectGiftedChatUser","_id","firstName","lastName","avatar","portraitUrl","makeSelectTwilioInitialized","twilio","initialized","makeSelectIncidentEscortData","incidentEscortData","makeSelectTwilioAccessToken","accessToken","makeSelectPassiveEscortData","incidentPassiveEscortData","makeSelectAppLocation","makeSelectAppState","subState"],"sources":["selectors.ts"],"sourcesContent":["/**\n *\n * App selectors\n *\n */\n\nimport { Id, IncidentAction, IncidentActionRequest } from 'incident-code-core';\nimport { User } from 'react-native-gifted-chat';\nimport { createSelector } from 'reselect';\nimport { RootState } from 'store/types';\n\nimport { initialState } from './reducer';\n\n// //(\"-initialState->\",initialState)\n/**\n * Direct selector to the App state domain\n */\nconst selectAppStateDomain = (state: RootState) => state.app || initialState;\n\n/**\n * Other specific selectors\n */\n\nconst makeSelectIsLoading = () =>\n  createSelector(\n    selectAppStateDomain,\n    ({ isLoadingConfigs, isLoadingProfile, isLoadingTwilioToken }) =>\n      isLoadingConfigs || isLoadingProfile || isLoadingTwilioToken,\n  );\n\nconst makeSelectUser = () =>\n  createSelector(selectAppStateDomain, ({ user }) => user);\n\nconst makeSelectAppUserContacts = () =>\n  createSelector(makeSelectUser(), ({ contacts }) => contacts || []);\n\nconst makeSelectNextOnboardingScreen = () =>\n  createSelector(\n    selectAppStateDomain,\n    ({ nextOnboardingScreen }) => nextOnboardingScreen,\n  );\n\nconst makeSelectConfigs = () =>\n  createSelector(selectAppStateDomain, ({ configs }) => configs);\n\nconst makeSelectNewTipIncident = () =>\n  createSelector(selectAppStateDomain, ({ newTip: { incident } }) => incident);\n\nconst makeSelectNewTipIncidentVideos = () =>\n  createSelector(makeSelectNewTipIncident(), incident =>\n    incident && incident.videos ? incident.videos : [],\n  );\n\nconst makeSelectNewTipIncidentLocation = () =>\n  createSelector(makeSelectNewTipIncident(), incident =>\n    incident && incident.location ? incident.location : undefined,\n  );\n\nconst makeSelectNewTipIncidentExpired = () =>\n  createSelector(makeSelectNewTipIncident(), incident => !incident);\n\nconst makeSelectNewTipOrganization = () =>\n  createSelector(selectAppStateDomain, ({ newTip }) =>\n    newTip.organization ? newTip.organization : {},\n  );\n\nconst makeSelectNewTipOrganizationName = () =>\n  createSelector(selectAppStateDomain, ({ newTip }) =>\n    newTip.organization && newTip.organization.name\n      ? newTip.organization.name\n      : '',\n  );\n\nconst makeSelectNewTipCategoryName = () =>\n  createSelector(selectAppStateDomain, ({ newTip }) =>\n    newTip.category && newTip.category.display ? newTip.category.display : '',\n  );\n\nconst makeSelectNewTipIncidentActionRequest = () =>\n  createSelector(selectAppStateDomain, ({ newTip }) => {\n    if (!newTip.incident || !newTip.category) return;\n    const incidentActionRequest: IncidentActionRequest = {\n      id: newTip.incident.id,\n      action: IncidentAction.AlertOrganization,\n      args: {\n        organization: newTip.organization?.id,\n        organizationArea: newTip.organization?.area as Id,\n        category: newTip.category.name,\n        comment: newTip.comment,\n      },\n    };\n    return incidentActionRequest;\n  });\n\nconst makeSelectTipCameraMode = () =>\n  createSelector(selectAppStateDomain, ({ tipCamera: { mode } }) => mode);\n\nconst makeSelectTipVideoIndex = () =>\n  createSelector(\n    selectAppStateDomain,\n    ({ tipCamera: { videoIndex } }) => videoIndex,\n  );\n\nconst makeSelectGiftedChatUser = () =>\n  createSelector(\n    makeSelectUser(),\n    user =>\n      ({\n        _id: `U:${user.id}`,\n        name: `${user.firstName} ${user.lastName}`,\n        avatar: user.portraitUrl,\n      } as User),\n  );\n\nconst makeSelectTwilioInitialized = () =>\n  createSelector(\n    selectAppStateDomain,\n    ({ twilio: { initialized } }) => initialized,\n  );\n\nconst makeSelectIncidentEscortData = () =>\n  createSelector(\n    selectAppStateDomain,\n    ({ incidentEscortData }) => incidentEscortData,\n  );\n\nconst makeSelectTwilioAccessToken = () =>\n  createSelector(\n    selectAppStateDomain,\n    ({ twilio: { accessToken } }) => accessToken,\n  );\n\nconst makeSelectPassiveEscortData = () =>\n  createSelector(\n    selectAppStateDomain,\n    ({ incidentPassiveEscortData }) => incidentPassiveEscortData,\n  );\n\nconst makeSelectAppLocation = () =>\n  createSelector(selectAppStateDomain, ({ location }) => location);\n/**\n * Default selector used by App\n */\n\nconst makeSelectAppState = () =>\n  createSelector(selectAppStateDomain, subState => subState);\n\nexport default makeSelectAppState;\nexport {\n  makeSelectIsLoading,\n  selectAppStateDomain,\n  makeSelectUser,\n  makeSelectAppUserContacts,\n  makeSelectNextOnboardingScreen,\n  makeSelectConfigs,\n  makeSelectNewTipIncident,\n  makeSelectNewTipIncidentVideos,\n  makeSelectNewTipIncidentLocation,\n  makeSelectNewTipIncidentExpired,\n  makeSelectNewTipOrganization,\n  makeSelectNewTipOrganizationName,\n  makeSelectNewTipCategoryName,\n  makeSelectNewTipIncidentActionRequest,\n  makeSelectTipCameraMode,\n  makeSelectTipVideoIndex,\n  makeSelectGiftedChatUser,\n  makeSelectTwilioInitialized,\n  makeSelectIncidentEscortData,\n  makeSelectTwilioAccessToken,\n  makeSelectPassiveEscortData,\n  makeSelectAppLocation,\n};\n"],"mappings":"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","ignoreList":[]}