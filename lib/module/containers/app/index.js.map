{"version":3,"names":["__DEV__","AsyncStorage","InAppNotification","LoadingIndicator","SiteKeyModal","LanguageProvider","Routes","ThemeProvider","ReduxProvider","React","useEffect","useCallback","useState","Alert","AppState","Platform","NativeModules","MenuProvider","useAction","useSelector","NavigatorService","isTokenValid","ANDROID_HEADLESS_NOTIFICATION_KEY","makeSelectIOSForegroundNotification","Screens","getConfigsRequest","getProfileRequest","getTwilioAccessTokenRequest","updateProfileRequest","getTimeAgo","getLocalTime","makeSelectIsLoading","makeSelectUser","UpdateLocationData","triggerDuressRequest","notificationReadUnreadStatusRequest","AppEvent","event","Toast","RootSiblingParent","isEmpty","PushNotification","PanicActionModal","updateUserLocation","updateUserLoctionData","fetchLocation","checkCurrentLatLongWithGeofence","updateEventOnGeofenceCross","geoCredStatusRequest","getAllGeofenceRequest","BackgroundGeolocation","NPMModule","isLoading","iOSForegroundNotification","showPanicActionPopup","setPanicActionPopup","userData","geoCredStatusUpdate","getAllGeofenceRequestAction","getConfigsRequestAction","getProfileRequestAction","updateProfileRequestAction","getTwilioAccessTokenAction","setLocation","startDuressRequest","isLogoutNotReceived","logoutObject","title","body","isBackgroundState","updateReadUnreadStatus","geoCredPNObject","setGeoCredPNObject","siteKeyNotificationId","setSiteKeyNotificationId","OS","NetworkModule","startNetworkListener","popInitialNotification","notification","_notification$data","_notification$data2","_notification$data3","_notification$data4","_notification$data5","_notification$data6","data","type","emit","OnLocationQuestion","OnSiteKeyNotificataionReceived","_notification$data7","OnChatMessageTap","console","log","id","then","isValid","on","OnReceiveAlert","onAlertReceived","OnOrganizationGroupUpdated","onOrganizationGroupUpdated","OnLogout","onSiteKeyNotificationReceived","getItem","incidentId","removeItem","navigate","Menu","Tips","TipDetail","incident","showChat","addEventListener","handleAppStateChange","onLocationChange","onLocation","location","coords","latitude","longitude","geofenceListener","onGeofence","geofence","userId","JSON","parse","error","action","remove","locationId","undefined","gmtDateStr","sentAt","payload","isRead","userID","notiId","notificationId","readFrom","newState","alert","text","onPress","setItem","Onboarding","Index","cancelable","triggerDuress","onYesTap","response","lat","toString","lng","onNoTap","createElement","ref","setTopLevelNavigator","onNavigationStateChange","logScreen","setRef","message","isVisible","actionPositiveText","actionNagetiveText","onAction","onHide","showIcon","showActionIcon","hideModal","isFromNotification","notification_id","IncidentGoPackage"],"sources":["index.tsx"],"sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * Generated with the TypeScript template\n * https://github.com/react-native-community/react-native-template-typescript\n *\n * @format\n */\nif (__DEV__) import('../../core/reactotron');\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { InAppNotification, LoadingIndicator, SiteKeyModal } from '../../components';\nimport {\n  LanguageProvider,\n  Routes,\n  ThemeProvider,\n  ReduxProvider\n} from '../../containers/providers';\nimport React, { FC, useEffect, useCallback, useState } from 'react';\nimport { Alert, AppState, Platform, NativeModules } from 'react-native';\nimport { MenuProvider } from 'react-native-popup-menu';\nimport { useAction, useSelector } from '../../utils/hooks';\nimport NavigatorService from '../../utils/navigation';\nimport { isTokenValid } from '../../utils/token';\nimport { ANDROID_HEADLESS_NOTIFICATION_KEY } from '../providers/NotificationProvider/constants';\nimport { makeSelectIOSForegroundNotification } from '../providers/NotificationProvider/selectors';\nimport Screens from '../providers/RoutesProvider/screens';\nimport {\n  getConfigsRequest,\n  getProfileRequest,\n  getTwilioAccessTokenRequest,\n  updateProfileRequest\n} from './actions';\nimport { getTimeAgo, getLocalTime } from '../../utils/common'\nimport { makeSelectIsLoading, makeSelectUser } from './selectors';\nimport { UpdateLocationData } from '../../containers/app/actions';\nimport { triggerDuressRequest } from '../../containers/screens/Onboarding/WarningScreen/actions';\nimport { notificationReadUnreadStatusRequest } from '../../containers/screens/Menu/NotificationListScreen/actions';\nimport { AppEvent, event } from '../../api';\nimport Toast from 'react-native-toast-message';\nimport { RootSiblingParent } from 'react-native-root-siblings';\nimport { isEmpty } from 'lodash';\nimport PushNotification from 'react-native-push-notification';\nimport PanicActionModal from '../../components/PanicActionModal';\nimport { updateUserLocation, updateUserLoctionData, fetchLocation, checkCurrentLatLongWithGeofence, updateEventOnGeofenceCross } from '../../utils/location/backgroundGeolocation';\nimport { geoCredStatusRequest, getAllGeofenceRequest } from '../../utils/location/actions';\nimport BackgroundGeolocation from 'react-native-background-geolocation';\n\n// LogBox.ignoreLogs([\"EventEmitter.removeListener\"]);\n\nconst NPMModule: FC = () => {\n\n  const isLoading = useSelector(makeSelectIsLoading());\n  const iOSForegroundNotification = useSelector(\n    makeSelectIOSForegroundNotification(),\n  );\n  const [showPanicActionPopup, setPanicActionPopup] = useState(false)\n  const userData = useSelector(makeSelectUser());\n  const geoCredStatusUpdate = useAction(geoCredStatusRequest)\n  const getAllGeofenceRequestAction = useAction(getAllGeofenceRequest)\n  const getConfigsRequestAction = useAction(getConfigsRequest);\n  const getProfileRequestAction = useAction(getProfileRequest);\n  const updateProfileRequestAction = useAction(updateProfileRequest);\n  const getTwilioAccessTokenAction = useAction(getTwilioAccessTokenRequest);\n  const setLocation = useAction(UpdateLocationData);\n  const startDuressRequest = useAction(triggerDuressRequest);\n  var isLogoutNotReceived = false\n  type LogoutObject = {\n    title: string; \n    body: string;\n  };\n  \n  var logoutObject: LogoutObject = { title: \"\", body: \"\" };\n  var isBackgroundState = false\n  const updateReadUnreadStatus = useAction(notificationReadUnreadStatusRequest);\n  const [geoCredPNObject, setGeoCredPNObject] = useState({});\n  const [siteKeyNotificationId, setSiteKeyNotificationId] = useState(\"\");\n  // const readUnReadresult = useSelector((state) => { return state.notificationListState.notiReadData });\n\n  useEffect(() => {\n\n    Platform.OS == 'android' && NativeModules.NetworkModule.startNetworkListener();\n\n    PushNotification.popInitialNotification(notification => {\n      if (notification?.data.event === \"LocationQuestion\" && notification?.data.type === \"Location\") {\n        event.emit(AppEvent.OnLocationQuestion, notification.data);\n      }\n      // Handle site key notifications\n      if ((notification?.data?.type === \"SiteKey\" && notification?.data?.event === \"SiteKey\") ||\n        (notification?.data?.data?.type === \"SiteKey\" && notification?.data?.data?.event === \"SiteKey\")\n      ) {\n        event.emit(AppEvent.OnSiteKeyNotificataionReceived, notification.data);\n      }\n      // Handle chat message notifications\n      if (notification?.data?.event === \"Message\" && notification?.data?.type === \"chat\") {\n        event.emit(AppEvent.OnChatMessageTap, notification.data?.data);\n      }\n    })\n\n    getConfigsRequestAction();\n\n    console.log(\"Line ===== 103\")\n    console.log(\"userData?.id ===>\",userData?.id)\n    userData?.id && getAllGeofenceRequestAction(userData?.id);\n\n    isTokenValid().then(isValid => {\n      //(\"isTokenValid-->\", isValid)\n      if (isValid) {\n        getProfileRequestAction();\n        getTwilioAccessTokenAction();\n      }\n    });\n\n    // //(\"logout event register\")\n    // event.on(AppEvent.OnBeaconUpdated, onBeaconClosed);\n    event.on(AppEvent.OnReceiveAlert, onAlertReceived);\n    event.on(AppEvent.OnOrganizationGroupUpdated, onOrganizationGroupUpdated);\n    event.on(AppEvent.OnLogout, OnLogout);\n    event.on(AppEvent.OnLocationQuestion, OnLocationQuestion);\n    event.on(AppEvent.OnSiteKeyNotificataionReceived, onSiteKeyNotificationReceived);\n\n\n    AsyncStorage.getItem(ANDROID_HEADLESS_NOTIFICATION_KEY).then(\n      async incidentId => {\n        if (incidentId) {\n          await AsyncStorage.removeItem(ANDROID_HEADLESS_NOTIFICATION_KEY);\n          NavigatorService.navigate(Screens.Menu.Tips.TipDetail, {\n            incident: {\n              id: incidentId,\n            },\n            showChat: true,\n          });\n        }\n      },\n    );\n\n    AppState.addEventListener('change', handleAppStateChange);\n    updateUserLocation()\n\n  }, []);\n\n  useEffect(() => {\n    // Add geofence listener\n\n    const onLocationChange = BackgroundGeolocation.onLocation(async (location) => {\n      if (Platform.OS == 'ios') {\n        checkCurrentLatLongWithGeofence(location.coords.latitude, location.coords.longitude)\n      }\n    })\n\n    const geofenceListener = BackgroundGeolocation.onGeofence(async (geofence) => {\n      console.log(\"app foregorund : ==>\", geofence)\n      try {\n        if (Platform.OS == 'ios') { return }\n        // Retrieve user data safely\n        let userId = \"\";\n        try {\n          const userData = await AsyncStorage.getItem('userData');\n          userId = userData ? JSON.parse(userData).id : \"\";\n        } catch (error) {\n          console.log(\"Error retrieving user data from AsyncStorage:\", error);\n          // writeLog(\"Error retrieving user data from AsyncStorage:\"+error)\n        }\n        // Handle geofence entry and exit events\n        if (geofence.action === \"ENTER\") {\n          console.log(\"app foregorund geofence.action: ==>\", geofence.action)\n          try {\n            updateEventOnGeofenceCross(geofence, true, userId);\n            updateUserLocation();\n          } catch (error) {\n            console.log(\"Error handling geofence ENTER event:\", error);\n            // writeLog(\"Error handling geofence ENTER event:\"+error)\n          }\n        } else if (geofence.action === \"EXIT\") {\n          console.log(\"app foregorund geofence.action: ==>\", geofence.action)\n          try {\n            updateEventOnGeofenceCross(geofence, false, userId);\n            updateUserLocation();\n          } catch (error) {\n            console.log(\"Error handling geofence EXIT event:\", error);\n            // writeLog(\"Error handling geofence EXIT event:\"+error)\n          }\n\n        }\n      } catch (error) {\n        console.log(\"Error in geofenceListener:\", error);\n        // writeLog(\"Error in geofenceListener:\"+error)\n      }\n    });\n\n    // Cleanup function to remove the listener\n    return () => {\n      geofenceListener.remove();\n      onLocationChange.remove()\n    };\n  }, []);\n\n  // on sitekey notification received\n  const onSiteKeyNotificationReceived = async (event: any) => {\n    setSiteKeyNotificationId(event.locationId == undefined ? event.data.locationId : event.locationId)\n  }\n\n  const OnLocationQuestion = async (event: any) => {\n    const gmtDateStr = getLocalTime(event.sentAt);\n    if (getTimeAgo(gmtDateStr) <= 30) {\n      if (userData) {\n        setGeoCredPNObject(event)\n        let payload = {\n          isRead: true,\n          userID: userData != null ? userData.id : \"0\",\n          notiId: event != null ? event.notificationId : \"\",\n          readFrom: \"app\"\n        }\n        updateReadUnreadStatus(payload)\n      }\n    }\n    else {\n\n    }\n\n  }\n\n  const handleAppStateChange = (newState: string) => {\n    isBackgroundState = newState == 'active' ? false : true\n    if (newState == 'active') {\n      if (isLogoutNotReceived) {\n        isLogoutNotReceived = false\n        Alert.alert(\n          logoutObject.title,\n          logoutObject.body,\n          [\n            {\n              text: 'OK',\n              onPress: () => {\n                AsyncStorage.setItem(\"isLogout\", \"true\");\n                NavigatorService.navigate(Screens.Onboarding.Index);\n              }\n            },\n          ],\n          { cancelable: false },\n        );\n      }\n    }\n  }\n\n  const onAlertReceived = () => {\n    triggerDuress();\n  }\n\n  const onOrganizationGroupUpdated = async () => {\n    // //(\"event called onOrganizationGroupUpdated-->\")\n    updateProfileRequestAction()\n  }\n\n  // geocred feature ::: call on Click YES Button \n  const onYesTap = async () => {\n    setPanicActionPopup(false)\n    const location = await fetchLocation();\n    // console.log(\"onYesTap location--==>\", JSON.stringify(location))\n    if (location) {\n      const locationId = geoCredPNObject != null ? +geoCredPNObject.locationId : 0;\n      let payload = {\n        userId: userData.id,\n        locationId: locationId,\n        incidentId: geoCredPNObject != null ? geoCredPNObject?.incidentId : \"\",\n        response: \"yes\",\n        lat: location.coords.latitude.toString(),\n        lng: location.coords.longitude.toString()\n      }\n      // console.log(\"onNoTap onYesTap--==>\", payload)\n      geoCredStatusUpdate(payload)\n      updateUserLoctionData(location)\n    }\n  }\n\n  // geocred feature ::: call on Click NO Button \n  const onNoTap = async () => {\n    setPanicActionPopup(false)\n    const location = await fetchLocation();\n    if (location) {\n      const locationId = geoCredPNObject != null ? +geoCredPNObject.locationId : 0;\n      let payload = {\n        userId: userData.id,\n        locationId: locationId,\n        incidentId: geoCredPNObject != null ? geoCredPNObject?.incidentId : \"\",\n        response: \"no\",\n        lat: location.coords.latitude.toString(),\n        lng: location.coords.longitude.toString()\n      }\n      // console.log(\"onNoTap payload--==>\", payload)\n      geoCredStatusUpdate(payload)\n      updateUserLoctionData(location)\n    }\n  }\n\n  const OnLogout = async (event: any) => {\n    // //(\"on logout received data -->\",JSON.stringify(event))\n    if (isBackgroundState) {\n      isLogoutNotReceived = true\n      logoutObject = event\n    }\n\n    Alert.alert(\n      event.title,\n      event.body,\n      [\n        {\n          text: 'OK',\n          onPress: () => {\n            AsyncStorage.setItem(\"isLogout\", \"true\");\n            // NavigatorService.navigate(Screens.Onboarding.Index);\n          }\n        },\n      ],\n      { cancelable: false },\n    );\n\n  }\n\n  const triggerDuress = useCallback(() => {\n    startDuressRequest(setLocation);\n  }, [startDuressRequest, setLocation]);\n\n  return (\n    <RootSiblingParent>\n      <LanguageProvider>\n        <ThemeProvider>\n          <MenuProvider>\n            {isLoading ? (\n              <LoadingIndicator />\n            ) : <Routes\n              ref={NavigatorService.setTopLevelNavigator}\n              onNavigationStateChange={NavigatorService.logScreen}\n            />\n            }\n            <Toast ref={(ref) => Toast.setRef(ref)} />\n            <InAppNotification\n              title={iOSForegroundNotification?.title}\n              message={iOSForegroundNotification?.message}\n              onPress={iOSForegroundNotification?.action}\n            />\n            <PanicActionModal\n              isVisible={showPanicActionPopup}\n              title={!isEmpty(geoCredPNObject) ? JSON.parse(geoCredPNObject.data).title : \"\"}\n              message={!isEmpty(geoCredPNObject) ? JSON.parse(geoCredPNObject.data).message : \"\"}\n              actionPositiveText={\"Yes\"}\n              actionNagetiveText={\"No\"}\n              onAction={() => onYesTap()}\n              onHide={() => onNoTap()}\n              showIcon={true}\n              showActionIcon={true}\n            />\n            <SiteKeyModal\n              isVisible={siteKeyNotificationId == \"\" ? false : true}\n              userData={userData}\n              hideModal={() => setSiteKeyNotificationId(\"\")}\n              isFromNotification={true}\n              notification_id={siteKeyNotificationId}\n            />\n          </MenuProvider>\n        </ThemeProvider>\n      </LanguageProvider>\n    </RootSiblingParent>\n  );\n};\n\nconst IncidentGoPackage = () => {\n  return (\n    <ReduxProvider>\n      <NPMModule />\n    </ReduxProvider>\n  )\n}\n\nexport { IncidentGoPackage };\n"],"mappings":"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","ignoreList":[]}