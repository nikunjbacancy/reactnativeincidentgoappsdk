{"version":3,"names":["images","Form","IconButton","PaddingView","SafeAreaContainer","SubmitButtonField","React","useCallback","useState","useIntl","Image","ScrollView","StatusBar","Toast","useAction","registerUserRequest","messages","BackButtonCol","Background","CodeTextField","InputRow","LogoRow","SubmitButtonRow","TitleRow","TitleText","ValidationRow","ValidationText","REGISTER_USER_REQUEST","PromoCodeScreen","navigation","getParam","goBack","formatMessage","promoCodeData","initialValues","partnerCode","token","goBackToSignIn","registerUserAction","input","setInput","handleNext","params","createElement","Fragment","barStyle","backgroundColor","contentContainerStyle","flex","keyboardShouldPersistTaps","keyboardDismissMode","source","icBackDark","onPress","logoWithText","title","start","resolve","reject","onReject","action","show","payload","message","position","positions","BOTTOM","name","keyboardAppearance","placeholder","codePlaceholder","value","onChangeText","invalidCode","size","text","next"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../assets';\nimport {\n  Form,\n  IconButton,\n  PaddingView,\n  SafeAreaContainer,\n  SubmitButtonField,\n} from '../../../../components';\n\nimport React, { FC, useCallback, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Image, ScrollView, StatusBar } from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction } from '../../../../utils/hooks';\nimport { registerUserRequest } from \"./actions\";\nimport messages from './messages';\nimport {\n  BackButtonCol,\n  Background,\n  CodeTextField,\n  InputRow,\n  LogoRow,\n  SubmitButtonRow,\n  TitleRow,\n  TitleText,\n  ValidationRow,\n  ValidationText\n} from './styles';\n\n\nimport { REGISTER_USER_REQUEST } from './constants';\n\n\ninterface Params {\n  phone: string;\n  promoCodeData: any;\n}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst PromoCodeScreen: FC<Props> = ({\n  navigation: { getParam, goBack },\n}) => {\n  const { formatMessage } = useIntl();\n\n  // const schema = PromoCodeSchema(formatMessage);\n\n  let promoCodeData = getParam('promoCodeData')\n\n  const initialValues = { partnerCode: '', token: promoCodeData.token };\n\n  const goBackToSignIn = useCallback(() => goBack(), []);\n\n  const registerUserAction = useAction(registerUserRequest);\n\n  const [input, setInput] = useState('');\n  const handleNext = useCallback(() => {\n    if (input === \"\") { return }\n    let params = { partnerCode: input, token: promoCodeData.token };\n    //(\"params-->\", params)\n    registerUserAction(params);\n  }, [input, setInput]);\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <Background />\n      <SafeAreaContainer>\n        <ScrollView\n          contentContainerStyle={{ flex: 1 }}\n          keyboardShouldPersistTaps=\"always\"\n          keyboardDismissMode=\"on-drag\"\n        >\n          <LogoRow>\n            <BackButtonCol>\n              <IconButton\n                source={images.icBackDark()}\n                onPress={goBackToSignIn}\n              />\n            </BackButtonCol>\n            <Image source={images.logoWithText()} />\n          </LogoRow>\n          <TitleRow>\n            <TitleText>\n              {formatMessage(messages.title)}\n            </TitleText>\n          </TitleRow>\n          <Form\n            start={REGISTER_USER_REQUEST}\n            resolve={\"\"}\n            reject={\"\"}\n            initialValues={initialValues}\n            // validationSchema={schema}\n            // onResolve={goToUpdateNameScreen}\n            onReject={action =>\n              Toast.show(action.payload.message, {\n                position: Toast.positions.BOTTOM,\n              })\n            }\n          >\n            <>\n              <InputRow>\n                <CodeTextField\n                  name=\"code\"\n                  keyboardAppearance=\"light\"\n                  placeholder={formatMessage(messages.codePlaceholder)}\n                  value={input}\n                  onChangeText={setInput}\n                />\n              </InputRow>\n              <ValidationRow>\n                <ValidationText>\n                  {formatMessage(messages.invalidCode)}\n                </ValidationText>\n              </ValidationRow>\n              {/* <CodeError>\n                <Text>{formatMessage(messages.invalidCode)}</Text>\n              </CodeError> */}\n              <PaddingView size={1} />\n            </>\n            <SubmitButtonRow>\n              <SubmitButtonField text={formatMessage(messages.next)}\n                onPress={handleNext}\n              />\n            </SubmitButtonRow>\n          </Form>\n        </ScrollView>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default PromoCodeScreen;\n"],"mappings":"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","ignoreList":[]}