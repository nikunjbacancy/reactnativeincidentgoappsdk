{"version":3,"names":["api","getProfile","getTwilioAccessToken","call","put","takeLatest","handleError","NavigatorService","Screens","registerUserSuccess","registerUserFailure","REGISTER_USER_REQUEST","Toast","registerUser","payload","response","auth","userRegister","data","navigate","Onboarding","UpdateName","error","axiosError","show","message","position","positions","CENTER","registerUserScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/* eslint-disable no-console */\n/**\n *\n * SignInCodeScreen saga\n *\n */\n\nimport * as api from '../../../../api';\nimport { getProfile, getTwilioAccessToken } from '../../../../containers/app/saga';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../utils/error';\nimport NavigatorService from '../../../../utils/navigation';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\n\nimport {\n  registerUserSuccess,\n  registerUserFailure,\n} from './actions';\nimport { REGISTER_USER_REQUEST } from './constants';\nimport { RegisterUserRequestAction } from './types';\nimport { AxiosError } from 'axios';\nimport Toast from 'react-native-root-toast';\n\nexport function* registerUser({ payload }: RegisterUserRequestAction):any {\n  //(\"register request payload is -->\",payload)\n  try {\n    const response = yield call(api.auth.userRegister, payload);\n    //(\"register user response\", JSON.stringify(response));\n    // yield put(registerUserSuccess(response.data));\n    // yield call(getProfile);\n    // yield call(getTwilioAccessToken);\n    yield put(registerUserSuccess(response.data));\n    yield call(getProfile);\n    yield call(getTwilioAccessToken);\n    yield call(NavigatorService.navigate, Screens.Onboarding.UpdateName)\n  } catch (error: any) {\n    const axiosError: AxiosError = yield call(handleError, error);\n    //(\"axiosError.message=>\",axiosError.message)\n    yield call(Toast.show, axiosError.message, {\n      position: Toast.positions.CENTER,\n    });\n    yield put(registerUserFailure(handleError(error)));\n  }\n}\n\nexport default function* registerUserScreenSaga() {\n  yield takeLatest(REGISTER_USER_REQUEST, registerUser);\n  \n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,GAAG,MAAM,iBAAiB;AACtC,SAASC,UAAU,EAAEC,oBAAoB,QAAQ,iCAAiC;AAClF,SAASC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,OAAO,MAAM,yDAAyD;AAE7E,SACEC,mBAAmB,EACnBC,mBAAmB,QACd,WAAW;AAClB,SAASC,qBAAqB,QAAQ,aAAa;AAGnD,OAAOC,KAAK,MAAM,yBAAyB;AAE3C,OAAO,UAAUC,YAAYA,CAAC;EAAEC;AAAmC,CAAC,EAAM;EACxE;EACA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACH,GAAG,CAACgB,IAAI,CAACC,YAAY,EAAEH,OAAO,CAAC;IAC3D;IACA;IACA;IACA;IACA,MAAMV,GAAG,CAACK,mBAAmB,CAACM,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC7C,MAAMf,IAAI,CAACF,UAAU,CAAC;IACtB,MAAME,IAAI,CAACD,oBAAoB,CAAC;IAChC,MAAMC,IAAI,CAACI,gBAAgB,CAACY,QAAQ,EAAEX,OAAO,CAACY,UAAU,CAACC,UAAU,CAAC;EACtE,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnB,MAAMC,UAAsB,GAAG,MAAMpB,IAAI,CAACG,WAAW,EAAEgB,KAAK,CAAC;IAC7D;IACA,MAAMnB,IAAI,CAACS,KAAK,CAACY,IAAI,EAAED,UAAU,CAACE,OAAO,EAAE;MACzCC,QAAQ,EAAEd,KAAK,CAACe,SAAS,CAACC;IAC5B,CAAC,CAAC;IACF,MAAMxB,GAAG,CAACM,mBAAmB,CAACJ,WAAW,CAACgB,KAAK,CAAC,CAAC,CAAC;EACpD;AACF;AAEA,eAAe,UAAUO,sBAAsBA,CAAA,EAAG;EAChD,MAAMxB,UAAU,CAACM,qBAAqB,EAAEE,YAAY,CAAC;AAEvD","ignoreList":[]}