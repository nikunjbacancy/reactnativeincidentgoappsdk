{"version":3,"names":["images","Form","IconButton","PaddingView","SafeAreaContainer","SubmitButtonField","React","useCallback","useIntl","Image","ScrollView","StatusBar","Toast","useAction","resendCode","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","messages","BackButtonCol","Background","CodeError","CodeTextField","InputRow","LogoRow","ResendText","SubmitButtonRow","TitleRow","TitleText","SignInCodeSchema","SignInCodeScreen","navigation","getParam","goBack","formatMessage","schema","initialValues","code","phone","isSDK","resendCodeValues","goBackToSignIn","resendCodeAction","handleResendCode","createElement","Fragment","barStyle","backgroundColor","contentContainerStyle","flex","keyboardShouldPersistTaps","keyboardDismissMode","source","icBackDark","onPress","logoWithText","title","key","start","resolve","reject","validationSchema","onReject","action","show","payload","message","position","positions","BOTTOM","name","keyboardType","keyboardAppearance","placeholder","codePlaceholder","size","text","next"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../assets';\nimport {\n  Form,\n  IconButton,\n  PaddingView,\n  SafeAreaContainer,\n  SubmitButtonField,\n} from '../../../../components';\nimport React, { FC, useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Image, ScrollView, StatusBar } from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction } from '../../../../utils/hooks';\nimport { resendCode } from './actions';\nimport { LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS } from './constants';\nimport messages from './messages';\nimport {\n  BackButtonCol,\n  Background,\n  CodeError,\n  CodeTextField,\n  InputRow,\n  LogoRow,\n  ResendText,\n  SubmitButtonRow,\n  TitleRow,\n  TitleText,\n} from './styles';\nimport SignInCodeSchema from './validator';\n\ninterface Params {\n  phone: string;\n}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst SignInCodeScreen: FC<Props> = ({\n  navigation: { getParam, goBack },\n}) => {\n  const { formatMessage } = useIntl();\n  const schema = SignInCodeSchema(formatMessage);\n  const initialValues = { code: '', phone: getParam('phone'), isSDK: true };\n  const resendCodeValues = { phone: getParam('phone'), isSDK: true };\n  const goBackToSignIn = useCallback(() => goBack(), []);\n\n  // const goToUpdateNameScreen = useCallback(\n  //   () => navigate(Screens.Onboarding.PromoCode),\n  //   [navigate],\n  // );\n\n  const resendCodeAction = useAction(resendCode);\n  // const loginRequestAction = useAction(LOGIN_REQUEST);\n  const handleResendCode = useCallback(() => {\n    resendCodeAction(resendCodeValues);\n  }, []);\n\n  // const handleValidateClick = useCallback(() => {\n  //   initialValues.code = ''\n  //   loginRequestAction(initialValues);\n  // }, []);\n\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <Background />\n      <SafeAreaContainer>\n        <ScrollView\n          contentContainerStyle={{ flex: 1 }}\n          keyboardShouldPersistTaps=\"always\"\n          keyboardDismissMode=\"on-drag\"\n        >\n          <LogoRow>\n            <BackButtonCol>\n              <IconButton\n                source={images.icBackDark()}\n                onPress={goBackToSignIn}\n              />\n            </BackButtonCol>\n            <Image source={images.logoWithText()} />\n          </LogoRow>\n          <TitleRow>\n            <TitleText>\n              {formatMessage(messages.title, {\n                resendCode: (\n                  <ResendText key=\"1\" onPress={handleResendCode}>\n                    {formatMessage(messages.resendCode)}\n                  </ResendText>\n                ),\n              })}\n            </TitleText>\n          </TitleRow>\n          <Form\n            start={LOGIN_REQUEST}\n            resolve={LOGIN_SUCCESS}\n            reject={LOGIN_FAILURE}\n            initialValues={initialValues}\n            validationSchema={schema}\n            // onResolve={goToUpdateNameScreen}\n            onReject={action =>\n              Toast.show(action.payload.message, {\n                position: Toast.positions.BOTTOM,\n              })\n            }\n          >\n            <>\n              <InputRow>\n                <CodeTextField\n                  name=\"code\"\n                  keyboardType=\"number-pad\"\n                  keyboardAppearance=\"light\"\n                  placeholder={formatMessage(messages.codePlaceholder)}\n                />\n              </InputRow>\n              <CodeError name=\"code\" />\n              <PaddingView size={1} />\n              \n            </>\n            <SubmitButtonRow>\n              <SubmitButtonField text={formatMessage(messages.next)} />\n            </SubmitButtonRow>\n          </Form>\n        </ScrollView>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default SignInCodeScreen;\n"],"mappings":"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","ignoreList":[]}