{"version":3,"names":["api","getProfile","getTwilioAccessToken","Toast","call","put","takeLatest","handleError","NavigatorService","Screens","loginFailure","loginSuccess","resendCodeFailure","resendCodeSuccess","LOGIN_REQUEST","RESEND_CODE_REQUEST","login","payload","response","auth","data","hasOwnProperty","navigate","Onboarding","PromoCode","promoCodeData","UpdateName","error","axiosError","show","message","position","positions","CENTER","resendCode","sendCode","signInCodeScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/* eslint-disable no-console */\n/**\n *\n * SignInCodeScreen saga\n *\n */\n\nimport * as api from '../../../../api';\nimport { getProfile, getTwilioAccessToken } from '../../../../containers/app/saga';\nimport Toast from 'react-native-root-toast';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../utils/error';\nimport NavigatorService from '../../../../utils/navigation';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\n\nimport {\n  loginFailure,\n  loginSuccess,\n  resendCodeFailure,\n  resendCodeSuccess,\n} from './actions';\nimport { LOGIN_REQUEST, RESEND_CODE_REQUEST } from './constants';\nimport { LoginRequestAction, ResendCodeRequestAction } from './types';\nimport { AxiosError } from 'axios';\n\nexport function* login({ payload }: LoginRequestAction):any {\n  //(\"login payload is -->\",payload)\n  try {\n    const response = yield call(api.auth.login, payload);\n    // //(\"-check param exist->\",response.data.hasOwnProperty('newUser') ? true : false)\n    //(\"login ~ response\", JSON.stringify(response.data));\n    if (response.data.hasOwnProperty('newUser')) {\n      if (response.data.hasOwnProperty('newUser') == true) {\n        yield call(NavigatorService.navigate, Screens.Onboarding.PromoCode, {\n          promoCodeData: response.data,\n        })\n      } else {\n        yield put(loginSuccess(response.data));\n        yield call(getProfile);\n        yield call(getTwilioAccessToken);\n        yield call(NavigatorService.navigate, Screens.Onboarding.UpdateName)\n      }\n    } else {\n        yield put(loginSuccess(response.data));\n        yield call(getProfile);\n        yield call(getTwilioAccessToken);\n        yield call(NavigatorService.navigate, Screens.Onboarding.UpdateName)\n    }\n\n  } catch (error: any) {\n    const axiosError: AxiosError = yield call(handleError, error);\n    //(\"axiosError.message=>\",axiosError.message)\n    yield call(Toast.show, axiosError.message, {\n      position: Toast.positions.CENTER,\n    });\n    yield put(loginFailure(handleError(error)));\n  }\n}\n\nexport function* resendCode({ payload }: ResendCodeRequestAction) {\n  // //(\"resendCode payload is -->\", payload)\n  try {\n    yield call(api.auth.sendCode, payload);\n    yield put(resendCodeSuccess());\n    //(\"Code Resent 1-->\")\n    yield call(Toast.show, 'Code Resent', { position: Toast.positions.CENTER });\n    //(\"Code Resent 2-->\")\n  } catch (error: any) {\n    const axiosError: AxiosError = yield call(handleError, error);\n    //(\"axiosError.message=>\",axiosError.message)\n    yield call(Toast.show, axiosError.message, {\n      position: Toast.positions.CENTER,\n    });\n    yield put(resendCodeFailure(axiosError));\n  }\n}\n\nexport default function* signInCodeScreenSaga() {\n  yield takeLatest(LOGIN_REQUEST, login);\n  yield takeLatest(RESEND_CODE_REQUEST, resendCode);\n}\n"],"mappings":"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","ignoreList":[]}