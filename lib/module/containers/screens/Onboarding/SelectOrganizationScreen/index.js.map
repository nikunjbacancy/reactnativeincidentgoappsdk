{"version":3,"names":["colors","images","GradientButton","LoadingIndicator","SafeAreaContainer","debounce","React","useEffect","useIntl","Image","StatusBar","useAction","useSelector","NavigatorService","getOrganizationsRequest","toggleSelectOrganization","updateOrganizationsRequest","messages","makeSelectEnableNextButton","makeSelectError","makeSelectErrorMessage","makeSelectOrganizations","makeSelectSelectedOrganizations","Background","ContinueButtonRow","ErrorMessage","ErrorRow","HeaderRow","InfoRow","InfoText","ItemCheckImage","ItemRow","ItemText","List","Logo","LogoRow","RequiredText","SearchInput","SearchRow","SelectButton","TitleRow","TitleText","SelectOrganizationScreen","navigation","getParam","fromMenu","formatMessage","organizations","selectedOrganizations","nextButtonEnabled","error","errorMessage","getOrganizationsAction","updateOrganizationsAction","toggleSelectOrganizationAction","createElement","onSearchChanged","keyword","handleNextButtonClicked","data","renderHeader","Fragment","title","info","required","key","source","logoWithText","keyboardAppearance","placeholder","searchPlaceholder","onChangeText","renderItem","itemInfo","organization","item","onPress","id","isSelected","icCheck","name","barStyle","backgroundColor","keyExtractor","_organization$id","toString","ListHeaderComponent","extraData","disabled","onCancel","back","text","select","tintColor","white","next"],"sources":["index.tsx"],"sourcesContent":["import { colors, images } from '../../../../assets';\nimport {\n  GradientButton,\n  LoadingIndicator,\n  SafeAreaContainer,\n} from '../../../../components';\nimport { debounce } from 'incident-code-core';\nimport React, { FC, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Image, ListRenderItemInfo, StatusBar } from 'react-native';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { OrganizationSelection } from 'types';\nimport { useAction, useSelector } from '../../../../utils/hooks';\nimport NavigatorService from '../../../../utils/navigation';\n\nimport {\n  getOrganizationsRequest,\n  toggleSelectOrganization,\n  updateOrganizationsRequest,\n} from './actions';\nimport messages from './messages';\nimport {\n  makeSelectEnableNextButton,\n  makeSelectError,\n  makeSelectErrorMessage,\n  makeSelectOrganizations,\n  makeSelectSelectedOrganizations,\n} from './selectors';\nimport {\n  Background,\n  ContinueButtonRow,\n  ErrorMessage,\n  ErrorRow,\n  HeaderRow,\n  InfoRow,\n  InfoText,\n  ItemCheckImage,\n  ItemRow,\n  ItemText,\n  List,\n  Logo,\n  LogoRow,\n  RequiredText,\n  SearchInput,\n  SearchRow,\n  SelectButton,\n  TitleRow,\n  TitleText,\n} from './styles';\n\ninterface Params {\n  fromMenu: boolean;\n}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> {}\n\nconst SelectOrganizationScreen: FC<Props> = ({ navigation: { getParam } }) => {\n  const fromMenu = getParam('fromMenu');\n\n  const { formatMessage } = useIntl();\n\n  const organizations = useSelector(makeSelectOrganizations());\n  const selectedOrganizations = useSelector(makeSelectSelectedOrganizations());\n  const nextButtonEnabled = useSelector(makeSelectEnableNextButton());\n  const error = useSelector(makeSelectError());\n  const errorMessage = useSelector(makeSelectErrorMessage());\n\n  const getOrganizationsAction = useAction(getOrganizationsRequest);\n  const updateOrganizationsAction = useAction(updateOrganizationsRequest);\n  const toggleSelectOrganizationAction = useAction(toggleSelectOrganization);\n\n  useEffect(() => {\n    getOrganizationsAction();\n  }, []);\n\n  if (!organizations) return <LoadingIndicator />;\n\n  const onSearchChanged = debounce((keyword?: string) => {\n    getOrganizationsAction(keyword);\n  }, 300);\n\n  const handleNextButtonClicked = () => {\n    updateOrganizationsAction({ data: selectedOrganizations, fromMenu });\n  };\n\n  const renderHeader = () => (\n    <>\n      {fromMenu ? (\n        <HeaderRow>\n          <Logo />\n          <TitleRow>\n            <TitleText>{formatMessage(messages.title)}</TitleText>\n          </TitleRow>\n          <InfoRow>\n            <InfoText>\n              {formatMessage(messages.info, {\n                required: (\n                  <RequiredText key=\"1\">\n                    {formatMessage(messages.required)}\n                  </RequiredText>\n                ),\n              })}\n            </InfoText>\n          </InfoRow>\n        </HeaderRow>\n      ) : (\n        <>\n          <LogoRow>\n            <Image source={images.logoWithText()} />\n          </LogoRow>\n          <InfoRow>\n            <InfoText>\n              {formatMessage(messages.info, {\n                required: (\n                  <RequiredText key=\"1\">\n                    {formatMessage(messages.required)}\n                  </RequiredText>\n                ),\n              })}\n            </InfoText>\n          </InfoRow>\n        </>\n      )}\n      <SearchRow>\n        <SearchInput\n          keyboardAppearance=\"light\"\n          placeholder={formatMessage(messages.searchPlaceholder)}\n          onChangeText={onSearchChanged}\n        />\n      </SearchRow>\n      {error && (\n        <ErrorRow>\n          <ErrorMessage>{errorMessage}</ErrorMessage>\n        </ErrorRow>\n      )}\n    </>\n  );\n\n  const renderItem = (itemInfo: ListRenderItemInfo<OrganizationSelection>) => {\n    const organization = itemInfo.item;\n\n    return (\n      <ItemRow onPress={() => toggleSelectOrganizationAction(organization.id)}>\n        <>\n          {organization.isSelected && (\n            <ItemCheckImage source={images.icCheck()} />\n          )}\n          <ItemText>{itemInfo.item.name}</ItemText>\n        </>\n      </ItemRow>\n    );\n  };\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      {!fromMenu && <Background />}\n      <SafeAreaContainer>\n        <List\n          keyExtractor={(organization : any) => organization.id?.toString() || ''}\n          ListHeaderComponent={renderHeader()}\n          data={organizations}\n          extraData={organizations}\n          renderItem={renderItem}\n        />\n\n        {fromMenu ? (\n          <ContinueButtonRow>\n            <SelectButton\n              disabled={!nextButtonEnabled}\n              onCancel={NavigatorService.back}\n              text={formatMessage(messages.select)}\n              onPress={handleNextButtonClicked}\n              tintColor={colors.white}\n            />\n          </ContinueButtonRow>\n        ) : (\n          <ContinueButtonRow>\n            <GradientButton\n              disabled={!nextButtonEnabled}\n              text={formatMessage(messages.next)}\n              onPress={handleNextButtonClicked}\n            />\n          </ContinueButtonRow>\n        )}\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default SelectOrganizationScreen;\n"],"mappings":"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","ignoreList":[]}