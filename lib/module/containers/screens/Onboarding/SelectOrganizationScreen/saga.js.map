{"version":3,"names":["api","makeSelectUser","Screens","getUserOrganizationsRequest","includes","map","call","put","select","takeLatest","handleError","NavigatorService","getOrganizationsFailure","getOrganizationsSuccess","updateOrganizationsFailure","updateOrganizationsSuccess","GET_ORGANIZATIONS_REQUEST","UPDATE_ORGANIZATIONS_REQUEST","getOrganizations","payload","response","organizations","user","data","organization","isSelected","id","error","updateOrganizations","organizationIds","fromMenu","back","navigate","Onboarding","Permission","selectOrganizationScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen saga\n *\n */\n\nimport * as api from '../../../../api';\nimport { AxiosResponse } from 'axios';\nimport { makeSelectUser } from '../../../../containers/app/selectors';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\nimport { getUserOrganizationsRequest } from '../../../../containers/screens/Menu/OrganizationScreen/actions';\nimport { AppUser, Id, Organization, QueryResult } from 'incident-code-core';\nimport includes from 'lodash/includes';\nimport map from 'lodash/map';\nimport { call, put, select, takeLatest } from 'redux-saga/effects';\nimport { OrganizationSelection } from 'types';\nimport { handleError } from '../../../../utils/error';\nimport NavigatorService from '../../../../utils/navigation';\n\nimport {\n  getOrganizationsFailure,\n  getOrganizationsSuccess,\n  updateOrganizationsFailure,\n  updateOrganizationsSuccess,\n} from './actions';\nimport {\n  GET_ORGANIZATIONS_REQUEST,\n  UPDATE_ORGANIZATIONS_REQUEST,\n} from './constants';\nimport {\n  GetOrganizationsRequestAction,\n  UpdateOrganizationsRequestAction,\n} from './types';\n\nexport function* getOrganizations({ payload }: GetOrganizationsRequestAction) {\n  try {\n    const response: AxiosResponse<QueryResult<Organization>> = yield call(\n      api.organizations.getOrganizations,\n      payload,\n    );\n    const user: AppUser = yield select(makeSelectUser());\n    const organizations: OrganizationSelection[] = map(\n      response.data.data,\n      organization => ({\n        ...organization,\n        isSelected: includes(user.organizations, organization.id),\n      }),\n    );\n    yield put(getOrganizationsSuccess(organizations));\n  } catch (error: any) {\n    yield put(getOrganizationsFailure(handleError(error)));\n  }\n}\n\nexport function* updateOrganizations({\n  payload,\n}: UpdateOrganizationsRequestAction):any {\n  try {\n    const organizationIds = map(payload.data, 'id') as Id[];\n    yield call(api.user.updateOrganizations, organizationIds);\n    yield put(\n      updateOrganizationsSuccess({\n        data: organizationIds,\n        fromMenu: payload.fromMenu,\n      }),\n    );\n    if (payload.fromMenu) {\n      yield put(getUserOrganizationsRequest());\n      return yield call(NavigatorService.back);\n    }\n    yield call(NavigatorService.navigate, Screens.Onboarding.Permission);\n  } catch (error: any) {\n    yield put(updateOrganizationsFailure(handleError(error)));\n  }\n}\n\nexport default function* selectOrganizationScreenSaga() {\n  yield takeLatest(GET_ORGANIZATIONS_REQUEST, getOrganizations);\n  yield takeLatest(UPDATE_ORGANIZATIONS_REQUEST, updateOrganizations);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,GAAG,MAAM,iBAAiB;AAEtC,SAASC,cAAc,QAAQ,sCAAsC;AACrE,OAAOC,OAAO,MAAM,yDAAyD;AAC7E,SAASC,2BAA2B,QAAQ,gEAAgE;AAE5G,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,oBAAoB;AAElE,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAOC,gBAAgB,MAAM,8BAA8B;AAE3D,SACEC,uBAAuB,EACvBC,uBAAuB,EACvBC,0BAA0B,EAC1BC,0BAA0B,QACrB,WAAW;AAClB,SACEC,yBAAyB,EACzBC,4BAA4B,QACvB,aAAa;AAMpB,OAAO,UAAUC,gBAAgBA,CAAC;EAAEC;AAAuC,CAAC,EAAE;EAC5E,IAAI;IACF,MAAMC,QAAkD,GAAG,MAAMd,IAAI,CACnEN,GAAG,CAACqB,aAAa,CAACH,gBAAgB,EAClCC,OACF,CAAC;IACD,MAAMG,IAAa,GAAG,MAAMd,MAAM,CAACP,cAAc,CAAC,CAAC,CAAC;IACpD,MAAMoB,aAAsC,GAAGhB,GAAG,CAChDe,QAAQ,CAACG,IAAI,CAACA,IAAI,EAClBC,YAAY,KAAK;MACf,GAAGA,YAAY;MACfC,UAAU,EAAErB,QAAQ,CAACkB,IAAI,CAACD,aAAa,EAAEG,YAAY,CAACE,EAAE;IAC1D,CAAC,CACH,CAAC;IACD,MAAMnB,GAAG,CAACM,uBAAuB,CAACQ,aAAa,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOM,KAAU,EAAE;IACnB,MAAMpB,GAAG,CAACK,uBAAuB,CAACF,WAAW,CAACiB,KAAK,CAAC,CAAC,CAAC;EACxD;AACF;AAEA,OAAO,UAAUC,mBAAmBA,CAAC;EACnCT;AACgC,CAAC,EAAM;EACvC,IAAI;IACF,MAAMU,eAAe,GAAGxB,GAAG,CAACc,OAAO,CAACI,IAAI,EAAE,IAAI,CAAS;IACvD,MAAMjB,IAAI,CAACN,GAAG,CAACsB,IAAI,CAACM,mBAAmB,EAAEC,eAAe,CAAC;IACzD,MAAMtB,GAAG,CACPQ,0BAA0B,CAAC;MACzBQ,IAAI,EAAEM,eAAe;MACrBC,QAAQ,EAAEX,OAAO,CAACW;IACpB,CAAC,CACH,CAAC;IACD,IAAIX,OAAO,CAACW,QAAQ,EAAE;MACpB,MAAMvB,GAAG,CAACJ,2BAA2B,CAAC,CAAC,CAAC;MACxC,OAAO,MAAMG,IAAI,CAACK,gBAAgB,CAACoB,IAAI,CAAC;IAC1C;IACA,MAAMzB,IAAI,CAACK,gBAAgB,CAACqB,QAAQ,EAAE9B,OAAO,CAAC+B,UAAU,CAACC,UAAU,CAAC;EACtE,CAAC,CAAC,OAAOP,KAAU,EAAE;IACnB,MAAMpB,GAAG,CAACO,0BAA0B,CAACJ,WAAW,CAACiB,KAAK,CAAC,CAAC,CAAC;EAC3D;AACF;AAEA,eAAe,UAAUQ,4BAA4BA,CAAA,EAAG;EACtD,MAAM1B,UAAU,CAACO,yBAAyB,EAAEE,gBAAgB,CAAC;EAC7D,MAAMT,UAAU,CAACQ,4BAA4B,EAAEW,mBAAmB,CAAC;AACrE","ignoreList":[]}