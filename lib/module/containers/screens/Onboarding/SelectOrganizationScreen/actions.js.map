{"version":3,"names":["GET_ORGANIZATIONS_FAILURE","GET_ORGANIZATIONS_REQUEST","GET_ORGANIZATIONS_SUCCESS","TOGGLE_SELECT_ORGANIZATION","UPDATE_ORGANIZATIONS_FAILURE","UPDATE_ORGANIZATIONS_REQUEST","UPDATE_ORGANIZATIONS_SUCCESS","getOrganizationsRequest","keyword","type","payload","getOrganizationsSuccess","organizations","getOrganizationsFailure","error","toggleSelectOrganization","id","updateOrganizationsRequest","updateOrganizationsSuccess","updateOrganizationsFailure"],"sources":["actions.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen actions\n *\n */\n\nimport { Id } from 'incident-code-core';\nimport { OrganizationSelection } from 'types';\n\nimport {\n  GET_ORGANIZATIONS_FAILURE,\n  GET_ORGANIZATIONS_REQUEST,\n  GET_ORGANIZATIONS_SUCCESS,\n  TOGGLE_SELECT_ORGANIZATION,\n  UPDATE_ORGANIZATIONS_FAILURE,\n  UPDATE_ORGANIZATIONS_REQUEST,\n  UPDATE_ORGANIZATIONS_SUCCESS,\n} from './constants';\nimport {\n  SelectOrganizationActionTypes,\n  UpdateOrganizationsPayload,\n  UpdateOrganizationsSuccessPayload,\n} from './types';\n\nexport const getOrganizationsRequest = (\n  keyword?: string,\n): SelectOrganizationActionTypes => ({\n  type: GET_ORGANIZATIONS_REQUEST,\n  payload: keyword,\n});\n\nexport const getOrganizationsSuccess = (\n  organizations: OrganizationSelection[],\n): SelectOrganizationActionTypes => ({\n  type: GET_ORGANIZATIONS_SUCCESS,\n  payload: organizations,\n});\n\nexport const getOrganizationsFailure = (\n  error: Error,\n): SelectOrganizationActionTypes => ({\n  type: GET_ORGANIZATIONS_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const toggleSelectOrganization = (\n  id: Id,\n): SelectOrganizationActionTypes => ({\n  type: TOGGLE_SELECT_ORGANIZATION,\n  payload: id,\n});\n\nexport const updateOrganizationsRequest = (\n  payload: UpdateOrganizationsPayload,\n): SelectOrganizationActionTypes => ({\n  type: UPDATE_ORGANIZATIONS_REQUEST,\n  payload,\n});\n\nexport const updateOrganizationsSuccess = (\n  payload: UpdateOrganizationsSuccessPayload,\n): SelectOrganizationActionTypes => ({\n  type: UPDATE_ORGANIZATIONS_SUCCESS,\n  payload,\n});\n\nexport const updateOrganizationsFailure = (\n  error: Error,\n): SelectOrganizationActionTypes => ({\n  type: UPDATE_ORGANIZATIONS_FAILURE,\n  payload: error,\n  error: true,\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAKA,SACEA,yBAAyB,EACzBC,yBAAyB,EACzBC,yBAAyB,EACzBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,4BAA4B,EAC5BC,4BAA4B,QACvB,aAAa;AAOpB,OAAO,MAAMC,uBAAuB,GAClCC,OAAgB,KACmB;EACnCC,IAAI,EAAER,yBAAyB;EAC/BS,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,uBAAuB,GAClCC,aAAsC,KACH;EACnCH,IAAI,EAAEP,yBAAyB;EAC/BQ,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,uBAAuB,GAClCC,KAAY,KACuB;EACnCL,IAAI,EAAET,yBAAyB;EAC/BU,OAAO,EAAEI,KAAK;EACdA,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,OAAO,MAAMC,wBAAwB,GACnCC,EAAM,KAC6B;EACnCP,IAAI,EAAEN,0BAA0B;EAChCO,OAAO,EAAEM;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,0BAA0B,GACrCP,OAAmC,KACA;EACnCD,IAAI,EAAEJ,4BAA4B;EAClCK;AACF,CAAC,CAAC;AAEF,OAAO,MAAMQ,0BAA0B,GACrCR,OAA0C,KACP;EACnCD,IAAI,EAAEH,4BAA4B;EAClCI;AACF,CAAC,CAAC;AAEF,OAAO,MAAMS,0BAA0B,GACrCL,KAAY,KACuB;EACnCL,IAAI,EAAEL,4BAA4B;EAClCM,OAAO,EAAEI,KAAK;EACdA,KAAK,EAAE;AACT,CAAC,CAAC","ignoreList":[]}