{"version":3,"names":["images","LoadingIndicator","UpdateLocationData","makeSelectIncidentEscortData","makeSelectNextOnboardingScreen","makeSelectPassiveEscortData","Screens","React","useCallback","useEffect","useState","useIntl","Image","StatusBar","View","isAndroid","makeCall","useAction","useSelector","checkGPSStatus","NavigatorService","AsyncStorage","makeSetShowPanicInfo","triggerDuressRequest","messages","makeSelectShowPanicInfo","Background","ContinueButton","ContinueButtonRow","DuressButton","DuressInfo","LogoRow","ScrollWrapper","WarningButton","WarningRow","WarningText","LocationText","SafeView","WarningScreen","navigation","replace","navigate","formatMessage","incidentRecordData","incidentPassiveData","showPanicInfo","setLocation","setShowPanicInfo","startDuressRequest","isLogout","setLogout","Home","Escort","Record","Countdown","id","procedure","isSafetyTimer","getItem","then","value","val","nextScreen","goToNextScreen","goTo","Index","Onboarding","PermissionLocation","isActive","ActivateGPS","SignIn","call911","triggerDuress","loggedIn","createElement","Fragment","barStyle","backgroundColor","source","logoWhiteWithText","message","onPress","text","isPanicMode","onFill","duress","locationMessage","button"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../assets';\nimport { LoadingIndicator } from '../../../../components';\nimport { UpdateLocationData } from '../../../../containers/app/actions';\nimport {\n  makeSelectIncidentEscortData,\n  makeSelectNextOnboardingScreen,\n  makeSelectPassiveEscortData\n} from '../../../../containers/app/selectors';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Image, StatusBar, View } from 'react-native';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { isAndroid, makeCall } from '../../../../utils/device';\nimport { useAction, useSelector } from '../../../../utils/hooks';\nimport { checkGPSStatus } from '../../../../utils/location';\nimport NavigatorService from '../../../../utils/navigation';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { makeSetShowPanicInfo, triggerDuressRequest } from './actions';\nimport messages from './messages';\nimport { makeSelectShowPanicInfo } from './selectors';\n\nimport {\n  Background,\n  ContinueButton,\n  ContinueButtonRow,\n  DuressButton,\n  DuressInfo,\n  LogoRow,\n  ScrollWrapper,\n  WarningButton,\n  WarningRow,\n  WarningText,\n  LocationText,\n  SafeView\n} from './styles';\n\n\ninterface Params { }\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst WarningScreen: FC<Props> = ({ navigation: { replace, navigate } }) => {\n  const { formatMessage } = useIntl();\n\n  const incidentRecordData = useSelector(makeSelectIncidentEscortData());\n  const incidentPassiveData = useSelector(makeSelectPassiveEscortData());\n  const showPanicInfo = useSelector(makeSelectShowPanicInfo());\n  const setLocation = useAction(UpdateLocationData);\n  const setShowPanicInfo = useAction(makeSetShowPanicInfo);\n  const startDuressRequest = useAction(triggerDuressRequest);\n  var [isLogout, setLogout] = useState(false);\n\n  // var isLogout = false\n\n  useEffect(() => {\n\n    if (incidentRecordData) {\n      NavigatorService.navigate(Screens.Home.Escort.Record, incidentRecordData);\n    } else if (incidentPassiveData) {\n      NavigatorService.navigate(Screens.Home.Escort.Countdown, {\n        id: incidentPassiveData.id,\n        procedure: incidentPassiveData.procedure,\n        isSafetyTimer: incidentPassiveData.isSafetyTimer,\n      });\n    }\n\n    //check logout param\n    AsyncStorage.getItem(\"isLogout\").then(async (value) => {\n      let val = value == null ? false : true\n      setLogout(val)\n    });\n\n\n  }, []);\n\n  const nextScreen = useSelector(makeSelectNextOnboardingScreen());\n\n  // const goToNextScreen = useCallback(async () => {\n\n  //   const goTo = nextScreen === Screens.Home.Index ? navigate : replace;\n\n  //   // if (isAndroid && nextScreen === Screens.Home.Index) {\n  //   if (isAndroid && (nextScreen === Screens.Onboarding.PermissionLocation || nextScreen === Screens.Home.Index)) {\n\n  //     const isActive = await checkGPSStatus();\n  //     const isEnabled = await checkBluetoothStatus();\n  //     if (isEnabled) {\n  //       AsyncStorage.getItem(BEACON_CONNECTED).then(async (value) => {\n  //         if (JSON.parse(value) != true) {\n  //           const beaconInfo = await setUpBeaconInfo();\n  //           beaconRegistration(beaconInfo);\n  //         }\n  //       });\n  //     }\n  //     //(\"-isActive->\",isActive)\n  //     if (!isActive) return goTo(Screens.Onboarding.ActivateGPS);\n  //     // return goTo(Screens.Home.Index);\n  //     return NavigatorService.navigate(Screens.Home.Index);\n  //   }\n  //   goTo(nextScreen);\n  // }, []);\n\n\n  const goToNextScreen = useCallback(async () => {\n\n    // //(\"next screen is --->\", nextScreen)\n\n    const goTo = nextScreen === Screens.Home.Index ? navigate : replace;\n\n    // if (isAndroid && nextScreen === Screens.Home.Index) {\n    if (isAndroid && (nextScreen === Screens.Onboarding.PermissionLocation || nextScreen === Screens.Home.Index)) {\n\n      const isActive = await checkGPSStatus();\n      // const isEnabled = await checkBluetoothStatus();\n      // if (isEnabled) {\n      //   AsyncStorage.getItem(BEACON_CONNECTED).then(async (value) => {\n      //     if (JSON.parse(value) != true) {\n      //       const beaconInfo = await setUpBeaconInfo();\n      //       beaconRegistration(beaconInfo);\n      //     }\n      //   });\n      // }\n      if (!isActive) return goTo(Screens.Onboarding.ActivateGPS);\n      AsyncStorage.getItem(\"isLogout\").then(async (value) => {\n        if (value != null) {\n          replace(Screens.Onboarding.SignIn);\n        } else {\n          NavigatorService.navigate(Screens.Home.Index)\n        }\n      });\n    }\n    else {\n      //check logout param\n      AsyncStorage.getItem(\"isLogout\").then(async (value) => {\n        //(\"value--->\", value)\n        if (value != null) {\n          replace(Screens.Onboarding.SignIn);\n        } else {\n          goTo(nextScreen);\n        }\n      });\n    }\n    return null;\n  }, []);\n\n  // //here check token is Valid or not, based on validation next screen decide\n  // const checkBeforeMoveToNexScreen = () => {\n\n  //   // if (isValid) {\n  //   //   goToNextScreen()\n  //   // }\n  //   // else {\n  //   //   goToNextScreen()\n  //   // }\n\n  //   goToNextScreen()\n  // }\n\n  const call911 = () => makeCall('911');\n\n  const triggerDuress = useCallback(() => {\n    startDuressRequest(setLocation);\n  }, [startDuressRequest, setLocation]);\n\n  const loggedIn = () => {\n    if (isLogout) {\n      return false\n    }\n    else {\n      return !(nextScreen in Screens.Onboarding) && nextScreen === 'Home';\n    }\n  };\n\n  return incidentRecordData ? (\n    <LoadingIndicator />\n  ) : (\n    <>\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"transparent\" />\n      <Background />\n      <SafeView>\n        <ScrollWrapper>\n          <LogoRow>\n            <Image source={images.logoWhiteWithText()} />\n          </LogoRow>\n          <WarningRow>\n            <WarningText>{formatMessage(messages.message)}</WarningText>\n            <WarningButton\n              onPress={call911}\n              text={formatMessage(messages.call911)}\n            />\n          </WarningRow>\n          {loggedIn() && (\n            <WarningRow>\n              <DuressButton\n                isPanicMode={false}\n                onPress={setShowPanicInfo}\n                onFill={triggerDuress}\n                text={formatMessage(messages.duress)}\n              />\n            </WarningRow>\n          )}\n          <View>\n            <WarningRow>{showPanicInfo && <DuressInfo />}</WarningRow>\n          </View>\n          <LocationText>{formatMessage(messages.locationMessage)}</LocationText>\n          <ContinueButtonRow>\n            <ContinueButton\n              onPress={goToNextScreen}\n              text={formatMessage(messages.button)}\n            />\n          </ContinueButtonRow>\n        </ScrollWrapper>\n      </SafeView>\n    </>\n  );\n};\n\nexport default WarningScreen;\n\n"],"mappings":"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","ignoreList":[]}