{"version":3,"names":["LOCATION_ALWAYS_PERMISSIONS_REQUEST","LOCATION_ALWAYS_PERMISSIONS_SUCCESS","GO_TO_NEXT_SCREEN","locationAlwaysPermissionsRequest","openConfigurationMessage","type","payload","locationAlwaysPermissionsSuccess","goToNextScreen"],"sources":["action.ts"],"sourcesContent":["/**\n *\n * PermissionScreen actions\n *\n */\n\n import {\n    LOCATION_ALWAYS_PERMISSIONS_REQUEST,\n    LOCATION_ALWAYS_PERMISSIONS_SUCCESS,\n    GO_TO_NEXT_SCREEN,\n  } from './constants';\n  import { PermissionActionTypes } from './types';\n  \n  export const locationAlwaysPermissionsRequest = (\n    openConfigurationMessage: string,\n  ): PermissionActionTypes => ({\n    type: LOCATION_ALWAYS_PERMISSIONS_REQUEST,\n    payload: openConfigurationMessage,\n  });\n  \n  export const locationAlwaysPermissionsSuccess = (): PermissionActionTypes => ({\n    type: LOCATION_ALWAYS_PERMISSIONS_SUCCESS,\n  });\n  \n  export const goToNextScreen = (): PermissionActionTypes => ({\n    type: GO_TO_NEXT_SCREEN,\n  });\n  "],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEC,SACGA,mCAAmC,EACnCC,mCAAmC,EACnCC,iBAAiB,QACZ,aAAa;AAGpB,OAAO,MAAMC,gCAAgC,GAC3CC,wBAAgC,KACL;EAC3BC,IAAI,EAAEL,mCAAmC;EACzCM,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,gCAAgC,GAAGA,CAAA,MAA8B;EAC5EF,IAAI,EAAEJ;AACR,CAAC,CAAC;AAEF,OAAO,MAAMO,cAAc,GAAGA,CAAA,MAA8B;EAC1DH,IAAI,EAAEH;AACR,CAAC,CAAC","ignoreList":[]}