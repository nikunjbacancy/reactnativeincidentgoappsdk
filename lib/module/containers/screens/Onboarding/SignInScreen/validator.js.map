{"version":3,"names":["phone","Yup","messages","SignInSchema","formatMessage","object","shape","string","matches","phoneLength","required","phoneRequired","agreeTos","boolean","oneOf","agreeTosRequired"],"sources":["validator.ts"],"sourcesContent":["/**\n *\n * SignInScreen form validations\n *\n */\n\nimport { FormatMessage } from '../../../../types';\nimport { phone } from '../../../../utils/regex';\nimport * as Yup from 'yup';\n\nimport messages from './messages';\n\nconst SignInSchema = (formatMessage: FormatMessage) =>\n  Yup.object().shape({\n    phone: Yup.string()\n      .matches(phone, formatMessage(messages.phoneLength))\n      .required(formatMessage(messages.phoneRequired)),\n    agreeTos: Yup.boolean().oneOf(\n      [true],\n      formatMessage(messages.agreeTosRequired),\n    ),\n  });\n\nexport default SignInSchema;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA,SAASA,KAAK,QAAQ,yBAAyB;AAC/C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAE1B,OAAOC,QAAQ,MAAM,YAAY;AAEjC,MAAMC,YAAY,GAAIC,aAA4B,IAChDH,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACjBN,KAAK,EAAEC,GAAG,CAACM,MAAM,CAAC,CAAC,CAChBC,OAAO,CAACR,KAAK,EAAEI,aAAa,CAACF,QAAQ,CAACO,WAAW,CAAC,CAAC,CACnDC,QAAQ,CAACN,aAAa,CAACF,QAAQ,CAACS,aAAa,CAAC,CAAC;EAClDC,QAAQ,EAAEX,GAAG,CAACY,OAAO,CAAC,CAAC,CAACC,KAAK,CAC3B,CAAC,IAAI,CAAC,EACNV,aAAa,CAACF,QAAQ,CAACa,gBAAgB,CACzC;AACF,CAAC,CAAC;AAEJ,eAAeZ,YAAY","ignoreList":[]}