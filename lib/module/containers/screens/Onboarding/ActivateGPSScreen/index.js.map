{"version":3,"names":["images","SafeAreaContainer","React","useCallback","useState","useIntl","Image","StatusBar","activateGPS","NavigatorService","Screens","messages","ActivateGPSButton","ActivateGPSRow","Background","ContinueButton","ContinueButtonRow","LogoRow","TitleRow","TitleText","ActivateGPSScreen","formatMessage","gpsEnabled","setGpsEnabled","goToNextScreen","navigate","Home","Index","handleActivateGPS","isEnabled","gpsDisabled","createElement","Fragment","barStyle","backgroundColor","source","logoWithText","title","onPress","text","disabled","continue"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../assets';\nimport { SafeAreaContainer } from '../../../../components';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Image, StatusBar } from 'react-native';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { activateGPS } from '../../../../utils/location';\nimport NavigatorService from '../../../../utils/navigation';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\nimport messages from './messages';\nimport {\n  ActivateGPSButton,\n  ActivateGPSRow,\n  Background,\n  ContinueButton,\n  ContinueButtonRow,\n  LogoRow,\n  TitleRow,\n  TitleText,\n} from './styles';\n\ninterface Params { }\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst ActivateGPSScreen: FC<Props> = () => {\n  const { formatMessage } = useIntl();\n  const [gpsEnabled, setGpsEnabled] = useState(false);\n\n  const goToNextScreen = useCallback(async () => {\n    // const isEnabled = await checkBluetoothStatus();\n    // // //(\"checkBluetoothStatus -->\",isEnabled)\n    // // //(\"nextScreen -->\",nextScreen)\n    // if (isEnabled) {\n    //   const beaconInfo = await setUpBeaconInfo();\n    //   beaconRegistration(beaconInfo);\n    // }\n    // navigate(nextScreen);\n    //(\"navigate to home screen\")\n    NavigatorService.navigate(Screens.Home.Index);\n    \n  }, []);\n\n  const handleActivateGPS = useCallback(async () => {\n    const isEnabled = await activateGPS(\n      formatMessage(messages.gpsEnabled),\n      formatMessage(messages.gpsDisabled),\n    );\n    // //(\"isEnabled=>\",isEnabled)\n    setGpsEnabled(isEnabled);\n  }, []);\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <Background />\n      <SafeAreaContainer>\n        <LogoRow>\n          <Image source={images.logoWithText()} />\n        </LogoRow>\n        <TitleRow>\n          <TitleText>{formatMessage(messages.title)}</TitleText>\n        </TitleRow>\n        <ActivateGPSRow>\n          <ActivateGPSButton\n            onPress={handleActivateGPS}\n            text={formatMessage(messages.activateGPS)}\n          />\n        </ActivateGPSRow>\n        <ContinueButtonRow>\n          <ContinueButton\n            disabled={!gpsEnabled}\n            onPress={goToNextScreen}\n            text={formatMessage(messages.continue)}\n          />\n        </ContinueButtonRow>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default ActivateGPSScreen;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,OAAOC,KAAK,IAAQC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,KAAK,EAAEC,SAAS,QAAQ,cAAc;AAG/C,SAASC,WAAW,QAAQ,4BAA4B;AACxD,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,OAAO,MAAM,yDAAyD;AAC7E,OAAOC,QAAQ,MAAM,YAAY;AACjC,SACEC,iBAAiB,EACjBC,cAAc,EACdC,UAAU,EACVC,cAAc,EACdC,iBAAiB,EACjBC,OAAO,EACPC,QAAQ,EACRC,SAAS,QACJ,UAAU;AAKjB,MAAMC,iBAA4B,GAAGA,CAAA,KAAM;EACzC,MAAM;IAAEC;EAAc,CAAC,GAAGhB,OAAO,CAAC,CAAC;EACnC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMoB,cAAc,GAAGrB,WAAW,CAAC,YAAY;IAC7C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAM,gBAAgB,CAACgB,QAAQ,CAACf,OAAO,CAACgB,IAAI,CAACC,KAAK,CAAC;EAE/C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAGzB,WAAW,CAAC,YAAY;IAChD,MAAM0B,SAAS,GAAG,MAAMrB,WAAW,CACjCa,aAAa,CAACV,QAAQ,CAACW,UAAU,CAAC,EAClCD,aAAa,CAACV,QAAQ,CAACmB,WAAW,CACpC,CAAC;IACD;IACAP,aAAa,CAACM,SAAS,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EACN,oBACE3B,KAAA,CAAA6B,aAAA,CAAA7B,KAAA,CAAA8B,QAAA,qBACE9B,KAAA,CAAA6B,aAAA,CAACxB,SAAS;IAAC0B,QAAQ,EAAC,cAAc;IAACC,eAAe,EAAC;EAAO,CAAE,CAAC,eAC7DhC,KAAA,CAAA6B,aAAA,CAACjB,UAAU,MAAE,CAAC,eACdZ,KAAA,CAAA6B,aAAA,CAAC9B,iBAAiB,qBAChBC,KAAA,CAAA6B,aAAA,CAACd,OAAO,qBACNf,KAAA,CAAA6B,aAAA,CAACzB,KAAK;IAAC6B,MAAM,EAAEnC,MAAM,CAACoC,YAAY,CAAC;EAAE,CAAE,CAChC,CAAC,eACVlC,KAAA,CAAA6B,aAAA,CAACb,QAAQ,qBACPhB,KAAA,CAAA6B,aAAA,CAACZ,SAAS,QAAEE,aAAa,CAACV,QAAQ,CAAC0B,KAAK,CAAa,CAC7C,CAAC,eACXnC,KAAA,CAAA6B,aAAA,CAAClB,cAAc,qBACbX,KAAA,CAAA6B,aAAA,CAACnB,iBAAiB;IAChB0B,OAAO,EAAEV,iBAAkB;IAC3BW,IAAI,EAAElB,aAAa,CAACV,QAAQ,CAACH,WAAW;EAAE,CAC3C,CACa,CAAC,eACjBN,KAAA,CAAA6B,aAAA,CAACf,iBAAiB,qBAChBd,KAAA,CAAA6B,aAAA,CAAChB,cAAc;IACbyB,QAAQ,EAAE,CAAClB,UAAW;IACtBgB,OAAO,EAAEd,cAAe;IACxBe,IAAI,EAAElB,aAAa,CAACV,QAAQ,CAAC8B,QAAQ;EAAE,CACxC,CACgB,CACF,CACnB,CAAC;AAEP,CAAC;AAED,eAAerB,iBAAiB","ignoreList":[]}