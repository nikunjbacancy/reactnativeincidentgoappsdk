{"version":3,"names":["colors","IncidentCategoryImage","IncidentType","sharedStrings","ViolationType","React","useIntl","useIncidentCategoryConfig","convertLocationToCoords","getIncidentDate","formatString","MapSnapshot","messages","Container","InfoContainer","MapImage","MapOverlayAddress","MapOverlayContainer","MapOverlayTitle","MapSnapshotContainer","Marker","TextContainer","TextDescription","TextTitle","ViolationContainer","ViolationText","TipItem","badges","incident","formatMessage","category","date","createdAt","renderInfo","isViolated","text","violationInfo","type","violation_types","violationType","WrongContent","createElement","mapOverlay","addressString","address","noAddress","mapUrl","uri","coords","location","latitude","longitude","Fragment","numberOfLines","isClosed","isResolved","source","white","backgroundGradientColors","gradientColor","renderTitle","Escort","escort","PassiveEscort","passiveEscort","display","incidentType","active","border"],"sources":["index.tsx"],"sourcesContent":["import { colors } from '../../../../../../assets';\nimport { IncidentCategoryImage } from '../../../../../../components';\nimport {\n  Id,\n  Incident,\n  IncidentType,\n  sharedStrings,\n  ViolationType,\n} from 'incident-code-core';\nimport React, { FC } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useIncidentCategoryConfig } from '../../../../../../utils/hooks';\nimport { convertLocationToCoords, getIncidentDate } from '../../../../../../utils/location';\nimport { formatString } from '../../../../../../utils/string';\n\nimport MapSnapshot from '../MapSnapshot';\nimport messages from '../messages';\nimport {\n  Container,\n  InfoContainer,\n  MapImage,\n  MapOverlayAddress,\n  MapOverlayContainer,\n  MapOverlayTitle,\n  MapSnapshotContainer,\n  Marker,\n  TextContainer,\n  TextDescription,\n  TextTitle,\n  ViolationContainer,\n  ViolationText,\n} from './styles';\n\ninterface Props {\n  incident: Incident;\n  badges: Id[];\n}\n\nconst TipItem: FC<Props> = ({ badges, incident }) => {\n  const { formatMessage } = useIntl();\n  const category = useIncidentCategoryConfig(incident.category);\n  const date = getIncidentDate(incident.createdAt);\n\n  const renderInfo = () => {\n    if (incident.isViolated) {\n      const text = formatString(formatMessage(messages.violationInfo), {\n        type:\n          sharedStrings.violation_types[\n            incident.violationType || ViolationType.WrongContent\n          ],\n      });\n      return (\n        <ViolationContainer colors={colors.mapOverlay}>\n          <ViolationText>{text}</ViolationText>\n        </ViolationContainer>\n      );\n    }\n    const addressString = incident.address || formatMessage(messages.noAddress);\n    const mapUrl = incident.mapUrl ? { uri: incident.mapUrl } : null;\n    const coords = incident.location\n      ? convertLocationToCoords(incident.location)\n      : { latitude: 0, longitude: 0 };\n    return (\n      <>\n        <MapOverlayContainer colors={colors.mapOverlay}>\n          <MapOverlayTitle numberOfLines={1} isClosed={incident.isResolved}>\n            {formatMessage(messages.address)}\n          </MapOverlayTitle>\n          <MapOverlayAddress numberOfLines={2}>\n            {addressString}\n          </MapOverlayAddress>\n        </MapOverlayContainer>\n        {mapUrl ? (\n          <>\n            <MapImage source={mapUrl} isClosed={incident.isResolved} />\n            <Marker\n              colors={\n                incident.isResolved\n                  ? [colors.white, colors.white]\n                  : category.backgroundGradientColors\n              }\n            />\n          </>\n        ) : (\n          <MapSnapshot\n            coords={coords}\n            gradientColor={category.backgroundGradientColors}\n          />\n        )}\n      </>\n    );\n  };\n\n  const renderTitle = (type: IncidentType) => {\n    switch (type) {\n      case IncidentType.Escort:\n        return formatMessage(messages.escort);\n      case IncidentType.PassiveEscort:\n        return formatMessage(messages.passiveEscort);\n      default:\n        return category.display;\n    }\n  };\n\n  return (\n    <Container>\n      <InfoContainer>\n        <IncidentCategoryImage\n          incidentType={incident.type}\n          active={!incident.isResolved}\n          category={incident.category}\n          badges={badges}\n          border\n        />\n        <TextContainer>\n          <TextTitle numberOfLines={1}>{renderTitle(incident.type)}</TextTitle>\n          <TextDescription numberOfLines={1}>{date}</TextDescription>\n        </TextContainer>\n      </InfoContainer>\n      <MapSnapshotContainer>{renderInfo()}</MapSnapshotContainer>\n    </Container>\n  );\n};\n\nexport default TipItem;\n"],"mappings":"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","ignoreList":[]}