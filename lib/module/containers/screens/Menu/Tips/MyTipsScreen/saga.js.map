{"version":3,"names":["api","call","put","select","spawn","takeLatest","handleError","addPageIndex","getTipsFailure","getTipsSuccess","setHasMoreData","GET_TIPS_REQUEST","makeSelectTips","TipStatus","getTips","payload","getTipsInParallel","tipStatus","paging","tips","query","pagination","index","pageIndex","filter","isResolved","Closed","_response$data$pagina","response","incidents","getIncidents","data","hasMore","error","myTipsScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * MyTipsScreen saga\n *\n */\n\nimport * as api from '../../../../../api';\nimport { AxiosResponse } from 'axios';\nimport { Incident, QueryResult, QuerySpecification } from 'incident-code-core';\nimport { call, put, select, spawn, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../../utils/error';\n\nimport {\n  addPageIndex,\n  getTipsFailure,\n  getTipsSuccess,\n  setHasMoreData,\n} from './actions';\nimport { GET_TIPS_REQUEST } from './constants';\nimport { makeSelectTips } from './selectors';\nimport {\n  GetTipsRequestAction,\n  GetTipsRequestPayload,\n  Tips,\n  TipStatus,\n} from './types';\n\nfunction* getTips({ payload }: GetTipsRequestAction) {\n  yield spawn(getTipsInParallel, payload);\n}\n\nfunction* getTipsInParallel(payload: GetTipsRequestPayload) {\n  const { tipStatus, paging } = payload;\n  const tips: Tips = yield select(makeSelectTips());\n  const query: QuerySpecification = {\n    pagination: paging\n      ? {\n          index: tips[tipStatus].pageIndex,\n        }\n      : { index: 0 },\n    filter: {\n      isResolved: tipStatus === TipStatus.Closed,\n    },\n  };\n  try {\n    const response: AxiosResponse<QueryResult<Incident>> = yield call(\n      api.incidents.getIncidents,\n      query,\n    );\n    yield put(\n      setHasMoreData({\n        data: response.data.pagination?.hasMore || false,\n        tipStatus,\n      }),\n    );\n    if (paging) {\n      yield put(addPageIndex(tipStatus));\n    }\n    yield put(\n      getTipsSuccess({ data: response.data.data || [], tipStatus, paging }),\n    );\n  } catch (error: any) {\n    yield put(getTipsFailure(handleError(error)));\n  }\n}\n\nexport default function* myTipsScreenSaga() {\n  yield takeLatest(GET_TIPS_REQUEST, getTips);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,GAAG,MAAM,oBAAoB;AAGzC,SAASC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,UAAU,QAAQ,oBAAoB;AACzE,SAASC,WAAW,QAAQ,4BAA4B;AAExD,SACEC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,cAAc,QACT,WAAW;AAClB,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,SAASC,cAAc,QAAQ,aAAa;AAC5C,SAIEC,SAAS,QACJ,SAAS;AAEhB,UAAUC,OAAOA,CAAC;EAAEC;AAA8B,CAAC,EAAE;EACnD,MAAMX,KAAK,CAACY,iBAAiB,EAAED,OAAO,CAAC;AACzC;AAEA,UAAUC,iBAAiBA,CAACD,OAA8B,EAAE;EAC1D,MAAM;IAAEE,SAAS;IAAEC;EAAO,CAAC,GAAGH,OAAO;EACrC,MAAMI,IAAU,GAAG,MAAMhB,MAAM,CAACS,cAAc,CAAC,CAAC,CAAC;EACjD,MAAMQ,KAAyB,GAAG;IAChCC,UAAU,EAAEH,MAAM,GACd;MACEI,KAAK,EAAEH,IAAI,CAACF,SAAS,CAAC,CAACM;IACzB,CAAC,GACD;MAAED,KAAK,EAAE;IAAE,CAAC;IAChBE,MAAM,EAAE;MACNC,UAAU,EAAER,SAAS,KAAKJ,SAAS,CAACa;IACtC;EACF,CAAC;EACD,IAAI;IAAA,IAAAC,qBAAA;IACF,MAAMC,QAA8C,GAAG,MAAM3B,IAAI,CAC/DD,GAAG,CAAC6B,SAAS,CAACC,YAAY,EAC1BV,KACF,CAAC;IACD,MAAMlB,GAAG,CACPQ,cAAc,CAAC;MACbqB,IAAI,EAAE,EAAAJ,qBAAA,GAAAC,QAAQ,CAACG,IAAI,CAACV,UAAU,cAAAM,qBAAA,uBAAxBA,qBAAA,CAA0BK,OAAO,KAAI,KAAK;MAChDf;IACF,CAAC,CACH,CAAC;IACD,IAAIC,MAAM,EAAE;MACV,MAAMhB,GAAG,CAACK,YAAY,CAACU,SAAS,CAAC,CAAC;IACpC;IACA,MAAMf,GAAG,CACPO,cAAc,CAAC;MAAEsB,IAAI,EAAEH,QAAQ,CAACG,IAAI,CAACA,IAAI,IAAI,EAAE;MAAEd,SAAS;MAAEC;IAAO,CAAC,CACtE,CAAC;EACH,CAAC,CAAC,OAAOe,KAAU,EAAE;IACnB,MAAM/B,GAAG,CAACM,cAAc,CAACF,WAAW,CAAC2B,KAAK,CAAC,CAAC,CAAC;EAC/C;AACF;AAEA,eAAe,UAAUC,gBAAgBA,CAAA,EAAG;EAC1C,MAAM7B,UAAU,CAACM,gBAAgB,EAAEG,OAAO,CAAC;AAC7C","ignoreList":[]}