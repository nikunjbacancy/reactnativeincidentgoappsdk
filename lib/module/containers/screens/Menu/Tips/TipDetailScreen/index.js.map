{"version":3,"names":["AppEvent","twilio","event","CallModal","ChatModal","LoadingIndicator","SafeAreaContainer","TipCamera","TipStatusIcon","TipCameraMode","makeSelectTipCameraMode","Screens","filter","forEach","React","useCallback","useEffect","useRef","useState","useIntl","Alert","StatusBar","useAction","useIncidentCategoryConfig","useSelector","NavigatorService","addBadge","getBadges","removeBadge","addMessage","getIncidentRequest","getIncidentVideosRequest","hideCallModal","hideChatModal","sendMessageRequest","showCallModal","showChatModal","uploadVideoRequest","tipDetailMessages","makeSelectIncident","makeSelectIncidentVideos","makeSelectIsLoading","makeSelectMessages","makeSelectOrganization","makeSelectShouldShowCallModal","makeSelectShouldShowChatModal","BackButton","BackButtonContainer","CategoryContainer","CategoryContent","CategoryImage","CategoryName","OrganizationContainer","OrganizationName","TipDetailScreen","navigation","getParam","incidentParam","showChat","tipId","formatMessage","badges","setBadges","cameraRef","getIncidentVideosAction","showCallModalAction","hideCallModalAction","showChatModalAction","hideChatModalAction","uploadVideoAction","addMessageAction","sendMessageAction","getIncidentAction","incidentVideos","organization","isLoading","shouldShowCallModal","shouldShowChatModal","tipCameraMode","messages","incident","isVideoPaused","setIsVideoPaused","categoryConfig","category","id","organizationId","then","notificationBadges","n","notificationAdded","on","OnNotificationBadge","messageAdded","message","OnMessageAdded","onIncidentUpdated","incidentId","setTimeout","alert","tipClosed","tipClosedDetail","text","ok","onPress","backToMyTips","resolved","cancelable","OnIncidentUpdated","clean","_incident$id","off","removeChannelEvents","toString","handleRecordFinished","videoUri","handleShowChatModal","video","_cameraRef$current","current","pausePreview","handleHideChatModal","_cameraRef$current2","resumePreview","tipEvent","myTips","Menu","Tips","MyTips","incidentResolved","isResolved","navigate","Closed","Active","handleSendMessage","messagesToSent","createElement","Fragment","barStyle","backgroundColor","back","source","uri","imageUrl","name","active","display","ref","isRecordEnabled","camera","onPhonePress","onChatPress","onRecordFinished","onShow","onHide","isVisible","hideModal","isReadMode","onMessageSent"],"sources":["index.tsx"],"sourcesContent":["/* eslint-disable no-unused-expressions,@typescript-eslint/no-misused-promises */\nimport { AppEvent, twilio } from '../../../../../api';\nimport event from '../../../../../api/event';\nimport {\n  CallModal,\n  ChatModal,\n  LoadingIndicator,\n  SafeAreaContainer,\n  TipCamera,\n  TipStatusIcon,\n} from '../../../../../components';\nimport { TipCameraMode } from '../../../../../components/TipCamera/types';\nimport { makeSelectTipCameraMode } from '../../../../../containers/app/selectors';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport { Id, Incident } from 'incident-code-core';\nimport filter from 'lodash/filter';\nimport forEach from 'lodash/forEach';\nimport React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Alert, StatusBar } from 'react-native';\nimport { RNCamera } from 'react-native-camera';\nimport { IMessage as GiftedChatMessage } from 'react-native-gifted-chat';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction, useIncidentCategoryConfig, useSelector } from '../../../../../utils/hooks';\nimport NavigatorService from '../../../../../utils/navigation';\nimport { addBadge, getBadges, removeBadge } from '../../../../../utils/notification';\n\nimport {\n  addMessage,\n  getIncidentRequest,\n  getIncidentVideosRequest,\n  hideCallModal,\n  hideChatModal,\n  sendMessageRequest,\n  showCallModal,\n  showChatModal,\n  uploadVideoRequest,\n} from './actions';\nimport tipDetailMessages from './messages';\nimport {\n  makeSelectIncident,\n  makeSelectIncidentVideos,\n  makeSelectIsLoading,\n  makeSelectMessages,\n  makeSelectOrganization,\n  makeSelectShouldShowCallModal,\n  makeSelectShouldShowChatModal,\n} from './selectors';\nimport {\n  BackButton,\n  BackButtonContainer,\n  CategoryContainer,\n  CategoryContent,\n  CategoryImage,\n  CategoryName,\n  OrganizationContainer,\n  OrganizationName,\n} from './styles';\n\ninterface Params {\n  incident: Incident;\n  showChat: boolean;\n}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> { }\n\nconst TipDetailScreen: FC<Props> = ({ navigation: { getParam } }) => {\n  const incidentParam = getParam('incident');\n  const showChat = getParam('showChat');\n  const tipId = getParam('tipId');\n\n  const { formatMessage } = useIntl();\n\n  const [badges, setBadges] = useState<Id[]>([]);\n\n  const cameraRef = useRef<RNCamera>(null);\n\n  const getIncidentVideosAction = useAction(getIncidentVideosRequest);\n  const showCallModalAction = useAction(showCallModal);\n  const hideCallModalAction = useAction(hideCallModal);\n  const showChatModalAction = useAction(showChatModal);\n  const hideChatModalAction = useAction(hideChatModal);\n  const uploadVideoAction = useAction(uploadVideoRequest);\n  const addMessageAction = useAction(addMessage);\n  const sendMessageAction = useAction(sendMessageRequest);\n  const getIncidentAction = useAction(getIncidentRequest);\n\n  const incidentVideos = useSelector(makeSelectIncidentVideos());\n  const organization = useSelector(makeSelectOrganization());\n  const isLoading = useSelector(makeSelectIsLoading());\n  const shouldShowCallModal = useSelector(makeSelectShouldShowCallModal());\n  const shouldShowChatModal = useSelector(makeSelectShouldShowChatModal());\n  const tipCameraMode = useSelector(makeSelectTipCameraMode());\n  const messages = useSelector(makeSelectMessages());\n  const incident = useSelector(makeSelectIncident());\n\n  const [isVideoPaused, setIsVideoPaused] = useState(false);\n\n  const categoryConfig = useIncidentCategoryConfig(incident?.category);\n\n  useEffect(() => {\n    if (incidentParam == null) {\n      getIncidentAction(tipId);\n    } else {\n      getIncidentAction(incidentParam.id);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (incident) {\n      getIncidentVideosAction({\n        incident,\n        organizationId: incident.organization,\n      });\n      getBadges().then((notificationBadges: Id[]) => {\n        setBadges(filter(notificationBadges, n => n === incident.id));\n      });\n      const notificationAdded = (notificationBadges: Id[]) => {\n        setBadges(filter(notificationBadges, n => n === incident.id));\n      };\n      event.on(AppEvent.OnNotificationBadge, notificationAdded);\n      const messageAdded = async (message: GiftedChatMessage) => {\n        //(\"================ tip detail screen index message added ================\",message)\n        await addBadge(incident.id as Id);\n        addMessageAction(message);\n      };\n      event.on(AppEvent.OnMessageAdded, messageAdded);\n      const onIncidentUpdated = (incidentId: Id) => {\n        if (incident.id === incidentId) {\n          hideChatModalAction();\n          setTimeout(\n            () => {\n              Alert.alert(\n                formatMessage(tipDetailMessages.tipClosed),\n                formatMessage(tipDetailMessages.tipClosedDetail),\n                [\n                  {\n                    text: formatMessage(tipDetailMessages.ok),\n                    onPress: () => backToMyTips({ resolved: true }),\n                  },\n                ],\n                { cancelable: false },\n              );\n            },\n            shouldShowChatModal ? 5000 : 1500,\n          );\n        }\n      };\n      event.on(AppEvent.OnIncidentUpdated, onIncidentUpdated);\n      return function clean() {\n        event.off(AppEvent.OnNotificationBadge, notificationAdded);\n        event.off(AppEvent.OnMessageAdded, messageAdded);\n        event.off(AppEvent.OnIncidentUpdated, onIncidentUpdated);\n        twilio.removeChannelEvents(incident.id?.toString() || '');\n      };\n    }\n    return;\n  }, [incident, setBadges]);\n\n  useEffect(() => {\n    if (!isLoading && showChat) {\n      setTimeout(() => {\n        showChatModalAction();\n      }, 1300);\n    }\n  }, [isLoading]);\n\n  const handleRecordFinished = useCallback(\n    (videoUri: string) => {\n      uploadVideoAction({ videoUri, incident });\n    },\n    [incident],\n  );\n\n  const handleShowChatModal = useCallback(async () => {\n    if (tipCameraMode === TipCameraMode.video) {\n      return setIsVideoPaused(true);\n    }\n    setTimeout(() => {\n      cameraRef?.current?.pausePreview();\n    }, 100);\n    await removeBadge(incident?.id as Id);\n  }, [incident, tipCameraMode]);\n\n  const handleHideChatModal = useCallback(async () => {\n    if (tipCameraMode === TipCameraMode.video) {\n      return setIsVideoPaused(false);\n    }\n    cameraRef?.current?.resumePreview();\n    await removeBadge(incident?.id as Id);\n  }, [incident, tipCameraMode]);\n\n  const backToMyTips = useCallback(\n    (tipEvent?: { resolved?: boolean }) => {\n      const myTips = Screens.Menu.Tips.MyTips;\n      const incidentResolved = tipEvent?.resolved || incident?.isResolved;\n      NavigatorService.navigate(\n        incidentResolved ? myTips.Closed : myTips.Active,\n      );\n    },\n    [incident],\n  );\n\n  const handleSendMessage = useCallback(\n    (messagesToSent: GiftedChatMessage[]) => {\n      forEach(messagesToSent, message => {\n        sendMessageAction({ incident, message });\n      });\n    },\n    [incident],\n  );\n\n  if (isLoading) return <LoadingIndicator />;\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <BackButtonContainer>\n          <BackButton back={backToMyTips} />\n          <CategoryContainer>\n            <CategoryImage source={{ uri: categoryConfig.imageUrl }} />\n          </CategoryContainer>\n          <OrganizationContainer>\n            <OrganizationName>{organization.name}</OrganizationName>\n            <CategoryContent>\n              <TipStatusIcon active={!incident?.isResolved} />\n              <CategoryName>{categoryConfig.display}</CategoryName>\n            </CategoryContent>\n          </OrganizationContainer>\n        </BackButtonContainer>\n        <TipCamera\n          ref={cameraRef}\n          isRecordEnabled={!incident?.isResolved}\n          tipCameraMode={TipCameraMode.camera}\n          incidentVideos={incidentVideos}\n          onPhonePress={showCallModalAction}\n          onChatPress={showChatModalAction}\n          onRecordFinished={handleRecordFinished}\n          isVideoPaused={isVideoPaused}\n          badges={badges}\n        />\n        <CallModal\n          onShow={handleShowChatModal}\n          onHide={handleHideChatModal}\n          isVisible={shouldShowCallModal}\n          hideModal={hideCallModalAction}\n          organization={organization}\n        />\n        <ChatModal\n          isReadMode={incident?.isResolved}\n          onShow={handleShowChatModal}\n          onHide={handleHideChatModal}\n          isVisible={shouldShowChatModal}\n          hideModal={hideChatModalAction}\n          organization={organization}\n          messages={messages}\n          onMessageSent={handleSendMessage}\n        />\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default TipDetailScreen;\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,oBAAoB;AACrD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,SACEC,SAAS,EACTC,SAAS,EACTC,gBAAgB,EAChBC,iBAAiB,EACjBC,SAAS,EACTC,aAAa,QACR,2BAA2B;AAClC,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,uBAAuB,QAAQ,yCAAyC;AACjF,OAAOC,OAAO,MAAM,4DAA4D;AAEhF,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,KAAK,IAAQC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC3E,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,KAAK,EAAEC,SAAS,QAAQ,cAAc;AAK/C,SAASC,SAAS,EAAEC,yBAAyB,EAAEC,WAAW,QAAQ,4BAA4B;AAC9F,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,mCAAmC;AAEpF,SACEC,UAAU,EACVC,kBAAkB,EAClBC,wBAAwB,EACxBC,aAAa,EACbC,aAAa,EACbC,kBAAkB,EAClBC,aAAa,EACbC,aAAa,EACbC,kBAAkB,QACb,WAAW;AAClB,OAAOC,iBAAiB,MAAM,YAAY;AAC1C,SACEC,kBAAkB,EAClBC,wBAAwB,EACxBC,mBAAmB,EACnBC,kBAAkB,EAClBC,sBAAsB,EACtBC,6BAA6B,EAC7BC,6BAA6B,QACxB,aAAa;AACpB,SACEC,UAAU,EACVC,mBAAmB,EACnBC,iBAAiB,EACjBC,eAAe,EACfC,aAAa,EACbC,YAAY,EACZC,qBAAqB,EACrBC,gBAAgB,QACX,UAAU;AAQjB,MAAMC,eAA0B,GAAGA,CAAC;EAAEC,UAAU,EAAE;IAAEC;EAAS;AAAE,CAAC,KAAK;EACnE,MAAMC,aAAa,GAAGD,QAAQ,CAAC,UAAU,CAAC;EAC1C,MAAME,QAAQ,GAAGF,QAAQ,CAAC,UAAU,CAAC;EACrC,MAAMG,KAAK,GAAGH,QAAQ,CAAC,OAAO,CAAC;EAE/B,MAAM;IAAEI;EAAc,CAAC,GAAGzC,OAAO,CAAC,CAAC;EAEnC,MAAM,CAAC0C,MAAM,EAAEC,SAAS,CAAC,GAAG5C,QAAQ,CAAO,EAAE,CAAC;EAE9C,MAAM6C,SAAS,GAAG9C,MAAM,CAAW,IAAI,CAAC;EAExC,MAAM+C,uBAAuB,GAAG1C,SAAS,CAACS,wBAAwB,CAAC;EACnE,MAAMkC,mBAAmB,GAAG3C,SAAS,CAACa,aAAa,CAAC;EACpD,MAAM+B,mBAAmB,GAAG5C,SAAS,CAACU,aAAa,CAAC;EACpD,MAAMmC,mBAAmB,GAAG7C,SAAS,CAACc,aAAa,CAAC;EACpD,MAAMgC,mBAAmB,GAAG9C,SAAS,CAACW,aAAa,CAAC;EACpD,MAAMoC,iBAAiB,GAAG/C,SAAS,CAACe,kBAAkB,CAAC;EACvD,MAAMiC,gBAAgB,GAAGhD,SAAS,CAACO,UAAU,CAAC;EAC9C,MAAM0C,iBAAiB,GAAGjD,SAAS,CAACY,kBAAkB,CAAC;EACvD,MAAMsC,iBAAiB,GAAGlD,SAAS,CAACQ,kBAAkB,CAAC;EAEvD,MAAM2C,cAAc,GAAGjD,WAAW,CAACgB,wBAAwB,CAAC,CAAC,CAAC;EAC9D,MAAMkC,YAAY,GAAGlD,WAAW,CAACmB,sBAAsB,CAAC,CAAC,CAAC;EAC1D,MAAMgC,SAAS,GAAGnD,WAAW,CAACiB,mBAAmB,CAAC,CAAC,CAAC;EACpD,MAAMmC,mBAAmB,GAAGpD,WAAW,CAACoB,6BAA6B,CAAC,CAAC,CAAC;EACxE,MAAMiC,mBAAmB,GAAGrD,WAAW,CAACqB,6BAA6B,CAAC,CAAC,CAAC;EACxE,MAAMiC,aAAa,GAAGtD,WAAW,CAACd,uBAAuB,CAAC,CAAC,CAAC;EAC5D,MAAMqE,QAAQ,GAAGvD,WAAW,CAACkB,kBAAkB,CAAC,CAAC,CAAC;EAClD,MAAMsC,QAAQ,GAAGxD,WAAW,CAACe,kBAAkB,CAAC,CAAC,CAAC;EAElD,MAAM,CAAC0C,aAAa,EAAEC,gBAAgB,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMiE,cAAc,GAAG5D,yBAAyB,CAACyD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,QAAQ,CAAC;EAEpEpE,SAAS,CAAC,MAAM;IACd,IAAIyC,aAAa,IAAI,IAAI,EAAE;MACzBe,iBAAiB,CAACb,KAAK,CAAC;IAC1B,CAAC,MAAM;MACLa,iBAAiB,CAACf,aAAa,CAAC4B,EAAE,CAAC;IACrC;EACF,CAAC,EAAE,EAAE,CAAC;EAENrE,SAAS,CAAC,MAAM;IACd,IAAIgE,QAAQ,EAAE;MACZhB,uBAAuB,CAAC;QACtBgB,QAAQ;QACRM,cAAc,EAAEN,QAAQ,CAACN;MAC3B,CAAC,CAAC;MACF/C,SAAS,CAAC,CAAC,CAAC4D,IAAI,CAAEC,kBAAwB,IAAK;QAC7C1B,SAAS,CAAClD,MAAM,CAAC4E,kBAAkB,EAAEC,CAAC,IAAIA,CAAC,KAAKT,QAAQ,CAACK,EAAE,CAAC,CAAC;MAC/D,CAAC,CAAC;MACF,MAAMK,iBAAiB,GAAIF,kBAAwB,IAAK;QACtD1B,SAAS,CAAClD,MAAM,CAAC4E,kBAAkB,EAAEC,CAAC,IAAIA,CAAC,KAAKT,QAAQ,CAACK,EAAE,CAAC,CAAC;MAC/D,CAAC;MACDnF,KAAK,CAACyF,EAAE,CAAC3F,QAAQ,CAAC4F,mBAAmB,EAAEF,iBAAiB,CAAC;MACzD,MAAMG,YAAY,GAAG,MAAOC,OAA0B,IAAK;QACzD;QACA,MAAMpE,QAAQ,CAACsD,QAAQ,CAACK,EAAQ,CAAC;QACjCf,gBAAgB,CAACwB,OAAO,CAAC;MAC3B,CAAC;MACD5F,KAAK,CAACyF,EAAE,CAAC3F,QAAQ,CAAC+F,cAAc,EAAEF,YAAY,CAAC;MAC/C,MAAMG,iBAAiB,GAAIC,UAAc,IAAK;QAC5C,IAAIjB,QAAQ,CAACK,EAAE,KAAKY,UAAU,EAAE;UAC9B7B,mBAAmB,CAAC,CAAC;UACrB8B,UAAU,CACR,MAAM;YACJ9E,KAAK,CAAC+E,KAAK,CACTvC,aAAa,CAACtB,iBAAiB,CAAC8D,SAAS,CAAC,EAC1CxC,aAAa,CAACtB,iBAAiB,CAAC+D,eAAe,CAAC,EAChD,CACE;cACEC,IAAI,EAAE1C,aAAa,CAACtB,iBAAiB,CAACiE,EAAE,CAAC;cACzCC,OAAO,EAAEA,CAAA,KAAMC,YAAY,CAAC;gBAAEC,QAAQ,EAAE;cAAK,CAAC;YAChD,CAAC,CACF,EACD;cAAEC,UAAU,EAAE;YAAM,CACtB,CAAC;UACH,CAAC,EACD9B,mBAAmB,GAAG,IAAI,GAAG,IAC/B,CAAC;QACH;MACF,CAAC;MACD3E,KAAK,CAACyF,EAAE,CAAC3F,QAAQ,CAAC4G,iBAAiB,EAAEZ,iBAAiB,CAAC;MACvD,OAAO,SAASa,KAAKA,CAAA,EAAG;QAAA,IAAAC,YAAA;QACtB5G,KAAK,CAAC6G,GAAG,CAAC/G,QAAQ,CAAC4F,mBAAmB,EAAEF,iBAAiB,CAAC;QAC1DxF,KAAK,CAAC6G,GAAG,CAAC/G,QAAQ,CAAC+F,cAAc,EAAEF,YAAY,CAAC;QAChD3F,KAAK,CAAC6G,GAAG,CAAC/G,QAAQ,CAAC4G,iBAAiB,EAAEZ,iBAAiB,CAAC;QACxD/F,MAAM,CAAC+G,mBAAmB,CAAC,EAAAF,YAAA,GAAA9B,QAAQ,CAACK,EAAE,cAAAyB,YAAA,uBAAXA,YAAA,CAAaG,QAAQ,CAAC,CAAC,KAAI,EAAE,CAAC;MAC3D,CAAC;IACH;IACA;EACF,CAAC,EAAE,CAACjC,QAAQ,EAAElB,SAAS,CAAC,CAAC;EAEzB9C,SAAS,CAAC,MAAM;IACd,IAAI,CAAC2D,SAAS,IAAIjB,QAAQ,EAAE;MAC1BwC,UAAU,CAAC,MAAM;QACf/B,mBAAmB,CAAC,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACQ,SAAS,CAAC,CAAC;EAEf,MAAMuC,oBAAoB,GAAGnG,WAAW,CACrCoG,QAAgB,IAAK;IACpB9C,iBAAiB,CAAC;MAAE8C,QAAQ;MAAEnC;IAAS,CAAC,CAAC;EAC3C,CAAC,EACD,CAACA,QAAQ,CACX,CAAC;EAED,MAAMoC,mBAAmB,GAAGrG,WAAW,CAAC,YAAY;IAClD,IAAI+D,aAAa,KAAKrE,aAAa,CAAC4G,KAAK,EAAE;MACzC,OAAOnC,gBAAgB,CAAC,IAAI,CAAC;IAC/B;IACAgB,UAAU,CAAC,MAAM;MAAA,IAAAoB,kBAAA;MACfvD,SAAS,aAATA,SAAS,gBAAAuD,kBAAA,GAATvD,SAAS,CAAEwD,OAAO,cAAAD,kBAAA,eAAlBA,kBAAA,CAAoBE,YAAY,CAAC,CAAC;IACpC,CAAC,EAAE,GAAG,CAAC;IACP,MAAM5F,WAAW,CAACoD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,EAAQ,CAAC;EACvC,CAAC,EAAE,CAACL,QAAQ,EAAEF,aAAa,CAAC,CAAC;EAE7B,MAAM2C,mBAAmB,GAAG1G,WAAW,CAAC,YAAY;IAAA,IAAA2G,mBAAA;IAClD,IAAI5C,aAAa,KAAKrE,aAAa,CAAC4G,KAAK,EAAE;MACzC,OAAOnC,gBAAgB,CAAC,KAAK,CAAC;IAChC;IACAnB,SAAS,aAATA,SAAS,gBAAA2D,mBAAA,GAAT3D,SAAS,CAAEwD,OAAO,cAAAG,mBAAA,eAAlBA,mBAAA,CAAoBC,aAAa,CAAC,CAAC;IACnC,MAAM/F,WAAW,CAACoD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,EAAQ,CAAC;EACvC,CAAC,EAAE,CAACL,QAAQ,EAAEF,aAAa,CAAC,CAAC;EAE7B,MAAM2B,YAAY,GAAG1F,WAAW,CAC7B6G,QAAiC,IAAK;IACrC,MAAMC,MAAM,GAAGlH,OAAO,CAACmH,IAAI,CAACC,IAAI,CAACC,MAAM;IACvC,MAAMC,gBAAgB,GAAG,CAAAL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAElB,QAAQ,MAAI1B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEkD,UAAU;IACnEzG,gBAAgB,CAAC0G,QAAQ,CACvBF,gBAAgB,GAAGJ,MAAM,CAACO,MAAM,GAAGP,MAAM,CAACQ,MAC5C,CAAC;EACH,CAAC,EACD,CAACrD,QAAQ,CACX,CAAC;EAED,MAAMsD,iBAAiB,GAAGvH,WAAW,CAClCwH,cAAmC,IAAK;IACvC1H,OAAO,CAAC0H,cAAc,EAAEzC,OAAO,IAAI;MACjCvB,iBAAiB,CAAC;QAAES,QAAQ;QAAEc;MAAQ,CAAC,CAAC;IAC1C,CAAC,CAAC;EACJ,CAAC,EACD,CAACd,QAAQ,CACX,CAAC;EAED,IAAIL,SAAS,EAAE,oBAAO7D,KAAA,CAAA0H,aAAA,CAACnI,gBAAgB,MAAE,CAAC;EAE1C,oBACES,KAAA,CAAA0H,aAAA,CAAA1H,KAAA,CAAA2H,QAAA,qBACE3H,KAAA,CAAA0H,aAAA,CAACnH,SAAS;IAACqH,QAAQ,EAAC,cAAc;IAACC,eAAe,EAAC;EAAO,CAAE,CAAC,eAC7D7H,KAAA,CAAA0H,aAAA,CAAClI,iBAAiB,qBAChBQ,KAAA,CAAA0H,aAAA,CAACzF,mBAAmB,qBAClBjC,KAAA,CAAA0H,aAAA,CAAC1F,UAAU;IAAC8F,IAAI,EAAEnC;EAAa,CAAE,CAAC,eAClC3F,KAAA,CAAA0H,aAAA,CAACxF,iBAAiB,qBAChBlC,KAAA,CAAA0H,aAAA,CAACtF,aAAa;IAAC2F,MAAM,EAAE;MAAEC,GAAG,EAAE3D,cAAc,CAAC4D;IAAS;EAAE,CAAE,CACzC,CAAC,eACpBjI,KAAA,CAAA0H,aAAA,CAACpF,qBAAqB,qBACpBtC,KAAA,CAAA0H,aAAA,CAACnF,gBAAgB,QAAEqB,YAAY,CAACsE,IAAuB,CAAC,eACxDlI,KAAA,CAAA0H,aAAA,CAACvF,eAAe,qBACdnC,KAAA,CAAA0H,aAAA,CAAChI,aAAa;IAACyI,MAAM,EAAE,EAACjE,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEkD,UAAU;EAAC,CAAE,CAAC,eAChDpH,KAAA,CAAA0H,aAAA,CAACrF,YAAY,QAAEgC,cAAc,CAAC+D,OAAsB,CACrC,CACI,CACJ,CAAC,eACtBpI,KAAA,CAAA0H,aAAA,CAACjI,SAAS;IACR4I,GAAG,EAAEpF,SAAU;IACfqF,eAAe,EAAE,EAACpE,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEkD,UAAU,CAAC;IACvCpD,aAAa,EAAErE,aAAa,CAAC4I,MAAO;IACpC5E,cAAc,EAAEA,cAAe;IAC/B6E,YAAY,EAAErF,mBAAoB;IAClCsF,WAAW,EAAEpF,mBAAoB;IACjCqF,gBAAgB,EAAEtC,oBAAqB;IACvCjC,aAAa,EAAEA,aAAc;IAC7BpB,MAAM,EAAEA;EAAO,CAChB,CAAC,eACF/C,KAAA,CAAA0H,aAAA,CAACrI,SAAS;IACRsJ,MAAM,EAAErC,mBAAoB;IAC5BsC,MAAM,EAAEjC,mBAAoB;IAC5BkC,SAAS,EAAE/E,mBAAoB;IAC/BgF,SAAS,EAAE1F,mBAAoB;IAC/BQ,YAAY,EAAEA;EAAa,CAC5B,CAAC,eACF5D,KAAA,CAAA0H,aAAA,CAACpI,SAAS;IACRyJ,UAAU,EAAE7E,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEkD,UAAW;IACjCuB,MAAM,EAAErC,mBAAoB;IAC5BsC,MAAM,EAAEjC,mBAAoB;IAC5BkC,SAAS,EAAE9E,mBAAoB;IAC/B+E,SAAS,EAAExF,mBAAoB;IAC/BM,YAAY,EAAEA,YAAa;IAC3BK,QAAQ,EAAEA,QAAS;IACnB+E,aAAa,EAAExB;EAAkB,CAClC,CACgB,CACnB,CAAC;AAEP,CAAC;AAED,eAAehF,eAAe","ignoreList":[]}