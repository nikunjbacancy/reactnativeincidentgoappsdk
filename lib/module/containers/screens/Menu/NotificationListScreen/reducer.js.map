{"version":3,"names":["produce","NOTIFICATION_LIST_REQUEST","NOTIFICATION_LIST_SUCCESS","NOTIFICATION_LIST_FAILURE","NOTIFICATION_LIST_RESET","UPDATE_READUNREAD_STATUS_FAILURE","UPDATE_READUNREAD_STATUS_REQUEST","UPDATE_READUNREAD_STATUS_SUCCESS","NOTIFICATION_UNREAD_COUNT","RESET_UPDATE_READUNREAD_STATUS","READ_ALL_NOTIFICATION_REQUEST","READ_ALL_NOTIFICATION_SUCCESS","initialState","isLoading","listData","unreadCount","notiReadData","notificationListReducer","draft","action","type","payload","totalUnreadNotificationCount","count","updatedListData","records","map","item","id","notiId","isRead","currentStatus","pnMessage","data","isReadFrom"],"sources":["reducer.ts"],"sourcesContent":["/**\n *\n * AddContactScreen reducer\n *\n */\n\nimport produce, { Draft } from 'immer';\n\nimport {\n  NOTIFICATION_LIST_REQUEST,\n  NOTIFICATION_LIST_SUCCESS,\n  NOTIFICATION_LIST_FAILURE,\n  NOTIFICATION_LIST_RESET,\n  UPDATE_READUNREAD_STATUS_FAILURE,\n  UPDATE_READUNREAD_STATUS_REQUEST,\n  UPDATE_READUNREAD_STATUS_SUCCESS,\n  NOTIFICATION_UNREAD_COUNT,\n  RESET_UPDATE_READUNREAD_STATUS,\n  READ_ALL_NOTIFICATION_REQUEST,\n  READ_ALL_NOTIFICATION_SUCCESS\n} from './constants';\nimport { NotificationListState, NotificationListActionTypes } from './types';\n\nexport const initialState: NotificationListState = {\n  isLoading: true,\n  listData: null,\n  unreadCount: 0,\n  notiReadData: null\n};\n\nconst notificationListReducer = produce(\n  (draft: Draft<NotificationListState>, action: NotificationListActionTypes) => {\n    switch (action.type) {\n      case NOTIFICATION_LIST_REQUEST:\n        draft.isLoading = true;\n        break;\n      case NOTIFICATION_LIST_SUCCESS:\n        draft.isLoading = false;\n        draft.listData = action.payload;\n        draft.unreadCount = action.payload.totalUnreadNotificationCount;\n        break;\n      case NOTIFICATION_LIST_FAILURE:\n        draft.isLoading = false;\n        draft.listData = null;\n        break;\n      case NOTIFICATION_LIST_RESET:\n        draft.isLoading = false;\n        draft.listData = null;\n        break;\n      case NOTIFICATION_UNREAD_COUNT:\n        draft.unreadCount = action.count;\n        break;\n      case UPDATE_READUNREAD_STATUS_REQUEST:\n        if (draft.listData) {\n          const updatedListData = draft.listData.records.map((item: any) => {\n            if (item.id === action.payload.notiId) {\n              item.isRead = true\n            }\n            return item;\n          });\n          draft.listData.records = updatedListData;\n        }\n        draft.isLoading = false;\n        break;\n      case UPDATE_READUNREAD_STATUS_SUCCESS:\n        draft.unreadCount = action.payload.totalUnreadNotificationCount\n        if (action.payload.currentStatus.pnMessage.data.type == \"Location\" && action.payload.isReadFrom == \"app\") {\n          draft.notiReadData = action.payload\n        }\n        break;\n      case RESET_UPDATE_READUNREAD_STATUS:\n        draft.notiReadData = null\n        break;\n      case UPDATE_READUNREAD_STATUS_FAILURE:\n        draft.isLoading = false;\n        draft.listData = null;\n        break;\n      case UPDATE_READUNREAD_STATUS_FAILURE:\n        draft.isLoading = false;\n        draft.listData = null;\n        break;\n      case READ_ALL_NOTIFICATION_REQUEST:\n        draft.unreadCount = 0;\n        break;\n      case READ_ALL_NOTIFICATION_SUCCESS:\n        if (draft.listData) {\n          const updatedListData = draft.listData.records.map((item: any) => {\n            item.isRead = true\n            return item;\n          });\n          draft.listData.records = updatedListData;\n        }\n        draft.isLoading = false;\n        draft.unreadCount = 0;\n        break;\n      default:\n    }\n  },\n  initialState,\n);\n\nexport default notificationListReducer;\n"],"mappings":"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","ignoreList":[]}