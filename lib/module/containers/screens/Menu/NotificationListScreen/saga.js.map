{"version":3,"names":["api","call","put","takeLatest","notificationListFailure","notificationListSuccess","notificationReadUnreadStatusSuccess","notificationReadUnreadStatusFailure","readAllNotificationSuccess","readAllNotificationStatusFailure","NOTIFICATION_LIST_REQUEST","READ_ALL_NOTIFICATION_REQUEST","UPDATE_READUNREAD_STATUS_REQUEST","Toast","getNotificationList","payload","console","log","response","user","data","error","show","message","position","positions","CENTER","duration","readAllNotification","updateReadUnreadStatus","isReadUnreadFrom","readFrom","updateReadUnreadNotificationStatus","updatedResponse","isReadFrom","notificationListScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * NotificationScreen saga\n *\n */\n\nimport * as api from '../../../../api';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../utils/error';\n\nimport {\n  notificationListFailure,\n  notificationListSuccess,\n  notificationReadUnreadStatusSuccess,\n  notificationReadUnreadStatusFailure,\n  readAllNotificationSuccess,\n  readAllNotificationStatusFailure\n} from './actions';\nimport { NOTIFICATION_LIST_REQUEST, READ_ALL_NOTIFICATION_REQUEST, UPDATE_READUNREAD_STATUS_REQUEST } from './constants';\nimport { NotificationListRequestAction } from './types';\nimport Toast from 'react-native-root-toast';\n\nexport function* getNotificationList({\n  payload,\n}: NotificationListRequestAction) {\n  try {\n    console.log(\"getNotificationList request===>\",payload)\n    const response = yield call(api.user.getNotificationList, payload);\n    // console.log(\"notification list response ===>\",JSON.stringify(response))\n    yield put(notificationListSuccess(response.data));\n  } catch (error) {\n    Toast.show((error as Error).message, {\n      position: Toast.positions.CENTER,\n      duration: 3000\n    });\n    yield put(notificationListFailure(error as Error));\n  }\n}\n\nexport function* readAllNotification({\n  payload,\n}: NotificationListRequestAction) {\n  try {\n    console.log(\"readall payload=>\",payload)\n    const response = yield call(api.user.readAllNotification, payload);\n    // console.log(\"readAllNotification response ===>\",JSON.stringify(response))\n    yield put(readAllNotificationSuccess(response.data));\n  } catch (error) {\n    Toast.show((error as Error).message, {\n      position: Toast.positions.CENTER,\n      duration: 3000\n    });\n    yield put(readAllNotificationStatusFailure(error as Error));\n  }\n}\n\n\nexport function* updateReadUnreadStatus({\n  payload,\n}: NotificationListRequestAction) {\n  try {\n    let isReadUnreadFrom = payload.readFrom\n    delete payload.readFrom\n    let response = yield call(api.user.updateReadUnreadNotificationStatus, payload);\n    const updatedResponse = {...response.data, isReadFrom: isReadUnreadFrom };\n    // console.log('*****update Read Unread Status API call successful:',JSON.stringify(updatedResponse));\n    yield put(notificationReadUnreadStatusSuccess(updatedResponse));\n  } catch (error) {\n    // console.log(\"updateReadUnreadStatus error===>\",error)\n    yield put(notificationReadUnreadStatusFailure(error as Error));\n  }\n}\n\nexport default function* notificationListScreenSaga() {\n  yield takeLatest(NOTIFICATION_LIST_REQUEST, getNotificationList);\n  yield takeLatest(UPDATE_READUNREAD_STATUS_REQUEST, updateReadUnreadStatus);\n  yield takeLatest(READ_ALL_NOTIFICATION_REQUEST, readAllNotification);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,GAAG,MAAM,iBAAiB;AACtC,SAASC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAG1D,SACEC,uBAAuB,EACvBC,uBAAuB,EACvBC,mCAAmC,EACnCC,mCAAmC,EACnCC,0BAA0B,EAC1BC,gCAAgC,QAC3B,WAAW;AAClB,SAASC,yBAAyB,EAAEC,6BAA6B,EAAEC,gCAAgC,QAAQ,aAAa;AAExH,OAAOC,KAAK,MAAM,yBAAyB;AAE3C,OAAO,UAAUC,mBAAmBA,CAAC;EACnCC;AAC6B,CAAC,EAAE;EAChC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAACF,OAAO,CAAC;IACtD,MAAMG,QAAQ,GAAG,MAAMjB,IAAI,CAACD,GAAG,CAACmB,IAAI,CAACL,mBAAmB,EAAEC,OAAO,CAAC;IAClE;IACA,MAAMb,GAAG,CAACG,uBAAuB,CAACa,QAAQ,CAACE,IAAI,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,KAAK,CAACS,IAAI,CAAED,KAAK,CAAWE,OAAO,EAAE;MACnCC,QAAQ,EAAEX,KAAK,CAACY,SAAS,CAACC,MAAM;MAChCC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,MAAMzB,GAAG,CAACE,uBAAuB,CAACiB,KAAc,CAAC,CAAC;EACpD;AACF;AAEA,OAAO,UAAUO,mBAAmBA,CAAC;EACnCb;AAC6B,CAAC,EAAE;EAChC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACF,OAAO,CAAC;IACxC,MAAMG,QAAQ,GAAG,MAAMjB,IAAI,CAACD,GAAG,CAACmB,IAAI,CAACS,mBAAmB,EAAEb,OAAO,CAAC;IAClE;IACA,MAAMb,GAAG,CAACM,0BAA0B,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,KAAK,CAACS,IAAI,CAAED,KAAK,CAAWE,OAAO,EAAE;MACnCC,QAAQ,EAAEX,KAAK,CAACY,SAAS,CAACC,MAAM;MAChCC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,MAAMzB,GAAG,CAACO,gCAAgC,CAACY,KAAc,CAAC,CAAC;EAC7D;AACF;AAGA,OAAO,UAAUQ,sBAAsBA,CAAC;EACtCd;AAC6B,CAAC,EAAE;EAChC,IAAI;IACF,IAAIe,gBAAgB,GAAGf,OAAO,CAACgB,QAAQ;IACvC,OAAOhB,OAAO,CAACgB,QAAQ;IACvB,IAAIb,QAAQ,GAAG,MAAMjB,IAAI,CAACD,GAAG,CAACmB,IAAI,CAACa,kCAAkC,EAAEjB,OAAO,CAAC;IAC/E,MAAMkB,eAAe,GAAG;MAAC,GAAGf,QAAQ,CAACE,IAAI;MAAEc,UAAU,EAAEJ;IAAiB,CAAC;IACzE;IACA,MAAM5B,GAAG,CAACI,mCAAmC,CAAC2B,eAAe,CAAC,CAAC;EACjE,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACd;IACA,MAAMnB,GAAG,CAACK,mCAAmC,CAACc,KAAc,CAAC,CAAC;EAChE;AACF;AAEA,eAAe,UAAUc,0BAA0BA,CAAA,EAAG;EACpD,MAAMhC,UAAU,CAACO,yBAAyB,EAAEI,mBAAmB,CAAC;EAChE,MAAMX,UAAU,CAACS,gCAAgC,EAAEiB,sBAAsB,CAAC;EAC1E,MAAM1B,UAAU,CAACQ,6BAA6B,EAAEiB,mBAAmB,CAAC;AACtE","ignoreList":[]}