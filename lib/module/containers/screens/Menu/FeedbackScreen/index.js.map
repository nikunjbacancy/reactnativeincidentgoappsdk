{"version":3,"names":["colors","Form","GradientButton","Header","PaddingView","SafeAreaContainer","ScreenActionButtonField","ScreenActionModal","LINKS","Screens","React","useIntl","Linking","ScrollView","StatusBar","Toast","useAction","useSelector","NavigatorService","delay","sdkConfigs","hideSuccessModal","showSuccessModal","SEND_FEEDBACK_FAILURE","SEND_FEEDBACK_REQUEST","SEND_FEEDBACK_SUCCESS","messages","makeSelectIsSending","makeSelectShowSuccessModal","EmailInput","InfoRow","InfoText","InputRow","PrivacyLinkText","PrivacyRow","PrivacyText","SendButtonRow","StyledErrorField","TextInput","TextRow","FeedbackSchema","BackgroundGeolocation","logger","FeedbackScreen","showEmailButton","configs","sdkEnvironment","formatMessage","isSending","shouldShowModal","showSuccessModalAction","hideSuccessModalAction","schema","initialValues","email","comment","openFaq","openURL","faq","openTos","tos","openPrivacy","privacy","openQuickStartGuide","navigate","Menu","Feedback","QuickStartGuide","fromFeedback","goBack","back","sendLocationLogs","emailLog","then","err","error","message","createElement","Fragment","barStyle","backgroundColor","contentContainerStyle","flex","keyboardShouldPersistTaps","keyboardDismissMode","title","info","start","resolve","reject","validationSchema","onResolve","onReject","action","show","payload","position","positions","BOTTOM","name","autoCapitalize","keyboardType","textContentType","placeholder","emailInput","autoCompleteType","multiline","numberOfLines","commentInput","size","guideDescription","guideText","key","onPress","locationLogDesc","text","locationLogButton","disabled","loading","send","onCancel","tintColor","white","isVisible","actionText","ok","feedbackSentTitle","feedbackSentDescription","onAction","onHide"],"sources":["index.tsx"],"sourcesContent":["import { colors } from '../../../../assets';\nimport {\n  Form,\n  GradientButton,\n  Header,\n  PaddingView,\n  SafeAreaContainer,\n  ScreenActionButtonField,\n  ScreenActionModal,\n} from '../../../../components';\nimport { LINKS } from '../../../../containers/app/constants';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\nimport React, { FC } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Linking, ScrollView, StatusBar } from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { ScreenProps } from 'react-native-screens';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { useAction, useSelector } from '../../../../utils/hooks';\nimport NavigatorService from '../../../../utils/navigation';\nimport { delay } from '../../../../utils/promise';\nimport { sdkConfigs } from '../../../../sdkConfigs'\nimport { hideSuccessModal, showSuccessModal } from './actions';\nimport {\n  SEND_FEEDBACK_FAILURE,\n  SEND_FEEDBACK_REQUEST,\n  SEND_FEEDBACK_SUCCESS,\n} from './constants';\nimport messages from './messages';\nimport { makeSelectIsSending, makeSelectShowSuccessModal } from './selectors';\nimport {\n  EmailInput,\n  InfoRow,\n  InfoText,\n  InputRow,\n  PrivacyLinkText,\n  PrivacyRow,\n  PrivacyText,\n  SendButtonRow,\n  StyledErrorField,\n  TextInput,\n  TextRow,\n} from './styles';\nimport FeedbackSchema from './validator';\nimport BackgroundGeolocation from 'react-native-background-geolocation';\nimport { logger } from '../../../../api';\n\ninterface Params {}\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> {}\n\nconst FeedbackScreen: FC<Props> = () => {\n  const showEmailButton = sdkConfigs.configs.sdkEnvironment !== 'PROD' ? true : false;\n  const { formatMessage } = useIntl();\n\n  const isSending = useSelector(makeSelectIsSending());\n  const shouldShowModal = useSelector(makeSelectShowSuccessModal());\n\n  const showSuccessModalAction = useAction(showSuccessModal);\n  const hideSuccessModalAction = useAction(hideSuccessModal);\n\n  const schema = FeedbackSchema(formatMessage);\n  const initialValues = {\n    email: '',\n    comment: '',\n  };\n\n  const openFaq = () => Linking.openURL(LINKS.faq);\n  const openTos = () => Linking.openURL(LINKS.tos);\n  const openPrivacy = () => Linking.openURL(LINKS.privacy);\n  const openQuickStartGuide = () =>\n    NavigatorService.navigate(Screens.Menu.Feedback.QuickStartGuide, {\n      fromFeedback: true,\n    });\n  const goBack = async () => {\n    hideSuccessModalAction();\n    await delay(300);\n    NavigatorService.back();\n  };\n\n  const sendLocationLogs = () => {\n    BackgroundGeolocation.logger.emailLog(sdkConfigs.configs.email).then(\n      () => {},\n      err => {\n        logger.error(\n          'Email Location Logs Error',\n          'emailLog Error: ' + err?.message,\n          err,\n        );\n      },\n    );\n  };\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <ScrollView\n          contentContainerStyle={{ flex: 1 }}\n          keyboardShouldPersistTaps=\"always\"\n          keyboardDismissMode=\"on-drag\"\n        >\n          <Header title={formatMessage(messages.title)} />\n          <InfoRow>\n            <InfoText>{formatMessage(messages.info)}</InfoText>\n          </InfoRow>\n          <Form\n            start={SEND_FEEDBACK_REQUEST}\n            resolve={SEND_FEEDBACK_SUCCESS}\n            reject={SEND_FEEDBACK_FAILURE}\n            initialValues={initialValues}\n            validationSchema={schema}\n            onResolve={showSuccessModalAction}\n            onReject={action =>\n              Toast.show(action.payload.message, {\n                position: Toast.positions.BOTTOM,\n              })\n            }\n          >\n            <>\n              <InputRow>\n                <EmailInput\n                  name=\"email\"\n                  autoCapitalize=\"none\"\n                  keyboardType=\"email-address\"\n                  textContentType=\"emailAddress\"\n                  placeholder={formatMessage(messages.emailInput)}\n                />\n              </InputRow>\n              <StyledErrorField name=\"email\" />\n              <TextRow>\n                <TextInput\n                  name=\"comment\"\n                  autoCompleteType=\"off\"\n                  textContentType=\"none\"\n                  multiline\n                  numberOfLines={4}\n                  placeholder={formatMessage(messages.commentInput)}\n                />\n              </TextRow>\n              <StyledErrorField name=\"comment\" />\n              <PaddingView size={1} />\n            </>\n            <PrivacyRow>\n              <PrivacyText>\n                {formatMessage(messages.guideDescription, {\n                  guideText: (\n                    <PrivacyLinkText key=\"0\" onPress={openQuickStartGuide}>\n                      {formatMessage(messages.guideText)}\n                    </PrivacyLinkText>\n                  ),\n                  faq: (\n                    <PrivacyLinkText key=\"1\" onPress={openFaq}>\n                      {formatMessage(messages.faq)}\n                    </PrivacyLinkText>\n                  ),\n                  privacy: (\n                    <PrivacyLinkText key=\"2\" onPress={openPrivacy}>\n                      {formatMessage(messages.privacy)}\n                    </PrivacyLinkText>\n                  ),\n                  tos: (\n                    <PrivacyLinkText key=\"3\" onPress={openTos}>\n                      {formatMessage(messages.tos)}\n                    </PrivacyLinkText>\n                  ),\n                })}\n              </PrivacyText>\n            </PrivacyRow>\n            {showEmailButton && (\n              <>\n                <InfoRow>\n                  <InfoText>{formatMessage(messages.locationLogDesc)}</InfoText>\n                </InfoRow>\n                <SendButtonRow>\n                  <GradientButton\n                    text={formatMessage(messages.locationLogButton)}\n                    onPress={sendLocationLogs}\n                  />\n                </SendButtonRow>\n              </>\n            )}\n            <SendButtonRow>\n              <ScreenActionButtonField\n                disabled={isSending}\n                loading={isSending}\n                text={formatMessage(messages.send)}\n                onCancel={NavigatorService.back}\n                tintColor={colors.white}\n              />\n            </SendButtonRow>\n          </Form>\n          <ScreenActionModal\n            isVisible={shouldShowModal}\n            actionText={formatMessage(messages.ok)}\n            title={formatMessage(messages.feedbackSentTitle)}\n            message={formatMessage(messages.feedbackSentDescription)}\n            onAction={goBack}\n            onHide={goBack}\n          />\n        </ScrollView>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default FeedbackScreen;\n"],"mappings":"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","ignoreList":[]}