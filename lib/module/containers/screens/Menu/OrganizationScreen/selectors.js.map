{"version":3,"names":["createSelector","initialState","selectOrganizationScreenStateDomain","state","organizationScreen","makeSelectIsLoading","isLoading","makeSelectUserOrganizations","organizations","makeSelectOrganizationScreenState","subState"],"sources":["selectors.ts"],"sourcesContent":["/**\n *\n * OrganizationScreen selectors\n *\n */\n\nimport { createSelector } from 'reselect';\nimport { RootState } from 'store/types';\n\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the OrganizationScreen state domain\n */\n\nconst selectOrganizationScreenStateDomain = (state: RootState) =>\n  state.organizationScreen || initialState;\n\n/**\n * Other specific selectors\n */\n\nconst makeSelectIsLoading = () =>\n  createSelector(\n    selectOrganizationScreenStateDomain,\n    ({ isLoading }) => isLoading,\n  );\n\nconst makeSelectUserOrganizations = () =>\n  createSelector(\n    selectOrganizationScreenStateDomain,\n    ({ organizations }) => organizations,\n  );\n\n/**\n * Default selector used by OrganizationScreen\n */\n\nconst makeSelectOrganizationScreenState = () =>\n  createSelector(selectOrganizationScreenStateDomain, subState => subState);\n\nexport default makeSelectOrganizationScreenState;\nexport { makeSelectIsLoading, makeSelectUserOrganizations };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,QAAQ,UAAU;AAGzC,SAASC,YAAY,QAAQ,WAAW;;AAExC;AACA;AACA;;AAEA,MAAMC,mCAAmC,GAAIC,KAAgB,IAC3DA,KAAK,CAACC,kBAAkB,IAAIH,YAAY;;AAE1C;AACA;AACA;;AAEA,MAAMI,mBAAmB,GAAGA,CAAA,KAC1BL,cAAc,CACZE,mCAAmC,EACnC,CAAC;EAAEI;AAAU,CAAC,KAAKA,SACrB,CAAC;AAEH,MAAMC,2BAA2B,GAAGA,CAAA,KAClCP,cAAc,CACZE,mCAAmC,EACnC,CAAC;EAAEM;AAAc,CAAC,KAAKA,aACzB,CAAC;;AAEH;AACA;AACA;;AAEA,MAAMC,iCAAiC,GAAGA,CAAA,KACxCT,cAAc,CAACE,mCAAmC,EAAEQ,QAAQ,IAAIA,QAAQ,CAAC;AAE3E,eAAeD,iCAAiC;AAChD,SAASJ,mBAAmB,EAAEE,2BAA2B","ignoreList":[]}