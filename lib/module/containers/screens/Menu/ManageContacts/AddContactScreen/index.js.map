{"version":3,"names":["colors","ErrorView","Header","LoadingIndicator","SafeAreaContainer","ScreenActionButton","debounce","React","useCallback","useEffect","useIntl","StatusBar","RESULTS","useAction","useSelector","NavigatorService","messages","addContactRequest","filterContacts","getContactsRequest","ContactItem","makeSelectFilteredContacts","makeSelectPermissionStatus","BackButtonRow","Container","ErrorContainer","ErrorHeader","ErrorText","InputRow","List","NoMatchesContainer","NoMatchesText","TextInput","AddContactScreen","formatMessage","getContactsRequestAction","filterContactsAction","addContactRequestAction","filteredContacts","permissionStatus","onSelectContact","contact","UNAVAILABLE","createElement","GRANTED","Fragment","barStyle","backgroundColor","addContactTitle","errorMessage","contactPermissionError","debouncedFilterContacts","filterText","renderItem","itemInfo","person","item","renderEmpty","noMatches","title","keyboardAppearance","placeholder","searchPlaceholder","onChangeText","data","keyboardShouldPersistTaps","keyExtractor","id","ListEmptyComponent","onCancel","back","tintColor","white"],"sources":["index.tsx"],"sourcesContent":["import { colors } from '../../../../../assets';\nimport {\n  ErrorView,\n  Header,\n  LoadingIndicator,\n  SafeAreaContainer,\n  ScreenActionButton,\n} from '../../../../../components';\nimport { AppUserContact } from 'incident-code-core';\nimport debounce from 'lodash/debounce';\nimport React, { FC, useCallback, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { ListRenderItemInfo, StatusBar } from 'react-native';\nimport { RESULTS } from 'react-native-permissions';\nimport { useAction, useSelector } from '../../../../../utils/hooks';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport messages from '../ContactScreen/messages';\nimport {\n  addContactRequest,\n  filterContacts,\n  getContactsRequest,\n} from './actions';\nimport ContactItem from './ContactItem';\nimport {\n  makeSelectFilteredContacts,\n  makeSelectPermissionStatus,\n} from './selectors';\nimport {\n  BackButtonRow,\n  Container,\n  ErrorContainer,\n  ErrorHeader,\n  ErrorText,\n  InputRow,\n  List,\n  NoMatchesContainer,\n  NoMatchesText,\n  TextInput,\n} from './styles';\n\nconst AddContactScreen: FC = () => {\n  const { formatMessage } = useIntl();\n\n  const getContactsRequestAction = useAction(getContactsRequest);\n  const filterContactsAction = useAction(filterContacts);\n  const addContactRequestAction = useAction(addContactRequest);\n\n  const filteredContacts = useSelector(makeSelectFilteredContacts());\n  const permissionStatus = useSelector(makeSelectPermissionStatus());\n\n  useEffect(() => {\n    getContactsRequestAction();\n  }, []);\n\n  const onSelectContact = useCallback((contact: AppUserContact) => {\n    addContactRequestAction(contact);\n  }, []);\n\n  if (permissionStatus === RESULTS.UNAVAILABLE) return <LoadingIndicator />;\n  if (permissionStatus !== RESULTS.GRANTED)\n    return (\n      <>\n        <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n        <SafeAreaContainer>\n          <ErrorContainer>\n            <ErrorHeader>\n              <ErrorText>{formatMessage(messages.addContactTitle)}</ErrorText>\n              <ErrorView\n                errorMessage={formatMessage(messages.contactPermissionError)}\n              />\n            </ErrorHeader>\n          </ErrorContainer>\n        </SafeAreaContainer>\n      </>\n    );\n\n  const debouncedFilterContacts = debounce((filterText: string) => {\n    filterContactsAction(filterText);\n  }, 100);\n\n  const renderItem = (itemInfo: ListRenderItemInfo<AppUserContact>) => (\n    <ContactItem person={itemInfo.item} onSelectContact={onSelectContact} />\n  );\n\n  const renderEmpty = () => (\n    <NoMatchesContainer>\n      <NoMatchesText>{formatMessage(messages.noMatches)}</NoMatchesText>\n    </NoMatchesContainer>\n  );\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <Container>\n          <Header title={formatMessage(messages.addContactTitle)} />\n          <InputRow>\n            <TextInput\n              keyboardAppearance=\"light\"\n              placeholder={formatMessage(messages.searchPlaceholder)}\n              onChangeText={debouncedFilterContacts}\n            />\n          </InputRow>\n          <List\n            data={filteredContacts}\n            keyboardShouldPersistTaps=\"always\"\n            keyExtractor={(item: any) => item?.id || ''}\n            ListEmptyComponent={renderEmpty()}\n            renderItem={renderItem}\n          />\n        </Container>\n        <BackButtonRow>\n          <ScreenActionButton\n            onCancel={NavigatorService.back}\n            tintColor={colors.white}\n          />\n        </BackButtonRow>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default AddContactScreen;\n"],"mappings":"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","ignoreList":[]}