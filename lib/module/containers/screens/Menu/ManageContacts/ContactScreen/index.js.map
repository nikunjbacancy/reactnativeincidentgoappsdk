{"version":3,"names":["Header","LoadingIndicator","SafeAreaContainer","ScreenActionButton","makeSelectAppUserContacts","makeSelectConfigs","Screens","React","useIntl","StatusBar","Toast","useSelector","NavigatorService","ContactItem","messages","NoData","AddContactButtonRow","DescriptionText","InfoRow","InfoText","InfoWarning","List","ContactScreen","formatMessage","contacts","configs","isLoading","goToAddContact","length","contactLimit","navigate","Menu","ManageContact","AddContact","show","footerMax","position","positions","CENTER","renderItem","item","createElement","contact","Fragment","barStyle","backgroundColor","title","info","warning","keyExtractor","_contact$id","id","toString","data","ListEmptyComponent","extraData","onPress","text","addContactTitle","onCancel","back"],"sources":["index.tsx"],"sourcesContent":["import {\n  Header,\n  LoadingIndicator,\n  SafeAreaContainer,\n  ScreenActionButton,\n} from '../../../../../components';\nimport {\n  makeSelectAppUserContacts,\n  makeSelectConfigs,\n} from '../../../../../containers/app/selectors';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport { AppUserContact } from 'incident-code-core';\nimport React, { FC } from 'react';\nimport { useIntl } from 'react-intl';\nimport { ListRenderItemInfo, StatusBar } from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { useSelector } from '../../../../../utils/hooks';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport ContactItem from './ContactItem';\nimport messages from './messages';\nimport NoData from './NoData';\nimport {\n  AddContactButtonRow,\n  DescriptionText,\n  InfoRow,\n  InfoText,\n  InfoWarning,\n  List,\n} from './styles';\n\nconst ContactScreen: FC = () => {\n  const { formatMessage } = useIntl();\n\n  const contacts = useSelector(makeSelectAppUserContacts());\n  const configs = useSelector(makeSelectConfigs());\n\n  const isLoading = false;\n  const goToAddContact = () => {\n    if (contacts.length < configs.contactLimit) {\n      NavigatorService.navigate(Screens.Menu.ManageContact.AddContact);\n    } else {\n      Toast.show(formatMessage(messages.footerMax), {\n        position: Toast.positions.CENTER,\n      });\n    }\n  };\n\n  const renderItem = ({\n    item,\n  }: ListRenderItemInfo<AppUserContact>): React.ReactElement => (\n    <ContactItem contact={item} />\n  );\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <Header title={formatMessage(messages.title)} />\n        <InfoRow>\n          <InfoText>{formatMessage(messages.info)}</InfoText>\n          <InfoWarning>{formatMessage(messages.warning)}</InfoWarning>\n        </InfoRow>\n        {!!contacts.length && (\n          <DescriptionText>{formatMessage(messages.title)}</DescriptionText>\n        )}\n        <List\n          keyExtractor={(contact: any) => contact.id?.toString() || ''}\n          data={contacts}\n          ListEmptyComponent={isLoading ? <LoadingIndicator /> : <NoData />}\n          extraData={contacts}\n          renderItem={renderItem}\n        />\n        <AddContactButtonRow>\n          <ScreenActionButton\n            onPress={goToAddContact}\n            text={formatMessage(messages.addContactTitle)}\n            onCancel={NavigatorService.back}\n          />\n        </AddContactButtonRow>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default ContactScreen;\n"],"mappings":"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","ignoreList":[]}