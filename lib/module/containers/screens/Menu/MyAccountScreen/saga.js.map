{"version":3,"names":["api","updateUserPortrait","delay","call","put","takeLatest","handleError","deletePortraitFailure","deletePortraitSuccess","updateNameFailure","updateNameSuccess","updatePortraitFailure","updatePortraitSuccess","DELETE_PORTRAIT","UPDATE_MY_ACCOUNT_NAME_REQUEST","UPDATE_PORTRAIT_REQUEST","updateName","payload","user","error","updatePortrait","options","getAmazonS3Options","uploadPortrait","CompletePortraitUpload","filePath","amazonOptionsResponse","getAmazonUploadOptions","logger","debug","data","warn","response","completeUpload","Error","deletePortrait","undefined","myAccountScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * MyAccountScreen saga\n *\n */\n\nimport * as api from '../../../../api';\nimport { AxiosResponse } from 'axios';\nimport { updateUserPortrait } from '../../../../containers/app/actions';\nimport {\n  delay,\n  FileUploadOptions,\n  IncidentVideoUploadOptions,\n} from 'incident-code-core';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../utils/error';\n\nimport {\n  deletePortraitFailure,\n  deletePortraitSuccess,\n  updateNameFailure,\n  updateNameSuccess,\n  updatePortraitFailure,\n  updatePortraitSuccess,\n} from './actions';\nimport {\n  DELETE_PORTRAIT,\n  UPDATE_MY_ACCOUNT_NAME_REQUEST,\n  UPDATE_PORTRAIT_REQUEST,\n} from './constants';\nimport {\n  UpdateMyAccountNameRequestAction,\n  UpdatePortraitRequestAction,\n} from './types';\n\nexport function* updateName({ payload }: UpdateMyAccountNameRequestAction) {\n  try {\n    yield call(api.user.updateName, payload);\n    yield put(updateNameSuccess(payload));\n  } catch (error: any) {\n    yield put(updateNameFailure(handleError(error)));\n  }\n}\n\nexport function* updatePortrait({ payload }: UpdatePortraitRequestAction):any {\n  try {\n    const options : any = yield call(getAmazonS3Options, payload);\n    yield call(api.user.uploadPortrait, options);\n    yield call(CompletePortraitUpload, options);\n    yield put(updatePortraitSuccess());\n  } catch (error: any) {\n    yield put(updatePortraitFailure(handleError(error)));\n  }\n}\n\nfunction* getAmazonS3Options(filePath: string) {\n  try {\n    // get amazon S3 authorization\n    const amazonOptionsResponse: AxiosResponse<IncidentVideoUploadOptions> = yield call(\n      api.user.getAmazonUploadOptions,\n      filePath,\n    );\n\n    api.logger.debug('Get S3 options', 'Success', amazonOptionsResponse.data);\n\n    return amazonOptionsResponse.data;\n  } catch (error: any) {\n    api.logger.warn('Get S3 options', 'Failed', error);\n    yield put(updatePortraitFailure(handleError(error)));\n    return;\n  }\n}\n\nfunction* CompletePortraitUpload(options: FileUploadOptions) {\n  try {\n    const response: AxiosResponse<string> = yield call(\n      api.user.completeUpload,\n      options,\n    );\n    if (response.data) {\n      api.logger.debug('ImageUpload', 'Success');\n      yield put(updateUserPortrait(response.data));\n      return;\n    }\n  } catch (error: any) {\n    api.logger.warn('ImageUpload', 'Failed', error);\n  } finally {\n    yield delay(2000);\n  }\n  throw new Error('Upload image to S3 failed');\n}\n\nfunction* deletePortrait() {\n  try {\n    yield call(api.user.deletePortrait);\n    yield put(deletePortraitSuccess());\n    yield put(updateUserPortrait(undefined));\n  } catch (error: any) {\n    yield put(deletePortraitFailure(handleError(error)));\n  }\n}\n\nexport default function* myAccountScreenSaga() {\n  yield takeLatest(UPDATE_MY_ACCOUNT_NAME_REQUEST, updateName);\n  yield takeLatest(UPDATE_PORTRAIT_REQUEST, updatePortrait);\n  yield takeLatest(DELETE_PORTRAIT, deletePortrait);\n}\n"],"mappings":"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","ignoreList":[]}