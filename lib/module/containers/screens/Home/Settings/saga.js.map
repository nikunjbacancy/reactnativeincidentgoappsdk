{"version":3,"names":["api","call","put","takeLatest","select","handleError","AsyncStorage","SET_BEACON_DETAILS","makeSelectUser","beaconRegistrationFailure","beaconRegistrationSuccess","BEACON_REGISTRATION_REQUEST","Toast","NativeModules","registerBeacon","payload","user","Object","assign","id","response","beacon","beaconConnect","data","flag","setItem","JSON","stringify","Bluetooth","startBLEService","address","show","message","position","positions","BOTTOM","error","updateSettingScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * UpdateNameScreen saga\n *\n */\n\nimport * as api from '../../../../api';\nimport { call, put, takeLatest, select } from 'redux-saga/effects';\nimport { handleError } from '../../../../utils/error';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { SET_BEACON_DETAILS } from '../../../../containers/screens/Home/Settings/constants';\nimport { makeSelectUser } from '../../../../containers/app/selectors';\nimport {\n  beaconRegistrationFailure,\n  beaconRegistrationSuccess,\n} from './actions';\nimport { BEACON_REGISTRATION_REQUEST } from './constants';\nimport { BeaconRegistrationRequestAction } from './types';\nimport Toast from 'react-native-root-toast';\nimport { NativeModules } from 'react-native';\nimport { AppUser } from 'incident-code-core';\n\nexport function* registerBeacon({ payload }: BeaconRegistrationRequestAction): any {\n  try {\n    const user: AppUser = yield select(makeSelectUser());\n    Object.assign(payload, { user: user.id });\n    const response = yield call(api.beacon.beaconConnect, payload);\n\n    switch (response.data.flag) {\n      case true:\n        yield call(AsyncStorage.setItem, SET_BEACON_DETAILS, JSON.stringify(payload));\n        NativeModules.Bluetooth.startBLEService(payload?.address);\n        break;\n      case false:\n        Toast.show(response.data.message, { position: Toast.positions.BOTTOM });\n        break;\n    }\n    yield put(beaconRegistrationSuccess(response.data));\n  } catch (error: any) {\n    yield put(beaconRegistrationFailure(handleError(error)));\n  }\n}\n\nexport default function* updateSettingScreenSaga() {\n  yield takeLatest(BEACON_REGISTRATION_REQUEST, registerBeacon);\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,GAAG,MAAM,iBAAiB;AACtC,SAASC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AAClE,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,kBAAkB,QAAQ,wDAAwD;AAC3F,SAASC,cAAc,QAAQ,sCAAsC;AACrE,SACEC,yBAAyB,EACzBC,yBAAyB,QACpB,WAAW;AAClB,SAASC,2BAA2B,QAAQ,aAAa;AAEzD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,SAASC,aAAa,QAAQ,cAAc;AAG5C,OAAO,UAAUC,cAAcA,CAAC;EAAEC;AAAyC,CAAC,EAAO;EACjF,IAAI;IACF,MAAMC,IAAa,GAAG,MAAMZ,MAAM,CAACI,cAAc,CAAC,CAAC,CAAC;IACpDS,MAAM,CAACC,MAAM,CAACH,OAAO,EAAE;MAAEC,IAAI,EAAEA,IAAI,CAACG;IAAG,CAAC,CAAC;IACzC,MAAMC,QAAQ,GAAG,MAAMnB,IAAI,CAACD,GAAG,CAACqB,MAAM,CAACC,aAAa,EAAEP,OAAO,CAAC;IAE9D,QAAQK,QAAQ,CAACG,IAAI,CAACC,IAAI;MACxB,KAAK,IAAI;QACP,MAAMvB,IAAI,CAACK,YAAY,CAACmB,OAAO,EAAElB,kBAAkB,EAAEmB,IAAI,CAACC,SAAS,CAACZ,OAAO,CAAC,CAAC;QAC7EF,aAAa,CAACe,SAAS,CAACC,eAAe,CAACd,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEe,OAAO,CAAC;QACzD;MACF,KAAK,KAAK;QACRlB,KAAK,CAACmB,IAAI,CAACX,QAAQ,CAACG,IAAI,CAACS,OAAO,EAAE;UAAEC,QAAQ,EAAErB,KAAK,CAACsB,SAAS,CAACC;QAAO,CAAC,CAAC;QACvE;IACJ;IACA,MAAMjC,GAAG,CAACQ,yBAAyB,CAACU,QAAQ,CAACG,IAAI,CAAC,CAAC;EACrD,CAAC,CAAC,OAAOa,KAAU,EAAE;IACnB,MAAMlC,GAAG,CAACO,yBAAyB,CAACJ,WAAW,CAAC+B,KAAK,CAAC,CAAC,CAAC;EAC1D;AACF;AAEA,eAAe,UAAUC,uBAAuBA,CAAA,EAAG;EACjD,MAAMlC,UAAU,CAACQ,2BAA2B,EAAEG,cAAc,CAAC;AAC/D","ignoreList":[]}