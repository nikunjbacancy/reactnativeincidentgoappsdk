{"version":3,"names":["Header","SafeAreaContainer","ScreenActionButton","React","useEffect","useIntl","colors","StatusBar","messages","InfoRow","Background","Step1","Step1_Desc","Tutorial","ViewTutorial","Timing","ViewStep2","Loader","ViewStep22","BackButtonRow","NavigatorService","Screens","AppEvent","event","getLocationActionPermissions","requestActivityRecognitionPermission","SettingScreen","formatMessage","on","OnBatteryLevelReceived","onBatteryLevelReceived","batteryLevel","createElement","Fragment","barStyle","backgroundColor","title","step1","step1_desc","timing","step2","onCancel","navigate","Home","Escort","EscortType","tintColor","white"],"sources":["index.tsx"],"sourcesContent":["import {\n    Header,\n    SafeAreaContainer,\n    ScreenActionButton,\n} from '../../../../components';\n\nimport React, { FC, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { colors } from '../../../../assets';\nimport { StatusBar } from 'react-native';\n// import Toast from 'react-native-root-toast';\nimport messages from './messages';\nimport {\n    InfoRow, Background, Step1, Step1_Desc, Tutorial,\n    ViewTutorial, Timing, ViewStep2, Loader, ViewStep22, BackButtonRow\n} from './styles';\n// import { beaconRegistrationRequest } from './actions';\n// import { useAction } from '../../../../utils/hooks';\n// import { SET_BEACON_DETAILS } from '../../../../containers/screens/Home/Settings/constants';\n// import NetInfo from \"@react-native-community/netinfo\";\nimport NavigatorService from '../../../../utils/navigation';\nimport Screens from '../../../../containers/providers/RoutesProvider/screens';\n// import { checkBluetoothStatus, setUpBeaconInfo } from '../../../../utils/beacon';\nimport { AppEvent, event } from '../../../../api';\nimport { getLocationActionPermissions, requestActivityRecognitionPermission } from '../../../../utils/permission';\n\nconst SettingScreen: FC = () => {\n    const { formatMessage } = useIntl();\n    // const beaconRegistration = useAction(beaconRegistrationRequest);\n    // const [beaconDetails, setBeaconDetails] = useState({});\n    // const [isBeaconConnected, setIsBeaconConnected] = useState(false);\n    // const [batteryLevel, setBatteryLevel] = useState(\"\");\n\n    useEffect(() => {\n        requestActivityRecognitionPermission();\n        getLocationActionPermissions();\n        // connectToBeacon();\n        // event.on(AppEvent.OnBeaconConnection, OnBeaconConnection);\n        event.on(AppEvent.OnBatteryLevelReceived, onBatteryLevelReceived);\n    }, []);\n\n    // const OnBeaconConnection = (connectivity: boolean) => {\n    //     setIsBeaconConnected(connectivity);\n    //     if (!connectivity) {\n    //         setBatteryLevel(\"\");\n    //     }\n    // }\n\n    const onBatteryLevelReceived = (batteryLevel: string) => {\n        if (batteryLevel != \"0\") {\n            // setBatteryLevel(batteryLevel);\n        }\n    }\n\n    // const connectToBeacon = async () => {\n    //     const isEnabled = await checkBluetoothStatus();\n    //     if (isEnabled) {\n    //         AsyncStorage.getItem(SET_BEACON_DETAILS).then(async (beacons) => {\n    //             if (beacons) {\n    //                 setBeaconDetails(JSON.parse(beacons));\n    //             }\n    //             else {\n    //                 const beaconInfo = await setUpBeaconInfo();\n    //                 setBeaconDetails(beaconInfo);\n    //             }\n    //         });\n    //     }\n    // };\n\n    // const registerBeacon = async () => {\n    //     NetInfo.fetch().then(async state => {\n    //         switch (state.isConnected) {\n    //             case true:\n    //                 if (!isBeaconConnected) {\n    //                     // beaconRegistration(beaconDetails);\n    //                 }\n    //                 break;\n    //             case false:\n    //                 Toast.show(\"Please check your internet connection.\", { position: Toast.positions.BOTTOM })\n    //                 break;\n    //         }\n    //     });\n    // }\n\n    return (\n        <>\n            <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n            <SafeAreaContainer>\n                <Header title={formatMessage(messages.title)} />\n                <InfoRow>\n                    <Background>\n                        <Step1>{formatMessage(messages.step1)}</Step1>\n                        <Step1_Desc>{formatMessage(messages.step1_desc)}</Step1_Desc>\n                        <ViewTutorial>\n                            <Tutorial />\n                            <Timing>{formatMessage(messages.timing)}</Timing>\n                        </ViewTutorial>\n                    </Background>\n\n                    <Background>\n                        <ViewStep2>\n                            <Step1>{formatMessage(messages.step2)}</Step1>\n                            {\n                                // Object.keys(beaconDetails).length != 0 ? <ViewStep22 /> : <Loader /> \n                                <Loader />\n                            }\n                        </ViewStep2>\n\n                        {\n                            // Object.keys(beaconDetails).length != 0 ? <ViewStep2>\n                            //     <Container>\n                            //         <PlusImage />\n                            //         {\n                            //             batteryLevel != \"\" ? <ViewStep21>\n                            //                 {/* <DeviceDetail>{beaconDetails?.name}</DeviceDetail> */}\n                            //                 <BatteryLevel>{formatMessage(messages.batteryLevel) + \": \" + batteryLevel + \"%\"}</BatteryLevel>\n                            //             </ViewStep21>\n                            //                 : <ViewStep21>\n                            //                     {/* <DeviceDetail>{beaconDetails?.name}</DeviceDetail> */}\n                            //                 </ViewStep21>\n                            //         }\n                            //     </Container>\n                            //     {/* {isBeaconConnected ? <Bullet>{formatMessage(messages.bullet)}</Bullet> :\n                            //         <Bullet_Red>{formatMessage(messages.bullet)}</Bullet_Red>} */}\n                            // </ViewStep2>\n                            //     : <ViewStep22 />\n                            <ViewStep22 />\n                        }\n                    </Background>\n                </InfoRow>\n\n                <BackButtonRow>\n                    <ScreenActionButton\n                        onCancel={() =>\n                            NavigatorService.navigate(Screens.Home.Escort.EscortType)\n                        }\n                        tintColor={colors.white}\n                    />\n                </BackButtonRow>\n            </SafeAreaContainer>\n        </>\n    );\n};\n\nexport default SettingScreen;\n"],"mappings":"AAAA,SACIA,MAAM,EACNC,iBAAiB,EACjBC,kBAAkB,QACf,wBAAwB;AAE/B,OAAOC,KAAK,IAAQC,SAAS,QAAQ,OAAO;AAC5C,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,SAAS,QAAQ,cAAc;AACxC;AACA,OAAOC,QAAQ,MAAM,YAAY;AACjC,SACIC,OAAO,EAAEC,UAAU,EAAEC,KAAK,EAAEC,UAAU,EAAEC,QAAQ,EAChDC,YAAY,EAAEC,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,QAC/D,UAAU;AACjB;AACA;AACA;AACA;AACA,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,OAAO,MAAM,yDAAyD;AAC7E;AACA,SAASC,QAAQ,EAAEC,KAAK,QAAQ,iBAAiB;AACjD,SAASC,4BAA4B,EAAEC,oCAAoC,QAAQ,8BAA8B;AAEjH,MAAMC,aAAiB,GAAGA,CAAA,KAAM;EAC5B,MAAM;IAAEC;EAAc,CAAC,GAAGtB,OAAO,CAAC,CAAC;EACnC;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACZqB,oCAAoC,CAAC,CAAC;IACtCD,4BAA4B,CAAC,CAAC;IAC9B;IACA;IACAD,KAAK,CAACK,EAAE,CAACN,QAAQ,CAACO,sBAAsB,EAAEC,sBAAsB,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMA,sBAAsB,GAAIC,YAAoB,IAAK;IACrD,IAAIA,YAAY,IAAI,GAAG,EAAE;MACrB;IAAA;EAER,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI5B,KAAA,CAAA6B,aAAA,CAAA7B,KAAA,CAAA8B,QAAA,qBACI9B,KAAA,CAAA6B,aAAA,CAACzB,SAAS;IAAC2B,QAAQ,EAAC,cAAc;IAACC,eAAe,EAAC;EAAO,CAAE,CAAC,eAC7DhC,KAAA,CAAA6B,aAAA,CAAC/B,iBAAiB,qBACdE,KAAA,CAAA6B,aAAA,CAAChC,MAAM;IAACoC,KAAK,EAAET,aAAa,CAACnB,QAAQ,CAAC4B,KAAK;EAAE,CAAE,CAAC,eAChDjC,KAAA,CAAA6B,aAAA,CAACvB,OAAO,qBACJN,KAAA,CAAA6B,aAAA,CAACtB,UAAU,qBACPP,KAAA,CAAA6B,aAAA,CAACrB,KAAK,QAAEgB,aAAa,CAACnB,QAAQ,CAAC6B,KAAK,CAAS,CAAC,eAC9ClC,KAAA,CAAA6B,aAAA,CAACpB,UAAU,QAAEe,aAAa,CAACnB,QAAQ,CAAC8B,UAAU,CAAc,CAAC,eAC7DnC,KAAA,CAAA6B,aAAA,CAAClB,YAAY,qBACTX,KAAA,CAAA6B,aAAA,CAACnB,QAAQ,MAAE,CAAC,eACZV,KAAA,CAAA6B,aAAA,CAACjB,MAAM,QAAEY,aAAa,CAACnB,QAAQ,CAAC+B,MAAM,CAAU,CACtC,CACN,CAAC,eAEbpC,KAAA,CAAA6B,aAAA,CAACtB,UAAU,qBACPP,KAAA,CAAA6B,aAAA,CAAChB,SAAS,qBACNb,KAAA,CAAA6B,aAAA,CAACrB,KAAK,QAAEgB,aAAa,CAACnB,QAAQ,CAACgC,KAAK,CAAS,CAAC;EAAA;EAE1C;EACArC,KAAA,CAAA6B,aAAA,CAACf,MAAM,MAAE,CAEN,CAAC;EAAA;EAGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAd,KAAA,CAAA6B,aAAA,CAACd,UAAU,MAAE,CAET,CACP,CAAC,eAEVf,KAAA,CAAA6B,aAAA,CAACb,aAAa,qBACVhB,KAAA,CAAA6B,aAAA,CAAC9B,kBAAkB;IACfuC,QAAQ,EAAEA,CAAA,KACNrB,gBAAgB,CAACsB,QAAQ,CAACrB,OAAO,CAACsB,IAAI,CAACC,MAAM,CAACC,UAAU,CAC3D;IACDC,SAAS,EAAExC,MAAM,CAACyC;EAAM,CAC3B,CACU,CACA,CACrB,CAAC;AAEX,CAAC;AAED,eAAerB,aAAa","ignoreList":[]}