{"version":3,"names":["GradientButton","Header","HorizontalRule","LoadingIndicator","SafeAreaContainer","SiteKeyModal","images","colors","MenuOption","MenuOptions","MenuTrigger","Screens","React","useEffect","useState","useIntl","StatusBar","TouchableHighlight","View","openSettings","withNavigationFocus","isAndroid","useAction","useSelector","NavigatorService","requestCameraPermissions","AntDesign","MaterialCommunityIcons","Octicons","MaterialIcons","AppEvent","event","CancelEscortModal","makeSelectShouldShowCancelEscortModal","toggleEscortType","showSiteKeyModal","hideSiteKeyModal","makeSelectShouldShowSiteKeyModal","messages","Container","BlockedPermissionContainer","BlockedPermissionMessage","ButtonRow","InfoText","UserView","UserName","Title","MenuContainer","HamburgerMenu","MenuOptionInner","MenuOptionText","MenuOptionIcon","EscortType","makeSelectUser","sdkConfigs","notificationListRequest","PermissionStatus","EscortTypeScreen","isFocused","formatMessage","userDetails","organizationUserConfig","organizationGroups","userConfig","permissionStatus","setPermissionStatus","Checking","shouldShowSiteKeyModal","getNotificationAction","unreadNotyCount","state","notificationListState","unreadCount","showSiteKeyModalAction","hideSiteKeyModalAction","gotoLiveEscortAction","navigate","Home","Escort","SelectOrganization","gotoTimedEscortAction","TimedEscort","gotoSafetyEscortAction","safetyTimer","gotoNewTipAction","NewTip","VideoRecord","gotoNotifications","Menu","NotificationList","shouldShowCancelEscortModal","toggleEscortTypeAction","tryRequestCameraPermissions","then","Granted","catch","Blocked","getNotifications","on","OnRefreshNotificationList","id","handlePress","escortType","Timed","Live","Safety","Notification","SiteKey","isServiceEnabled","liveSecurityEscort","timedChecklist","securityTips","createElement","showsVerticalScrollIndicator","yourServices","showSiteKey","showSafetyTimer","showLiveSecurityEscort","TimeCheckList","showSecurityTips","showNotifications","onPress","name","size","color","safetyEscortButton","liveEscortButton","timedEscortButton","newTip","notifications","style","width","height","borderRadius","backgroundColor","siteKey","setUpBeaconOption","render","message","checkingPermissions","permissionsBlockedMessage","text","tryAgain","Fragment","barStyle","title","sdkName","incidentCo","firstName","lastName","source","icMenu","customStyles","optionsStyles","onSelect","MyAccount","myAccount","icFoward","settings","Feedback","AddFeedback","feedbacks","Tips","MyTips","Index","mytips","ManageContact","ListContacts","contacts","isVisible","console","log","userData","hideModal","isFromNotification","notification_id","optionsContainer","nearWhite","flexDirection","borderTopLeftRadius","optionWrapper","padding","margin","optionTouchable","activeOpacity","OptionTouchableComponent"],"sources":["index.tsx"],"sourcesContent":["import {\n  GradientButton,\n  Header,\n  HorizontalRule,\n  LoadingIndicator,\n  SafeAreaContainer,\n  SiteKeyModal\n} from '../../../../../components';\nimport { images } from '../../../../../assets';\nimport colors from '../../../../../assets/colors';\nimport {\n  MenuOption,\n  MenuOptionCustomStyle,\n  MenuOptions,\n  MenuTrigger,\n} from 'react-native-popup-menu';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { StatusBar, StyleProp, ViewStyle, TouchableHighlight, View } from 'react-native';\nimport { openSettings } from 'react-native-permissions';\nimport { ScreenProps } from 'react-native-screens';\nimport { withNavigationFocus } from 'react-navigation';\nimport { NavigationStackScreenProps } from 'react-navigation-stack';\nimport { isAndroid } from '../../../../../utils/device';\nimport { useAction, useSelector } from '../../../../../utils/hooks';\nimport NavigatorService from '../../../../../utils/navigation';\nimport { requestCameraPermissions } from '../../../../../utils/permission';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Octicons from 'react-native-vector-icons/Octicons';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport { AppEvent, event } from '../../../../../api';\n\nimport CancelEscortModal from '../RequestScreen/CancelEscortModal';\nimport { makeSelectShouldShowCancelEscortModal } from '../RequestScreen/selectors';\nimport { toggleEscortType,showSiteKeyModal, hideSiteKeyModal } from './actions';\nimport { makeSelectShouldShowSiteKeyModal } from './selectors';\n\nimport messages from './messages';\nimport {\n  Container,\n  BlockedPermissionContainer,\n  BlockedPermissionMessage,\n  ButtonRow,\n  InfoText,\n  UserView,\n  UserName, Title,\n  MenuContainer, HamburgerMenu, MenuOptionInner, MenuOptionText, MenuOptionIcon\n} from './styles';\nimport { EscortType } from './types';\nimport { makeSelectUser } from '../../../../../containers/app/selectors';\nimport { sdkConfigs } from '../../../../../sdkConfigs'\n\nimport {\n  notificationListRequest,\n} from '../../../Menu/NotificationListScreen/actions';\n\nenum PermissionStatus {\n  Checking,\n  Granted,\n  Blocked,\n}\n\ninterface Params { }\n\ninterface Props extends NavigationStackScreenProps<Params, ScreenProps> {\n  isFocused: boolean;\n}\n\ninterface MenuOptionsStyleProps extends MenuOptionCustomStyle {\n  optionsContainer?: StyleProp<ViewStyle>;\n  OptionTouchableComponent: typeof TouchableHighlight;\n}\n\nconst EscortTypeScreen: FC<Props> = ({ isFocused }) => {\n\n  const { formatMessage } = useIntl();\n  const userDetails = useSelector(makeSelectUser());\n  const organizationUserConfig = userDetails.organizationGroups[0].userConfig;\n  const [permissionStatus, setPermissionStatus] = useState(\n    PermissionStatus.Checking,\n  );\n  const shouldShowSiteKeyModal = useSelector(makeSelectShouldShowSiteKeyModal());\n  const getNotificationAction = useAction(notificationListRequest);\n  const unreadNotyCount = useSelector((state) => { return state.notificationListState.unreadCount });\n  const showSiteKeyModalAction = useAction(showSiteKeyModal);\n  const hideSiteKeyModalAction = useAction(hideSiteKeyModal);\n\n\n  const gotoLiveEscortAction = () => {\n    NavigatorService.navigate(Screens.Home.Escort.SelectOrganization);\n  };\n\n  const gotoTimedEscortAction = () => {\n    NavigatorService.navigate(Screens.Home.Escort.TimedEscort);\n  };\n\n  const gotoSafetyEscortAction = () => {\n    NavigatorService.navigate(Screens.Home.Escort.TimedEscort, {\n      safetyTimer: true,\n    });\n  };\n\n  const gotoNewTipAction = () => {\n    NavigatorService.navigate(Screens.Home.NewTip.VideoRecord);\n  }\n\n  const gotoNotifications = () => {\n    NavigatorService.navigate(Screens.Menu.NotificationList)\n  }\n\n\n  // necessary to have modal be available from any screen for canceling\n  const shouldShowCancelEscortModal = useSelector(\n    makeSelectShouldShowCancelEscortModal(),\n  );\n  const toggleEscortTypeAction = useAction(toggleEscortType);\n\n  const tryRequestCameraPermissions = () => {\n    requestCameraPermissions()\n      .then(() => {\n        setPermissionStatus(PermissionStatus.Granted);\n      })\n      .catch(() => {\n        setPermissionStatus(PermissionStatus.Blocked);\n      });\n  };\n\n\n  useEffect(() => {\n    getNotifications()\n    event.on(AppEvent.OnRefreshNotificationList, getNotifications);\n\n  }, []);\n\n  const getNotifications = () => {\n    getNotificationAction(userDetails.id);\n  }\n\n  useEffect(() => {\n    if (isFocused) {\n      tryRequestCameraPermissions();\n    }\n  }, [isFocused]);\n\n\n  const handlePress = (escortType: EscortType) => {\n    toggleEscortTypeAction(escortType);\n    switch (escortType) {\n      case EscortType.Timed:\n        gotoTimedEscortAction();\n        break;\n      case EscortType.Live:\n        gotoLiveEscortAction();\n        break;\n      case EscortType.Safety:\n        gotoSafetyEscortAction();\n        break;\n      case EscortType.NewTip:\n        gotoNewTipAction();\n        break;\n      case EscortType.Notification:\n        gotoNotifications();\n        break;\n      case EscortType.SiteKey:\n        showSiteKeyModalAction();\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isServiceEnabled = () => {\n    if (organizationUserConfig.safetyTimer === true ||\n      organizationUserConfig.liveSecurityEscort === true ||\n      organizationUserConfig.timedChecklist === true ||\n      organizationUserConfig.securityTips == true) {\n      return <Container showsVerticalScrollIndicator={false}>\n        <InfoText>{formatMessage(messages.yourServices)}</InfoText>\n        {showSiteKey()}\n        {showSafetyTimer()}\n        {showLiveSecurityEscort()}\n        {TimeCheckList()}\n        {showSecurityTips()}\n        {showNotifications()}\n      </Container>\n    }\n    else {\n      return <Container showsVerticalScrollIndicator={false}>\n        <InfoText>{formatMessage(messages.yourServices)}</InfoText>\n        {showSiteKey()}\n        {showNotifications()}\n      </Container>\n    }\n  }\n\n  const showSafetyTimer = () => {\n    if (organizationUserConfig.safetyTimer == true) {\n      return <ButtonRow onPress={() => handlePress(EscortType.Safety)}>\n        <AntDesign name=\"Safety\" size={30} color=\"#000000\" />\n        <Title>{formatMessage(messages.safetyEscortButton)} </Title>\n      </ButtonRow>\n    }\n  }\n\n  const showLiveSecurityEscort = () => {\n    if (organizationUserConfig.liveSecurityEscort == true) {\n      return <ButtonRow onPress={() => handlePress(EscortType.Live)}>\n        <MaterialCommunityIcons name=\"shield-lock-outline\" size={30} color=\"#000000\" />\n        <Title>{formatMessage(messages.liveEscortButton)}</Title>\n      </ButtonRow>\n    }else {return null}\n  }\n\n  const TimeCheckList = () => {\n    if (organizationUserConfig.timedChecklist == true) {\n      return <ButtonRow onPress={() => handlePress(EscortType.Timed)}>\n        <Octicons name=\"checklist\" size={30} color=\"#000000\" />\n        <Title>{formatMessage(messages.timedEscortButton)}</Title>\n      </ButtonRow>\n    }else {return null}\n  }\n\n  const showSecurityTips = () => {\n    if (organizationUserConfig.securityTips == true) {\n      return <ButtonRow onPress={() => handlePress(EscortType.NewTip)}>\n        <MaterialIcons name=\"privacy-tip\" size={30} color=\"#000000\" />\n        <Title>{formatMessage(messages.newTip)}</Title>\n      </ButtonRow>\n    }else {return null}\n  }\n\n  const showNotifications = () => {\n    return <ButtonRow onPress={() => handlePress(EscortType.Notification)}>\n      <MaterialIcons name=\"notifications-active\" size={30} color=\"#000000\" />\n      <Title>{formatMessage(messages.notifications)} {unreadNotyCount > 0 &&\n        (<View style={{ width: 10, height: 10, borderRadius: 5, backgroundColor: 'red' }} />)}\n      </Title>\n    </ButtonRow>\n  }\n\n  const showSiteKey = () => {\n    return <ButtonRow onPress={() => showSiteKeyModalAction()}>\n      <MaterialCommunityIcons name=\"cellphone-key\" size={30} color=\"#000000\" />\n      <Title>{formatMessage(messages.siteKey)}</Title>\n    </ButtonRow>\n  }\n\n  const setUpBeaconOption = () => {\n    // if (isAndroid) {\n    //   return (\n    //     <MenuOption onSelect={() =>\n    //       NavigatorService.navigate(Screens.Menu.Beacons)\n    //     }>\n    //       <MenuOptionInner>\n    //         <MenuOptionText>\n    //           {formatMessage(messages.beacons)}\n    //         </MenuOptionText>\n    //         <MenuOptionIcon source={images.icFoward()} />\n    //       </MenuOptionInner>\n    //     </MenuOption>\n    //   )\n    // }\n  }\n\n  const render = () => {\n    if (permissionStatus === PermissionStatus.Checking) {\n      return (\n        <LoadingIndicator\n          message={formatMessage(messages.checkingPermissions)}\n        />\n      );\n    }\n\n    if (permissionStatus === PermissionStatus.Blocked) {\n      return (\n        <BlockedPermissionContainer>\n          <BlockedPermissionMessage>\n            {formatMessage(messages.permissionsBlockedMessage)}\n          </BlockedPermissionMessage>\n          <GradientButton\n            text={\n              isAndroid\n                ? formatMessage(messages.tryAgain)\n                : formatMessage(messages.openSettings)\n            }\n            onPress={isAndroid ? tryRequestCameraPermissions : openSettings}\n          />\n        </BlockedPermissionContainer>\n      );\n    }\n\n    if (permissionStatus === PermissionStatus.Granted) {\n      return (\n        <>\n          <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n          <SafeAreaContainer>\n          <Header title={sdkConfigs.sdkName === '' ? formatMessage(messages.incidentCo) : sdkConfigs.sdkName} />\n            <HorizontalRule />\n\n            <UserView>\n              <UserName>Hi {userDetails.firstName} {userDetails.lastName},</UserName>\n              <MenuContainer>\n                <MenuTrigger>\n                  <HamburgerMenu source={images.icMenu()} />\n                </MenuTrigger>\n                <MenuOptions customStyles={optionsStyles}>\n                  {setUpBeaconOption()}\n\n                  <MenuOption\n                    onSelect={() =>\n                      NavigatorService.navigate(Screens.Menu.MyAccount)\n                    }\n                  >\n                    <MenuOptionInner>\n                      <MenuOptionText>\n                        {formatMessage(messages.myAccount)}\n                      </MenuOptionText>\n                      <MenuOptionIcon source={images.icFoward()} />\n                    </MenuOptionInner>\n                  </MenuOption>\n                  <MenuOption\n                    onSelect={() =>\n                      NavigatorService.navigate(Screens.Menu.Notification)\n                    }\n                  >\n                    <MenuOptionInner>\n                      <MenuOptionText>\n                        {formatMessage(messages.settings)}\n                      </MenuOptionText>\n                      <MenuOptionIcon source={images.icFoward()} />\n                    </MenuOptionInner>\n                  </MenuOption>\n\n                  <MenuOption\n                    onSelect={() =>\n                      NavigatorService.navigate(Screens.Menu.Feedback.AddFeedback)\n                    }\n                  >\n                    <MenuOptionInner>\n                      <MenuOptionText>\n                        {formatMessage(messages.feedbacks)}\n                      </MenuOptionText>\n                      <MenuOptionIcon source={images.icFoward()} />\n                    </MenuOptionInner>\n                  </MenuOption>\n\n                  <MenuOption\n                    onSelect={() =>\n                      NavigatorService.navigate(Screens.Menu.Tips.MyTips.Index)\n                    }\n                  >\n                    <MenuOptionInner>\n                      <MenuOptionText>\n                        {formatMessage(messages.mytips)}\n                      </MenuOptionText>\n                      <MenuOptionIcon source={images.icFoward()} />\n                    </MenuOptionInner>\n                  </MenuOption>\n\n                  <MenuOption\n                    onSelect={() =>\n                      NavigatorService.navigate(\n                        Screens.Menu.ManageContact.ListContacts,\n                      )\n                    }\n                  >\n                    <MenuOptionInner>\n                      <MenuOptionText>\n                        {formatMessage(messages.contacts)}\n                      </MenuOptionText>\n                      <MenuOptionIcon source={images.icFoward()} />\n                    </MenuOptionInner>\n                  </MenuOption>\n                </MenuOptions>\n              </MenuContainer>\n            </UserView>\n\n            {isServiceEnabled()}\n            <CancelEscortModal isVisible={shouldShowCancelEscortModal} />\n            {console.log(\"shouldShowSiteKeyModal===>\",shouldShowSiteKeyModal)}\n            <SiteKeyModal\n              isVisible={shouldShowSiteKeyModal}\n              userData={userDetails}\n              hideModal={hideSiteKeyModalAction}\n              isFromNotification={false}\n              notification_id={0}\n            />\n          </SafeAreaContainer >\n        </>\n      );\n    }\n  };\n  return isFocused ? render() : null;\n};\n\nconst optionsStyles: MenuOptionsStyleProps = {\n  optionsContainer: {\n    backgroundColor: colors.nearWhite,\n    width: 'auto',\n    flexDirection: 'row-reverse',\n    borderTopLeftRadius: 15,\n  },\n  optionWrapper: {\n    width: 270,\n    padding: 0,\n    margin: 0,\n  },\n  optionTouchable: {\n    activeOpacity: 70,\n  },\n  OptionTouchableComponent: TouchableHighlight,\n};\n\nexport default withNavigationFocus(EscortTypeScreen);"],"mappings":"AAAA,SACEA,cAAc,EACdC,MAAM,EACNC,cAAc,EACdC,gBAAgB,EAChBC,iBAAiB,EACjBC,YAAY,QACP,2BAA2B;AAClC,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,OAAOC,MAAM,MAAM,8BAA8B;AACjD,SACEC,UAAU,EAEVC,WAAW,EACXC,WAAW,QACN,yBAAyB;AAChC,OAAOC,OAAO,MAAM,4DAA4D;AAChF,OAAOC,KAAK,IAAQC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,SAAS,EAAwBC,kBAAkB,EAAEC,IAAI,QAAQ,cAAc;AACxF,SAASC,YAAY,QAAQ,0BAA0B;AAEvD,SAASC,mBAAmB,QAAQ,kBAAkB;AAEtD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,SAAS,EAAEC,WAAW,QAAQ,4BAA4B;AACnE,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,SAASC,wBAAwB,QAAQ,iCAAiC;AAC1E,OAAOC,SAAS,MAAM,qCAAqC;AAC3D,OAAOC,sBAAsB,MAAM,kDAAkD;AACrF,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,aAAa,MAAM,yCAAyC;AACnE,SAASC,QAAQ,EAAEC,KAAK,QAAQ,oBAAoB;AAEpD,OAAOC,iBAAiB,MAAM,oCAAoC;AAClE,SAASC,qCAAqC,QAAQ,4BAA4B;AAClF,SAASC,gBAAgB,EAACC,gBAAgB,EAAEC,gBAAgB,QAAQ,WAAW;AAC/E,SAASC,gCAAgC,QAAQ,aAAa;AAE9D,OAAOC,QAAQ,MAAM,YAAY;AACjC,SACEC,SAAS,EACTC,0BAA0B,EAC1BC,wBAAwB,EACxBC,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EAAEC,KAAK,EACfC,aAAa,EAAEC,aAAa,EAAEC,eAAe,EAAEC,cAAc,EAAEC,cAAc,QACxE,UAAU;AACjB,SAASC,UAAU,QAAQ,SAAS;AACpC,SAASC,cAAc,QAAQ,yCAAyC;AACxE,SAASC,UAAU,QAAQ,2BAA2B;AAEtD,SACEC,uBAAuB,QAClB,8CAA8C;AAAC,IAEjDC,gBAAgB,0BAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA,EAAhBA,gBAAgB;AAiBrB,MAAMC,gBAA2B,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAErD,MAAM;IAAEC;EAAc,CAAC,GAAG5C,OAAO,CAAC,CAAC;EACnC,MAAM6C,WAAW,GAAGrC,WAAW,CAAC8B,cAAc,CAAC,CAAC,CAAC;EACjD,MAAMQ,sBAAsB,GAAGD,WAAW,CAACE,kBAAkB,CAAC,CAAC,CAAC,CAACC,UAAU;EAC3E,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnD,QAAQ,CACtD0C,gBAAgB,CAACU,QACnB,CAAC;EACD,MAAMC,sBAAsB,GAAG5C,WAAW,CAACc,gCAAgC,CAAC,CAAC,CAAC;EAC9E,MAAM+B,qBAAqB,GAAG9C,SAAS,CAACiC,uBAAuB,CAAC;EAChE,MAAMc,eAAe,GAAG9C,WAAW,CAAE+C,KAAK,IAAK;IAAE,OAAOA,KAAK,CAACC,qBAAqB,CAACC,WAAW;EAAC,CAAC,CAAC;EAClG,MAAMC,sBAAsB,GAAGnD,SAAS,CAACa,gBAAgB,CAAC;EAC1D,MAAMuC,sBAAsB,GAAGpD,SAAS,CAACc,gBAAgB,CAAC;EAG1D,MAAMuC,oBAAoB,GAAGA,CAAA,KAAM;IACjCnD,gBAAgB,CAACoD,QAAQ,CAACjE,OAAO,CAACkE,IAAI,CAACC,MAAM,CAACC,kBAAkB,CAAC;EACnE,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClCxD,gBAAgB,CAACoD,QAAQ,CAACjE,OAAO,CAACkE,IAAI,CAACC,MAAM,CAACG,WAAW,CAAC;EAC5D,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnC1D,gBAAgB,CAACoD,QAAQ,CAACjE,OAAO,CAACkE,IAAI,CAACC,MAAM,CAACG,WAAW,EAAE;MACzDE,WAAW,EAAE;IACf,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B5D,gBAAgB,CAACoD,QAAQ,CAACjE,OAAO,CAACkE,IAAI,CAACQ,MAAM,CAACC,WAAW,CAAC;EAC5D,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B/D,gBAAgB,CAACoD,QAAQ,CAACjE,OAAO,CAAC6E,IAAI,CAACC,gBAAgB,CAAC;EAC1D,CAAC;;EAGD;EACA,MAAMC,2BAA2B,GAAGnE,WAAW,CAC7CU,qCAAqC,CAAC,CACxC,CAAC;EACD,MAAM0D,sBAAsB,GAAGrE,SAAS,CAACY,gBAAgB,CAAC;EAE1D,MAAM0D,2BAA2B,GAAGA,CAAA,KAAM;IACxCnE,wBAAwB,CAAC,CAAC,CACvBoE,IAAI,CAAC,MAAM;MACV5B,mBAAmB,CAACT,gBAAgB,CAACsC,OAAO,CAAC;IAC/C,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;MACX9B,mBAAmB,CAACT,gBAAgB,CAACwC,OAAO,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAGDnF,SAAS,CAAC,MAAM;IACdoF,gBAAgB,CAAC,CAAC;IAClBlE,KAAK,CAACmE,EAAE,CAACpE,QAAQ,CAACqE,yBAAyB,EAAEF,gBAAgB,CAAC;EAEhE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAGA,CAAA,KAAM;IAC7B7B,qBAAqB,CAACR,WAAW,CAACwC,EAAE,CAAC;EACvC,CAAC;EAEDvF,SAAS,CAAC,MAAM;IACd,IAAI6C,SAAS,EAAE;MACbkC,2BAA2B,CAAC,CAAC;IAC/B;EACF,CAAC,EAAE,CAAClC,SAAS,CAAC,CAAC;EAGf,MAAM2C,WAAW,GAAIC,UAAsB,IAAK;IAC9CX,sBAAsB,CAACW,UAAU,CAAC;IAClC,QAAQA,UAAU;MAChB,KAAKlD,UAAU,CAACmD,KAAK;QACnBvB,qBAAqB,CAAC,CAAC;QACvB;MACF,KAAK5B,UAAU,CAACoD,IAAI;QAClB7B,oBAAoB,CAAC,CAAC;QACtB;MACF,KAAKvB,UAAU,CAACqD,MAAM;QACpBvB,sBAAsB,CAAC,CAAC;QACxB;MACF,KAAK9B,UAAU,CAACiC,MAAM;QACpBD,gBAAgB,CAAC,CAAC;QAClB;MACF,KAAKhC,UAAU,CAACsD,YAAY;QAC1BnB,iBAAiB,CAAC,CAAC;QACnB;MACF,KAAKnC,UAAU,CAACuD,OAAO;QACrBlC,sBAAsB,CAAC,CAAC;QACxB;MACF;QACE;IACJ;EACF,CAAC;EAED,MAAMmC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI/C,sBAAsB,CAACsB,WAAW,KAAK,IAAI,IAC7CtB,sBAAsB,CAACgD,kBAAkB,KAAK,IAAI,IAClDhD,sBAAsB,CAACiD,cAAc,KAAK,IAAI,IAC9CjD,sBAAsB,CAACkD,YAAY,IAAI,IAAI,EAAE;MAC7C,oBAAOnG,KAAA,CAAAoG,aAAA,CAACzE,SAAS;QAAC0E,4BAA4B,EAAE;MAAM,gBACpDrG,KAAA,CAAAoG,aAAA,CAACrE,QAAQ,QAAEgB,aAAa,CAACrB,QAAQ,CAAC4E,YAAY,CAAY,CAAC,EAC1DC,WAAW,CAAC,CAAC,EACbC,eAAe,CAAC,CAAC,EACjBC,sBAAsB,CAAC,CAAC,EACxBC,aAAa,CAAC,CAAC,EACfC,gBAAgB,CAAC,CAAC,EAClBC,iBAAiB,CAAC,CACV,CAAC;IACd,CAAC,MACI;MACH,oBAAO5G,KAAA,CAAAoG,aAAA,CAACzE,SAAS;QAAC0E,4BAA4B,EAAE;MAAM,gBACpDrG,KAAA,CAAAoG,aAAA,CAACrE,QAAQ,QAAEgB,aAAa,CAACrB,QAAQ,CAAC4E,YAAY,CAAY,CAAC,EAC1DC,WAAW,CAAC,CAAC,EACbK,iBAAiB,CAAC,CACV,CAAC;IACd;EACF,CAAC;EAED,MAAMJ,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIvD,sBAAsB,CAACsB,WAAW,IAAI,IAAI,EAAE;MAC9C,oBAAOvE,KAAA,CAAAoG,aAAA,CAACtE,SAAS;QAAC+E,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAACjD,UAAU,CAACqD,MAAM;MAAE,gBAC9D7F,KAAA,CAAAoG,aAAA,CAACtF,SAAS;QAACgG,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC,eACrDhH,KAAA,CAAAoG,aAAA,CAAClE,KAAK,QAAEa,aAAa,CAACrB,QAAQ,CAACuF,kBAAkB,CAAC,EAAC,GAAQ,CAClD,CAAC;IACd;EACF,CAAC;EAED,MAAMR,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IAAIxD,sBAAsB,CAACgD,kBAAkB,IAAI,IAAI,EAAE;MACrD,oBAAOjG,KAAA,CAAAoG,aAAA,CAACtE,SAAS;QAAC+E,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAACjD,UAAU,CAACoD,IAAI;MAAE,gBAC5D5F,KAAA,CAAAoG,aAAA,CAACrF,sBAAsB;QAAC+F,IAAI,EAAC,qBAAqB;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC,eAC/EhH,KAAA,CAAAoG,aAAA,CAAClE,KAAK,QAAEa,aAAa,CAACrB,QAAQ,CAACwF,gBAAgB,CAAS,CAC/C,CAAC;IACd,CAAC,MAAK;MAAC,OAAO,IAAI;IAAA;EACpB,CAAC;EAED,MAAMR,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIzD,sBAAsB,CAACiD,cAAc,IAAI,IAAI,EAAE;MACjD,oBAAOlG,KAAA,CAAAoG,aAAA,CAACtE,SAAS;QAAC+E,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAACjD,UAAU,CAACmD,KAAK;MAAE,gBAC7D3F,KAAA,CAAAoG,aAAA,CAACpF,QAAQ;QAAC8F,IAAI,EAAC,WAAW;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC,eACvDhH,KAAA,CAAAoG,aAAA,CAAClE,KAAK,QAAEa,aAAa,CAACrB,QAAQ,CAACyF,iBAAiB,CAAS,CAChD,CAAC;IACd,CAAC,MAAK;MAAC,OAAO,IAAI;IAAA;EACpB,CAAC;EAED,MAAMR,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI1D,sBAAsB,CAACkD,YAAY,IAAI,IAAI,EAAE;MAC/C,oBAAOnG,KAAA,CAAAoG,aAAA,CAACtE,SAAS;QAAC+E,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAACjD,UAAU,CAACiC,MAAM;MAAE,gBAC9DzE,KAAA,CAAAoG,aAAA,CAACnF,aAAa;QAAC6F,IAAI,EAAC,aAAa;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC,eAC9DhH,KAAA,CAAAoG,aAAA,CAAClE,KAAK,QAAEa,aAAa,CAACrB,QAAQ,CAAC0F,MAAM,CAAS,CACrC,CAAC;IACd,CAAC,MAAK;MAAC,OAAO,IAAI;IAAA;EACpB,CAAC;EAED,MAAMR,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,oBAAO5G,KAAA,CAAAoG,aAAA,CAACtE,SAAS;MAAC+E,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAACjD,UAAU,CAACsD,YAAY;IAAE,gBACpE9F,KAAA,CAAAoG,aAAA,CAACnF,aAAa;MAAC6F,IAAI,EAAC,sBAAsB;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAC;IAAS,CAAE,CAAC,eACvEhH,KAAA,CAAAoG,aAAA,CAAClE,KAAK,QAAEa,aAAa,CAACrB,QAAQ,CAAC2F,aAAa,CAAC,EAAC,GAAC,EAAC5D,eAAe,GAAG,CAAC,iBAChEzD,KAAA,CAAAoG,aAAA,CAAC9F,IAAI;MAACgH,KAAK,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,YAAY,EAAE,CAAC;QAAEC,eAAe,EAAE;MAAM;IAAE,CAAE,CAC9E,CACE,CAAC;EACd,CAAC;EAED,MAAMnB,WAAW,GAAGA,CAAA,KAAM;IACxB,oBAAOvG,KAAA,CAAAoG,aAAA,CAACtE,SAAS;MAAC+E,OAAO,EAAEA,CAAA,KAAMhD,sBAAsB,CAAC;IAAE,gBACxD7D,KAAA,CAAAoG,aAAA,CAACrF,sBAAsB;MAAC+F,IAAI,EAAC,eAAe;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAC;IAAS,CAAE,CAAC,eACzEhH,KAAA,CAAAoG,aAAA,CAAClE,KAAK,QAAEa,aAAa,CAACrB,QAAQ,CAACiG,OAAO,CAAS,CACtC,CAAC;EACd,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAIzE,gBAAgB,KAAKR,gBAAgB,CAACU,QAAQ,EAAE;MAClD,oBACEtD,KAAA,CAAAoG,aAAA,CAAC7G,gBAAgB;QACfuI,OAAO,EAAE/E,aAAa,CAACrB,QAAQ,CAACqG,mBAAmB;MAAE,CACtD,CAAC;IAEN;IAEA,IAAI3E,gBAAgB,KAAKR,gBAAgB,CAACwC,OAAO,EAAE;MACjD,oBACEpF,KAAA,CAAAoG,aAAA,CAACxE,0BAA0B,qBACzB5B,KAAA,CAAAoG,aAAA,CAACvE,wBAAwB,QACtBkB,aAAa,CAACrB,QAAQ,CAACsG,yBAAyB,CACzB,CAAC,eAC3BhI,KAAA,CAAAoG,aAAA,CAAChH,cAAc;QACb6I,IAAI,EACFxH,SAAS,GACLsC,aAAa,CAACrB,QAAQ,CAACwG,QAAQ,CAAC,GAChCnF,aAAa,CAACrB,QAAQ,CAACnB,YAAY,CACxC;QACDsG,OAAO,EAAEpG,SAAS,GAAGuE,2BAA2B,GAAGzE;MAAa,CACjE,CACyB,CAAC;IAEjC;IAEA,IAAI6C,gBAAgB,KAAKR,gBAAgB,CAACsC,OAAO,EAAE;MACjD,oBACElF,KAAA,CAAAoG,aAAA,CAAApG,KAAA,CAAAmI,QAAA,qBACEnI,KAAA,CAAAoG,aAAA,CAAChG,SAAS;QAACgI,QAAQ,EAAC,cAAc;QAACV,eAAe,EAAC;MAAO,CAAE,CAAC,eAC7D1H,KAAA,CAAAoG,aAAA,CAAC5G,iBAAiB,qBAClBQ,KAAA,CAAAoG,aAAA,CAAC/G,MAAM;QAACgJ,KAAK,EAAE3F,UAAU,CAAC4F,OAAO,KAAK,EAAE,GAAGvF,aAAa,CAACrB,QAAQ,CAAC6G,UAAU,CAAC,GAAG7F,UAAU,CAAC4F;MAAQ,CAAE,CAAC,eACpGtI,KAAA,CAAAoG,aAAA,CAAC9G,cAAc,MAAE,CAAC,eAElBU,KAAA,CAAAoG,aAAA,CAACpE,QAAQ,qBACPhC,KAAA,CAAAoG,aAAA,CAACnE,QAAQ,QAAC,KAAG,EAACe,WAAW,CAACwF,SAAS,EAAC,GAAC,EAACxF,WAAW,CAACyF,QAAQ,EAAC,GAAW,CAAC,eACvEzI,KAAA,CAAAoG,aAAA,CAACjE,aAAa,qBACZnC,KAAA,CAAAoG,aAAA,CAACtG,WAAW,qBACVE,KAAA,CAAAoG,aAAA,CAAChE,aAAa;QAACsG,MAAM,EAAEhJ,MAAM,CAACiJ,MAAM,CAAC;MAAE,CAAE,CAC9B,CAAC,eACd3I,KAAA,CAAAoG,aAAA,CAACvG,WAAW;QAAC+I,YAAY,EAAEC;MAAc,GACtCjB,iBAAiB,CAAC,CAAC,eAEpB5H,KAAA,CAAAoG,aAAA,CAACxG,UAAU;QACTkJ,QAAQ,EAAEA,CAAA,KACRlI,gBAAgB,CAACoD,QAAQ,CAACjE,OAAO,CAAC6E,IAAI,CAACmE,SAAS;MACjD,gBAED/I,KAAA,CAAAoG,aAAA,CAAC/D,eAAe,qBACdrC,KAAA,CAAAoG,aAAA,CAAC9D,cAAc,QACZS,aAAa,CAACrB,QAAQ,CAACsH,SAAS,CACnB,CAAC,eACjBhJ,KAAA,CAAAoG,aAAA,CAAC7D,cAAc;QAACmG,MAAM,EAAEhJ,MAAM,CAACuJ,QAAQ,CAAC;MAAE,CAAE,CAC7B,CACP,CAAC,eACbjJ,KAAA,CAAAoG,aAAA,CAACxG,UAAU;QACTkJ,QAAQ,EAAEA,CAAA,KACRlI,gBAAgB,CAACoD,QAAQ,CAACjE,OAAO,CAAC6E,IAAI,CAACkB,YAAY;MACpD,gBAED9F,KAAA,CAAAoG,aAAA,CAAC/D,eAAe,qBACdrC,KAAA,CAAAoG,aAAA,CAAC9D,cAAc,QACZS,aAAa,CAACrB,QAAQ,CAACwH,QAAQ,CAClB,CAAC,eACjBlJ,KAAA,CAAAoG,aAAA,CAAC7D,cAAc;QAACmG,MAAM,EAAEhJ,MAAM,CAACuJ,QAAQ,CAAC;MAAE,CAAE,CAC7B,CACP,CAAC,eAEbjJ,KAAA,CAAAoG,aAAA,CAACxG,UAAU;QACTkJ,QAAQ,EAAEA,CAAA,KACRlI,gBAAgB,CAACoD,QAAQ,CAACjE,OAAO,CAAC6E,IAAI,CAACuE,QAAQ,CAACC,WAAW;MAC5D,gBAEDpJ,KAAA,CAAAoG,aAAA,CAAC/D,eAAe,qBACdrC,KAAA,CAAAoG,aAAA,CAAC9D,cAAc,QACZS,aAAa,CAACrB,QAAQ,CAAC2H,SAAS,CACnB,CAAC,eACjBrJ,KAAA,CAAAoG,aAAA,CAAC7D,cAAc;QAACmG,MAAM,EAAEhJ,MAAM,CAACuJ,QAAQ,CAAC;MAAE,CAAE,CAC7B,CACP,CAAC,eAEbjJ,KAAA,CAAAoG,aAAA,CAACxG,UAAU;QACTkJ,QAAQ,EAAEA,CAAA,KACRlI,gBAAgB,CAACoD,QAAQ,CAACjE,OAAO,CAAC6E,IAAI,CAAC0E,IAAI,CAACC,MAAM,CAACC,KAAK;MACzD,gBAEDxJ,KAAA,CAAAoG,aAAA,CAAC/D,eAAe,qBACdrC,KAAA,CAAAoG,aAAA,CAAC9D,cAAc,QACZS,aAAa,CAACrB,QAAQ,CAAC+H,MAAM,CAChB,CAAC,eACjBzJ,KAAA,CAAAoG,aAAA,CAAC7D,cAAc;QAACmG,MAAM,EAAEhJ,MAAM,CAACuJ,QAAQ,CAAC;MAAE,CAAE,CAC7B,CACP,CAAC,eAEbjJ,KAAA,CAAAoG,aAAA,CAACxG,UAAU;QACTkJ,QAAQ,EAAEA,CAAA,KACRlI,gBAAgB,CAACoD,QAAQ,CACvBjE,OAAO,CAAC6E,IAAI,CAAC8E,aAAa,CAACC,YAC7B;MACD,gBAED3J,KAAA,CAAAoG,aAAA,CAAC/D,eAAe,qBACdrC,KAAA,CAAAoG,aAAA,CAAC9D,cAAc,QACZS,aAAa,CAACrB,QAAQ,CAACkI,QAAQ,CAClB,CAAC,eACjB5J,KAAA,CAAAoG,aAAA,CAAC7D,cAAc;QAACmG,MAAM,EAAEhJ,MAAM,CAACuJ,QAAQ,CAAC;MAAE,CAAE,CAC7B,CACP,CACD,CACA,CACP,CAAC,EAEVjD,gBAAgB,CAAC,CAAC,eACnBhG,KAAA,CAAAoG,aAAA,CAAChF,iBAAiB;QAACyI,SAAS,EAAE/E;MAA4B,CAAE,CAAC,EAC5DgF,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAACxG,sBAAsB,CAAC,eACjEvD,KAAA,CAAAoG,aAAA,CAAC3G,YAAY;QACXoK,SAAS,EAAEtG,sBAAuB;QAClCyG,QAAQ,EAAEhH,WAAY;QACtBiH,SAAS,EAAEnG,sBAAuB;QAClCoG,kBAAkB,EAAE,KAAM;QAC1BC,eAAe,EAAE;MAAE,CACpB,CACiB,CACpB,CAAC;IAEP;EACF,CAAC;EACD,OAAOrH,SAAS,GAAG+E,MAAM,CAAC,CAAC,GAAG,IAAI;AACpC,CAAC;AAED,MAAMgB,aAAoC,GAAG;EAC3CuB,gBAAgB,EAAE;IAChB1C,eAAe,EAAE/H,MAAM,CAAC0K,SAAS;IACjC9C,KAAK,EAAE,MAAM;IACb+C,aAAa,EAAE,aAAa;IAC5BC,mBAAmB,EAAE;EACvB,CAAC;EACDC,aAAa,EAAE;IACbjD,KAAK,EAAE,GAAG;IACVkD,OAAO,EAAE,CAAC;IACVC,MAAM,EAAE;EACV,CAAC;EACDC,eAAe,EAAE;IACfC,aAAa,EAAE;EACjB,CAAC;EACDC,wBAAwB,EAAExK;AAC5B,CAAC;AAED,eAAeG,mBAAmB,CAACqC,gBAAgB,CAAC","ignoreList":[]}