{"version":3,"names":["AsyncStorage","api","clearIncidentEscortData","clearPassiveEscortData","setIncidentEscortData","setPassiveEscortData","makeSelectPassiveEscortData","Screens","IncidentAction","IncidentEscortState","moment","Vibration","call","delay","put","select","takeLatest","getCachedFineGeoPoint","NavigatorService","getTipsRequest","resetState","TipStatus","EscortType","PANIC_MODE_KEY","clearSelections","enterPanicModeFailure","enterPanicModeSuccess","getProcedureFailure","getProcedureSuccess","hidePanicInfo","hideSafeModal","imSafeFailure","imSafeSuccess","logPassiveEscortActionFailure","setTimerFailure","setTimerSuccess","startPassiveEscortFailure","startPassiveEscortSuccess","startVirtualEscortFailure","startVirtualEscortSuccess","CANCEL_COUNTDOWN_WARNING","ENTER_PANIC_MODE","GET_PROCEDURE_REQUEST","IM_SAFE_REQUEST","LOG_ESCORT_ACTION_REQUEST","SET_TIMER_VALUE_REQUEST","SHOW_PANIC_INFO","START_PASSIVE_ESCORT_REQUEST","START_VIRTUAL_ESCORT_REQUEST","TRIGGER_COUNTDOWN_WARNING","makeSelectIncident","makeSelectProcedure","PanicMode","getProcedureById","payload","passiveData","id","response","incidents","getPassiveEscort","procedure","data","error","Error","procedures","getProcedure","calculateTimer","hours","minutes","seconds","updateTimer","time","delayHidePanicInfo","enterPanicMode","vibrate","incident","console","log","organization","setItem","Active","passiveToPanicEscort","alertOrganization","startChat","checkIncidentStartCompletion","imSafe","updatePassiveEscortState","state","Safe","comment","clearDataAndGoBack","navigate","Home","Escort","tipStatus","paging","Closed","startCountdownWarning","clearCountdownWarning","cancel","createPassiveEscort","safetyTimer","getIncident","geoPoint","orgAreaId","areaResp","organizations","findOrganizationArea","request","location","organizationArea","Safety","isSafetyTimer","logPassiveEscortAction","updatePassiveEscortLog","startVirtualEscortConnection","passiveToActiveEscort","start","diff","getEscort","incidentEscortData","incidentEscort","fromPassive","Record","logger","debug","warn","Inactive","incidentActionRequest","action","AlertOrganization","args","doIncidentAction","countdownScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * CountdownScreen saga\n *\n */\n import AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as api from '../../../../../api';\nimport { AxiosResponse } from 'axios';\nimport {\n  clearIncidentEscortData,\n  clearPassiveEscortData,\n  setIncidentEscortData,\n  setPassiveEscortData,\n} from '../../../../../containers/app/actions';\nimport { makeSelectPassiveEscortData } from '../../../../../containers/app/selectors';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport {\n  GeoPoint,\n  Id,\n  Incident,\n  IncidentAction,\n  IncidentActionRequest,\n  IncidentEscort,\n  IncidentEscortState,\n  IncidentPassive,\n  IncidentPassiveEscortRequest,\n  Organization,\n  OrganizationArea,\n  OrganizationProcedure,\n} from 'incident-code-core';\nimport moment from 'moment';\nimport { Vibration } from 'react-native';\nimport { call, delay, put, select, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../../utils/error';\nimport { getCachedFineGeoPoint } from '../../../../../utils/location';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport {\n  getTipsRequest,\n  resetState,\n} from '../../../Menu/Tips/MyTipsScreen/actions';\nimport { TipStatus } from '../../../Menu/Tips/MyTipsScreen/types';\nimport { EscortType } from '../EscortTypeScreen/types';\nimport { PANIC_MODE_KEY } from '../RecordScreen/constants';\nimport { clearSelections } from '../TimedEscortScreen/actions';\nimport {\n  enterPanicModeFailure,\n  enterPanicModeSuccess,\n  getProcedureFailure,\n  getProcedureSuccess,\n  hidePanicInfo,\n  hideSafeModal,\n  imSafeFailure,\n  imSafeSuccess,\n  logPassiveEscortActionFailure,\n  setTimerFailure,\n  setTimerSuccess,\n  startPassiveEscortFailure,\n  startPassiveEscortSuccess,\n  startVirtualEscortFailure,\n  startVirtualEscortSuccess,\n} from './actions';\nimport {\n  CANCEL_COUNTDOWN_WARNING,\n  ENTER_PANIC_MODE,\n  GET_PROCEDURE_REQUEST,\n  IM_SAFE_REQUEST,\n  LOG_ESCORT_ACTION_REQUEST,\n  SET_TIMER_VALUE_REQUEST,\n  SHOW_PANIC_INFO,\n  START_PASSIVE_ESCORT_REQUEST,\n  START_VIRTUAL_ESCORT_REQUEST,\n  TRIGGER_COUNTDOWN_WARNING,\n} from './constants';\nimport { makeSelectIncident, makeSelectProcedure } from './selectors';\nimport {\n  EnterPanicModeAction,\n  GetProcedureRequestAction,\n  ImSafeRequestAction,\n  LogEscortActionRequestAction,\n  PanicMode,\n  SetTimerValueRequestAction,\n  StartPassiveEscortRequestAction,\n  StartVirtualEscortRequestAction,\n  TimerForm,\n} from './types';\n\nfunction* getProcedureById({ payload }: GetProcedureRequestAction) {\n  try {\n    if (!payload) {\n      const passiveData = yield select(makeSelectPassiveEscortData());\n      if (passiveData.id) {\n        const response: AxiosResponse<IncidentPassive> = yield call(\n          api.incidents.getPassiveEscort,\n          passiveData.id,\n        );\n        const procedure = response.data.procedure as OrganizationProcedure;\n        yield put(getProcedureSuccess(procedure));\n      } else {\n        const error = new Error('Unable to retrieve procedure');\n        yield put(getProcedureFailure(error as Error));\n      }\n    } else {\n      const response: AxiosResponse<OrganizationProcedure> = yield call(\n        api.procedures.getProcedure,\n        payload,\n      );\n      yield put(getProcedureSuccess(response.data));\n    }\n  } catch (error) {\n    yield put(getProcedureFailure(error as Error));\n  }\n}\n\nconst calculateTimer = ({ hours, minutes, seconds }: TimerForm) => {\n  return (+hours * 60 + +minutes) * 60 + +seconds;\n};\n\nfunction* updateTimer({ payload }: SetTimerValueRequestAction) {\n  const time = calculateTimer(payload);\n  if (time < 60) {\n    const error: Error = new Error(\n      'Countdown timer must be set to at least a minute',\n    );\n    yield put(setTimerFailure(error));\n  } else {\n    yield put(setTimerSuccess(time));\n  }\n}\n\nfunction* delayHidePanicInfo() {\n  yield delay(4500);\n  yield put(hidePanicInfo());\n}\n\nfunction* enterPanicMode({ payload }: EnterPanicModeAction) {\n  // Vibrates every 5 secs\n  yield call(Vibration.vibrate, [5000, 800], true);\n  const incident = yield select(makeSelectIncident());\n  console.log(\"enterPanicMode incident===>\",incident)\n  const organization = payload;\n  try {\n    yield call(AsyncStorage.setItem, PANIC_MODE_KEY, PanicMode.Active);\n    yield call(api.incidents.passiveToPanicEscort, incident);\n    yield call(alertOrganization, incident, organization);\n    yield call(startChat, incident, organization);\n    yield call(checkIncidentStartCompletion, incident, organization);\n    yield put(enterPanicModeSuccess());\n  } catch (error) {\n    yield put(enterPanicModeFailure((error as Error)));\n  }\n}\n\nfunction* imSafe({ payload }: ImSafeRequestAction) {\n  const incident = yield select(makeSelectIncident());\n  try {\n    yield call(api.incidents.updatePassiveEscortState, incident.id, {\n      state: IncidentEscortState.Safe,\n      comment: payload.comment,\n    });\n    yield call(clearDataAndGoBack);\n  } catch (error) {\n    yield put(imSafeFailure((error as Error)));\n  }\n}\n\nfunction* clearDataAndGoBack() {\n  yield put(clearIncidentEscortData());\n  yield put(clearPassiveEscortData());\n  yield put(clearSelections());\n  yield put(hideSafeModal());\n  yield delay(300);\n  yield call(NavigatorService.navigate, Screens.Home.Escort.EscortType);\n  yield put(imSafeSuccess());\n  yield delay(2000);\n  yield put(resetState());\n  yield put(getTipsRequest({ tipStatus: TipStatus.Active, paging: false }));\n  yield put(getTipsRequest({ tipStatus: TipStatus.Closed, paging: false }));\n}\n\nfunction* startCountdownWarning() {\n  // Vibrates every 5 secs\n  console.log(\"phont vibrate\")\n  yield call(Vibration.vibrate, [5000, 800], true);\n}\n\nfunction* clearCountdownWarning() {\n  yield call(Vibration.cancel);\n}\n\nfunction* createPassiveEscort({ payload }: StartPassiveEscortRequestAction): Generator<any, void, any> {\n  const { organization } = payload;\n  const { id } = payload;\n  const { safetyTimer } = payload;\n  const procedure = yield select(makeSelectProcedure());\n  let incident;\n  try {\n    if (id) {\n      console.log(\"createPassiveEscort 1 ===>\",id)\n      const response = yield call(api.incidents.getIncident, id);\n      incident = response.data;\n    } else {\n      const geoPoint: GeoPoint = yield call(getCachedFineGeoPoint);\n      let orgAreaId;\n      if (organization.id) {\n        const areaResp: AxiosResponse<OrganizationArea> = yield call(\n          api.organizations.findOrganizationArea,\n          organization.id,\n          geoPoint,\n        );\n        orgAreaId = areaResp.data.id;\n      }\n      const request: IncidentPassiveEscortRequest = {\n        location: geoPoint,\n        organization: organization.id,\n        organizationArea: orgAreaId,\n        procedure: procedure.id === EscortType.Safety ? null : procedure.id,\n      };\n      // console.log(\"IncidentPassiveEscortRequest ===>\",JSON.stringify(request))\n      const response: AxiosResponse<Incident> = yield call(\n        api.incidents.createPassiveEscort,\n        request,\n      );\n      // console.log(\"createPassiveEscort 2 ===>\",JSON.stringify(response.data))\n      incident = response.data;\n      // console.log(\"createPassiveEscort 3 ===>\",JSON.stringify(incident))\n    }\n    yield put(\n      setPassiveEscortData({\n        id: incident.id,\n        procedure,\n        isSafetyTimer: safetyTimer,\n      }),\n    );\n    yield put(startPassiveEscortSuccess(incident));\n  } catch (error) {\n    yield put(startPassiveEscortFailure((error as Error)));\n  }\n}\n\nfunction* logPassiveEscortAction({ payload }: LogEscortActionRequestAction) {\n  try {\n    yield call(api.incidents.updatePassiveEscortLog, payload);\n  } catch (error) {\n    yield put(logPassiveEscortActionFailure((error as Error)));\n  }\n}\n\nfunction* startVirtualEscortConnection({\n  payload,\n}: StartVirtualEscortRequestAction) {\n  try {\n    const organization = payload;\n    const incident = yield select(makeSelectIncident());\n    // console.log(\"startVirtualEscortConnection organization ==>\",JSON.stringify(organization))\n    // console.log(\"startVirtualEscortConnection incident ==>\",JSON.stringify(incident))\n    yield call(api.incidents.passiveToActiveEscort, incident);\n    yield call(alertOrganization, incident, organization);\n    yield call(startChat, incident, organization);\n    yield call(checkIncidentStartCompletion, incident, organization);\n  } catch (error) {\n    yield put(startPassiveEscortFailure((error as Error)));\n  }\n}\n\nfunction* checkIncidentStartCompletion(\n  incident: Incident,\n  organization: Organization,\n) {\n  const start = moment();\n  while (moment().diff(start, 'minute') <= 5) {\n    try {\n      const response: AxiosResponse<IncidentEscort> = yield call(\n        api.incidents.getEscort,\n        incident.id as Id,\n      );\n      // console.log(\"incident ===>\",JSON.stringify(incident))\n      // console.log(\"checkIncidentStartCompletion ===>\",JSON.stringify(response))\n      // if (response.data.state === IncidentEscortState.Active) {\n        const incidentEscortData = {\n          incidentEscort: response.data,\n          organization,\n          fromPassive: true,\n        };\n        // console.log(\"incidentEscortData ===>\",JSON.stringify(incidentEscortData))\n        yield put(setIncidentEscortData(incidentEscortData));\n        yield call(clearCountdownWarning);\n        yield call(\n          NavigatorService.navigate,\n          Screens.Home.Escort.Record,\n          incidentEscortData,\n        );\n        yield put(startVirtualEscortSuccess());\n        api.logger.debug('Countdown CheckVideoUpload', 'Success', response.data);\n        return;\n      // }\n    } catch (error) {\n      api.logger.warn('Countdown CheckVideoUpload', 'Failed', error);\n    } finally {\n      yield delay(5000);\n    }\n  }\n  yield put(\n    startVirtualEscortFailure(\n      new Error(\n        'We´re sorry, no security personnel are available now. If this is an emergency, please either contact your organization directly or call 911.',\n      ),\n    ),\n  );\n  yield call(clearCountdownWarning);\n  yield call(AsyncStorage.setItem, PANIC_MODE_KEY, PanicMode.Inactive);\n}\n\nfunction* alertOrganization(incident: Incident, organization: Organization) {\n  const incidentActionRequest: IncidentActionRequest = {\n    id: incident.id as Id,\n    action: IncidentAction.AlertOrganization,\n    args: {\n      organization: organization.id as Id,\n    },\n  };\n  yield call(api.incidents.doIncidentAction, incidentActionRequest);\n}\n\nfunction* startChat(incident: Incident, organization: Organization) {\n  const location = yield call(getCachedFineGeoPoint);\n  yield call(api.incidents.startChat, {\n    incident: incident.id as Id,\n    organization: organization.id as Id,\n    location,\n  });\n}\n\nexport default function* countdownScreenSaga() {\n  yield takeLatest(GET_PROCEDURE_REQUEST, getProcedureById);\n  yield takeLatest(SET_TIMER_VALUE_REQUEST, updateTimer);\n  yield takeLatest(SHOW_PANIC_INFO, delayHidePanicInfo);\n  yield takeLatest(ENTER_PANIC_MODE, enterPanicMode);\n  yield takeLatest(IM_SAFE_REQUEST, imSafe);\n  yield takeLatest(TRIGGER_COUNTDOWN_WARNING, startCountdownWarning);\n  yield takeLatest(CANCEL_COUNTDOWN_WARNING, clearCountdownWarning);\n  yield takeLatest(START_PASSIVE_ESCORT_REQUEST, createPassiveEscort);\n  yield takeLatest(START_VIRTUAL_ESCORT_REQUEST, startVirtualEscortConnection);\n  yield takeLatest(LOG_ESCORT_ACTION_REQUEST, logPassiveEscortAction);\n}\n"],"mappings":"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","ignoreList":[]}