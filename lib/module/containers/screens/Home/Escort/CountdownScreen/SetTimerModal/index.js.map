{"version":3,"names":["images","Form","SubmitButtonField","React","useState","useIntl","View","Modal","useAction","useSelector","hideSetTimerModal","SET_TIMER_VALUE_FAILURE","SET_TIMER_VALUE_REQUEST","SET_TIMER_VALUE_SUCCESS","messages","makeSelectDisplaySetTimerModal","InfoRow","SubHeader","CloseButton","InputRow","ModalContainer","SetTimerErrorField","SubmitButtonRow","TimeInputField","TimerErrorField","SetTimerSchema","SetTimerModal","formatMessage","schema","displaySetTimerModal","hideModalAction","timerError","setTimerError","initialValues","hours","minutes","seconds","handleTimerError","error","setTimeout","createElement","useNativeDriver","animationIn","animationOut","isVisible","onBackButtonPress","onBackdropPress","avoidKeyboard","source","icClose","onPress","setTimerHeader","start","resolve","reject","validationSchema","onResolve","onReject","action","payload","message","name","autoCompleteType","textContentType","keyboardType","maxLength","placeholder","hoursPlaceholder","minutesPlaceholder","secondsPlaceholder","style","marginTop","text","setTimerSubmit"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../../../assets';\nimport { Form, SubmitButtonField } from '../../../../../../components';\nimport React, { FC, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { View } from 'react-native';\nimport Modal from 'react-native-modal';\nimport { useAction, useSelector } from '../../../../../../utils/hooks';\n\nimport { hideSetTimerModal } from '../actions';\nimport {\n  SET_TIMER_VALUE_FAILURE,\n  SET_TIMER_VALUE_REQUEST,\n  SET_TIMER_VALUE_SUCCESS,\n} from '../constants';\nimport messages from '../messages';\nimport { makeSelectDisplaySetTimerModal } from '../selectors';\nimport { InfoRow, SubHeader } from '../styles';\nimport {\n  CloseButton,\n  InputRow,\n  ModalContainer,\n  SetTimerErrorField,\n  SubmitButtonRow,\n  TimeInputField,\n  TimerErrorField,\n} from './styles';\nimport SetTimerSchema from './validator';\n\ninterface Props {}\n\nconst SetTimerModal: FC<Props> = () => {\n  const { formatMessage } = useIntl();\n  const schema = SetTimerSchema(formatMessage);\n  const displaySetTimerModal = useSelector(makeSelectDisplaySetTimerModal());\n  const hideModalAction = useAction(hideSetTimerModal);\n  const [timerError, setTimerError] = useState('');\n\n  const initialValues = {\n    hours: '',\n    minutes: '',\n    seconds: '',\n  };\n\n  // //(\"displaySetTimerModal--->\",displaySetTimerModal)\n  \n  const handleTimerError = (error: string) => {\n    setTimerError(error);\n    setTimeout(() => setTimerError(''), 3000); // clears error from UI after 3 seconds\n  };\n\n  return (\n    <Modal\n    useNativeDriver={true}\n      animationIn=\"zoomIn\"\n      animationOut=\"zoomOut\"\n      isVisible={displaySetTimerModal}\n      onBackButtonPress={hideModalAction}\n      onBackdropPress={hideModalAction}\n      avoidKeyboard\n    >\n      <ModalContainer>\n        <CloseButton source={images.icClose()} onPress={hideModalAction} />\n        <InfoRow>\n          <SubHeader>{formatMessage(messages.setTimerHeader)}</SubHeader>\n        </InfoRow>\n        <Form\n          start={SET_TIMER_VALUE_REQUEST}\n          resolve={SET_TIMER_VALUE_SUCCESS}\n          reject={SET_TIMER_VALUE_FAILURE}\n          initialValues={initialValues}\n          validationSchema={schema}\n          // onResolve={() => setTimeout(() => {hideModalAction()}, 1000)}\n          onResolve={hideModalAction}\n          onReject={action => handleTimerError(action.payload.message)}\n        >\n          <InputRow>\n            <TimeInputField\n              name=\"hours\"\n              autoCompleteType=\"off\"\n              textContentType=\"none\"\n              keyboardType=\"number-pad\"\n              maxLength={2}\n              placeholder={formatMessage(messages.hoursPlaceholder)}\n            />\n            <TimeInputField\n              name=\"minutes\"\n              autoCompleteType=\"off\"\n              textContentType=\"none\"\n              keyboardType=\"number-pad\"\n              maxLength={2}\n              placeholder={formatMessage(messages.minutesPlaceholder)}\n            />\n            <TimeInputField\n              name=\"seconds\"\n              autoCompleteType=\"off\"\n              textContentType=\"none\"\n              keyboardType=\"number-pad\"\n              maxLength={2}\n              placeholder={formatMessage(messages.secondsPlaceholder)}\n            />\n          </InputRow>\n          <TimerErrorField name=\"hours\" />\n          <TimerErrorField name=\"minutes\" />\n          <TimerErrorField name=\"seconds\" />\n          <SetTimerErrorField>{timerError}</SetTimerErrorField>\n          <View style={{ marginTop: 'auto' }} />\n          <SubmitButtonRow>\n            <SubmitButtonField text={formatMessage(messages.setTimerSubmit)} />\n          </SubmitButtonRow>\n        </Form>\n      </ModalContainer>\n    </Modal>\n  );\n};\n\nexport default SetTimerModal;\n"],"mappings":"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","ignoreList":[]}