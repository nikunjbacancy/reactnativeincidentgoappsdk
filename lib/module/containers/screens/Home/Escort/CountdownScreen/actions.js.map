{"version":3,"names":["CANCEL_COUNTDOWN_WARNING","CLEAR_ARE_YOU_SAFE","CLEAR_ESCORT_ERROR","CLEAR_PROCEDURE","COMPLETE_PROCEDURE_ACTION","ENTER_PANIC_MODE","ENTER_PANIC_MODE_FAILURE","ENTER_PANIC_MODE_SUCCESS","GET_PROCEDURE_FAILURE","GET_PROCEDURE_REQUEST","GET_PROCEDURE_SUCCESS","HIDE_CALL_MODAL","HIDE_EXIT_PANIC_MODAL","HIDE_PANIC_INFO","HIDE_SAFE_MODAL","HIDE_SET_TIMER_MODAL","IM_SAFE_FAILURE","IM_SAFE_REQUEST","IM_SAFE_SUCCESS","LOG_ESCORT_ACTION_FAILURE","LOG_ESCORT_ACTION_REQUEST","SET_SAFETY_TIMER","SET_TIMER_VALUE_FAILURE","SET_TIMER_VALUE_SUCCESS","SHOW_CALL_MODAL","SHOW_EXIT_PANIC_MODAL","SHOW_PANIC_INFO","SHOW_SAFE_MODAL","SHOW_SET_TIMER_MODAL","START_PASSIVE_ESCORT_FAILURE","START_PASSIVE_ESCORT_REQUEST","START_PASSIVE_ESCORT_SUCCESS","START_VIRTUAL_ESCORT_FAILURE","START_VIRTUAL_ESCORT_REQUEST","START_VIRTUAL_ESCORT_SUCCESS","TRIGGER_COUNTDOWN_WARNING","getProcedureRequest","id","type","payload","getProcedureSuccess","procedure","getProcedureFailure","error","showSetTimerModal","hideSetTimerModal","setTimerSuccess","timer","setTimerFailure","completeProcedureAction","showCallModal","hideCallModal","showSafeModal","hideSafeModal","showPanicInfo","hidePanicInfo","enterPanicMode","organization","enterPanicModeSuccess","enterPanicModeFailure","showExitPanicModal","hideExitPanicModal","imSafeRequest","imSafeSuccess","imSafeFailure","startCountdownWarning","cancelCountdownWarning","startPassiveEscortRequest","startPassiveEscortSuccess","incident","startPassiveEscortFailure","startVirtualEscortRequest","startVirtualEscortSuccess","startVirtualEscortFailure","clearAreYouSafe","logEscortAction","logPassiveEscortActionFailure","clearEscortErrorAction","clearProcedure","setSafetyTimer","org"],"sources":["actions.ts"],"sourcesContent":["/**\n *\n * CountdownClock screen actions\n *\n */\nimport {\n  Id,\n  Incident,\n  IncidentPassiveLogRequest,\n  Organization,\n  OrganizationProcedure,\n  Ref,\n} from 'incident-code-core';\n\nimport {\n  CANCEL_COUNTDOWN_WARNING,\n  CLEAR_ARE_YOU_SAFE,\n  CLEAR_ESCORT_ERROR,\n  CLEAR_PROCEDURE,\n  COMPLETE_PROCEDURE_ACTION,\n  ENTER_PANIC_MODE,\n  ENTER_PANIC_MODE_FAILURE,\n  ENTER_PANIC_MODE_SUCCESS,\n  GET_PROCEDURE_FAILURE,\n  GET_PROCEDURE_REQUEST,\n  GET_PROCEDURE_SUCCESS,\n  HIDE_CALL_MODAL,\n  HIDE_EXIT_PANIC_MODAL,\n  HIDE_PANIC_INFO,\n  HIDE_SAFE_MODAL,\n  HIDE_SET_TIMER_MODAL,\n  IM_SAFE_FAILURE,\n  IM_SAFE_REQUEST,\n  IM_SAFE_SUCCESS,\n  LOG_ESCORT_ACTION_FAILURE,\n  LOG_ESCORT_ACTION_REQUEST,\n  SET_SAFETY_TIMER,\n  SET_TIMER_VALUE_FAILURE,\n  SET_TIMER_VALUE_SUCCESS,\n  SHOW_CALL_MODAL,\n  SHOW_EXIT_PANIC_MODAL,\n  SHOW_PANIC_INFO,\n  SHOW_SAFE_MODAL,\n  SHOW_SET_TIMER_MODAL,\n  START_PASSIVE_ESCORT_FAILURE,\n  START_PASSIVE_ESCORT_REQUEST,\n  START_PASSIVE_ESCORT_SUCCESS,\n  START_VIRTUAL_ESCORT_FAILURE,\n  START_VIRTUAL_ESCORT_REQUEST,\n  START_VIRTUAL_ESCORT_SUCCESS,\n  TRIGGER_COUNTDOWN_WARNING,\n} from './constants';\nimport { CountdownClockActionTypes, ImSafeRequestPayload } from './types';\n\nexport const getProcedureRequest = (id: Id): CountdownClockActionTypes => ({\n  type: GET_PROCEDURE_REQUEST,\n  payload: id,\n});\n\nexport const getProcedureSuccess = (\n  procedure: OrganizationProcedure,\n): CountdownClockActionTypes => ({\n  type: GET_PROCEDURE_SUCCESS,\n  payload: procedure,\n});\n\nexport const getProcedureFailure = (\n  error: Error,\n): CountdownClockActionTypes => ({\n  type: GET_PROCEDURE_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const showSetTimerModal = (): CountdownClockActionTypes => ({\n  type: SHOW_SET_TIMER_MODAL,\n});\n\nexport const hideSetTimerModal = (): CountdownClockActionTypes => ({\n  type: HIDE_SET_TIMER_MODAL,\n});\n\nexport const setTimerSuccess = (timer: number): CountdownClockActionTypes => ({\n  payload: timer,\n  type: SET_TIMER_VALUE_SUCCESS,\n});\n\nexport const setTimerFailure = (error: Error): CountdownClockActionTypes => ({\n  type: SET_TIMER_VALUE_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const completeProcedureAction = (\n  id: string,\n): CountdownClockActionTypes => ({\n  type: COMPLETE_PROCEDURE_ACTION,\n  payload: id,\n});\n\nexport const showCallModal = (): CountdownClockActionTypes => ({\n  type: SHOW_CALL_MODAL,\n});\n\nexport const hideCallModal = (): CountdownClockActionTypes => ({\n  type: HIDE_CALL_MODAL,\n});\n\nexport const showSafeModal = (): CountdownClockActionTypes => ({\n  type: SHOW_SAFE_MODAL,\n});\n\nexport const hideSafeModal = (): CountdownClockActionTypes => ({\n  type: HIDE_SAFE_MODAL,\n});\n\nexport const showPanicInfo = (): CountdownClockActionTypes => ({\n  type: SHOW_PANIC_INFO,\n});\n\nexport const hidePanicInfo = (): CountdownClockActionTypes => ({\n  type: HIDE_PANIC_INFO,\n});\n\nexport const enterPanicMode = (\n  organization: Organization,\n): CountdownClockActionTypes => ({\n  type: ENTER_PANIC_MODE,\n  payload: organization,\n});\n\nexport const enterPanicModeSuccess = (): CountdownClockActionTypes => ({\n  type: ENTER_PANIC_MODE_SUCCESS,\n});\n\nexport const enterPanicModeFailure = (\n  error: Error,\n): CountdownClockActionTypes => ({\n  type: ENTER_PANIC_MODE_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const showExitPanicModal = (): CountdownClockActionTypes => ({\n  type: SHOW_EXIT_PANIC_MODAL,\n});\n\nexport const hideExitPanicModal = (): CountdownClockActionTypes => ({\n  type: HIDE_EXIT_PANIC_MODAL,\n});\n\nexport const imSafeRequest = (\n  payload: ImSafeRequestPayload,\n): CountdownClockActionTypes => ({\n  type: IM_SAFE_REQUEST,\n  payload,\n});\n\nexport const imSafeSuccess = (): CountdownClockActionTypes => ({\n  type: IM_SAFE_SUCCESS,\n});\n\nexport const imSafeFailure = (error: Error): CountdownClockActionTypes => ({\n  type: IM_SAFE_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const startCountdownWarning = (): CountdownClockActionTypes => ({\n  type: TRIGGER_COUNTDOWN_WARNING,\n});\n\nexport const cancelCountdownWarning = (): CountdownClockActionTypes => ({\n  type: CANCEL_COUNTDOWN_WARNING,\n});\n\nexport const startPassiveEscortRequest = (payload: {\n  organization: Organization;\n  id?: Id;\n  safetyTimer: boolean;\n}): CountdownClockActionTypes => ({\n  type: START_PASSIVE_ESCORT_REQUEST,\n  payload,\n});\n\nexport const startPassiveEscortSuccess = (\n  incident: Incident,\n): CountdownClockActionTypes => ({\n  type: START_PASSIVE_ESCORT_SUCCESS,\n  payload: incident,\n});\n\nexport const startPassiveEscortFailure = (\n  error: Error,\n): CountdownClockActionTypes => ({\n  type: START_PASSIVE_ESCORT_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const startVirtualEscortRequest = (\n  organization: Organization,\n): CountdownClockActionTypes => ({\n  type: START_VIRTUAL_ESCORT_REQUEST,\n  payload: organization,\n});\n\nexport const startVirtualEscortSuccess = (): CountdownClockActionTypes => ({\n  type: START_VIRTUAL_ESCORT_SUCCESS,\n});\n\nexport const startVirtualEscortFailure = (\n  error: Error,\n): CountdownClockActionTypes => ({\n  type: START_VIRTUAL_ESCORT_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const clearAreYouSafe = (): CountdownClockActionTypes => ({\n  type: CLEAR_ARE_YOU_SAFE,\n});\n\nexport const logEscortAction = (\n  payload: IncidentPassiveLogRequest,\n): CountdownClockActionTypes => ({\n  type: LOG_ESCORT_ACTION_REQUEST,\n  payload,\n});\n\nexport const logPassiveEscortActionFailure = (\n  error: Error,\n): CountdownClockActionTypes => ({\n  type: LOG_ESCORT_ACTION_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const clearEscortErrorAction = (): CountdownClockActionTypes => ({\n  type: CLEAR_ESCORT_ERROR,\n});\n\nexport const clearProcedure = (): CountdownClockActionTypes => ({\n  type: CLEAR_PROCEDURE,\n});\n\nexport const setSafetyTimer = (\n  org: Ref<Organization>,\n): CountdownClockActionTypes => ({\n  type: SET_SAFETY_TIMER,\n  payload: org,\n});\n"],"mappings":"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","ignoreList":[]}