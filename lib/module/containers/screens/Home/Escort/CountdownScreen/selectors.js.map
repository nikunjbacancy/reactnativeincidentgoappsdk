{"version":3,"names":["createSelector","initialState","countdownScreenStateDomain","state","escortCountdownScreen","makeSelectProcedure","procedure","makeSelectProcedureActions","actions","makeSelectProcedureTimer","timer","makeSelectIsLoading","isLoadingProcedure","makeSelectEnableStartButton","makeSelectDisplaySetTimerModal","shouldShowSetTimerModal","makeSelectIsUserDefinedTimer","isUserDefinedTimer","makeSelectFinalActionCompleted","some","act","finalAction","isCompleted","makeSelectShouldShowCallModal","shouldShowCallModal","makeSelectShouldShowSafeModal","shouldShowSafeModal","makeSelectIsPanicMode","isPanicMode","makeSelectRequestingImSafe","requestingImSafe","makeSelectShouldShowPanicInfo","shouldShowPanicInfo","makeSelectShouldShowExitPanicModal","shouldShowExitPanicModal","makeSelectIsWarningActive","warningTriggered","makeSelectIsRequestingEscort","requestingVirtualEscort","makeSelectIncident","incident","makeSelectCountdownIsActive","activeCountdown","makeSelectError","error","makeSelectErrorMessage","errorMessage","makeSelectSafetyTimer","safetyTimer","makeSelectSelectCountdownScreenState","subState"],"sources":["selectors.ts"],"sourcesContent":["/**\n *\n * countdownClockScreen selectors\n *\n */\nimport { createSelector } from 'reselect';\nimport { RootState } from 'store/types';\n\nimport { initialState } from './reducer';\n\nconst countdownScreenStateDomain = (state: RootState) =>\n  state.escortCountdownScreen || initialState;\n\nconst makeSelectProcedure = () =>\n  createSelector(countdownScreenStateDomain, ({ procedure }) => procedure);\n\nconst makeSelectProcedureActions = () =>\n  createSelector(countdownScreenStateDomain, ({ actions }) => actions);\n\nconst makeSelectProcedureTimer = () =>\ncreateSelector(countdownScreenStateDomain, ({ timer }) => timer);\n\nconst makeSelectIsLoading = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ isLoadingProcedure }) => isLoadingProcedure,\n  );\n\nconst makeSelectEnableStartButton = () =>\n  createSelector(countdownScreenStateDomain, ({ timer }) => {\n    return !!(timer && timer >= 1);\n  });\n\nconst makeSelectDisplaySetTimerModal = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ shouldShowSetTimerModal }) => shouldShowSetTimerModal,\n  );\n\nconst makeSelectIsUserDefinedTimer = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ isUserDefinedTimer }) => isUserDefinedTimer,\n  );\n\nconst makeSelectFinalActionCompleted = () =>\n  createSelector(countdownScreenStateDomain, ({ actions }) => {\n    return actions?.some(act => act.finalAction && act.isCompleted);\n  });\n\nconst makeSelectShouldShowCallModal = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ shouldShowCallModal }) => shouldShowCallModal,\n  );\n\nconst makeSelectShouldShowSafeModal = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ shouldShowSafeModal }) => shouldShowSafeModal,\n  );\n\nconst makeSelectIsPanicMode = () =>\n  createSelector(countdownScreenStateDomain, ({ isPanicMode }) => isPanicMode);\n\nconst makeSelectRequestingImSafe = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ requestingImSafe }) => requestingImSafe,\n  );\n\nconst makeSelectShouldShowPanicInfo = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ shouldShowPanicInfo }) => shouldShowPanicInfo,\n  );\n\nconst makeSelectShouldShowExitPanicModal = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ shouldShowExitPanicModal }) => shouldShowExitPanicModal,\n  );\n\nconst makeSelectIsWarningActive = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ warningTriggered }) => warningTriggered,\n  );\n\nconst makeSelectIsRequestingEscort = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ requestingVirtualEscort }) => requestingVirtualEscort,\n  );\n\nconst makeSelectIncident = () =>\n  createSelector(countdownScreenStateDomain, ({ incident }) => incident);\n\nconst makeSelectCountdownIsActive = () =>\ncreateSelector(\n  countdownScreenStateDomain,\n  ({ activeCountdown }) => activeCountdown,\n);\n\n\nconst makeSelectError = () =>\n  createSelector(countdownScreenStateDomain, ({ error }) => error);\n\nconst makeSelectErrorMessage = () =>\n  createSelector(\n    countdownScreenStateDomain,\n    ({ errorMessage }) => errorMessage,\n  );\n\nconst makeSelectSafetyTimer = () =>\n  createSelector(countdownScreenStateDomain, ({ safetyTimer }) => safetyTimer);\n/**\n * Default selector used by countdownScreen\n */\n\nconst makeSelectSelectCountdownScreenState = () =>\n  createSelector(countdownScreenStateDomain, subState => subState);\n\nexport default makeSelectSelectCountdownScreenState;\nexport {\n  makeSelectProcedure,\n  makeSelectProcedureActions,\n  makeSelectProcedureTimer,\n  makeSelectIsLoading,\n  makeSelectEnableStartButton,\n  makeSelectDisplaySetTimerModal,\n  makeSelectIsUserDefinedTimer,\n  makeSelectFinalActionCompleted,\n  makeSelectShouldShowCallModal,\n  makeSelectShouldShowSafeModal,\n  makeSelectIsPanicMode,\n  makeSelectRequestingImSafe,\n  makeSelectShouldShowPanicInfo,\n  makeSelectShouldShowExitPanicModal,\n  makeSelectIsWarningActive,\n  makeSelectIsRequestingEscort,\n  makeSelectIncident,\n  makeSelectCountdownIsActive,\n  makeSelectError,\n  makeSelectErrorMessage,\n  makeSelectSafetyTimer,\n};\n"],"mappings":"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","ignoreList":[]}