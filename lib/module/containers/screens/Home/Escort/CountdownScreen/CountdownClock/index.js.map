{"version":3,"names":["colors","fonts","React","useEffect","CountDown","ClockWrapper","CountDownClock","inPanic","onCountdownWarning","countdown","running","onPressed","warningTriggered","onFinish","OnCountDownChange","e","createElement","digitStyle","backgroundColor","nearWhite","digitTxtStyle","color","background3","fontFamily","defaultFamily","until","size","timeToShow","onPress","onChange"],"sources":["index.tsx"],"sourcesContent":["import { colors, fonts } from '../../../../../../assets';\nimport React, { FC, useEffect } from 'react';\nimport CountDown from 'react-native-countdown-component';\nimport { ClockWrapper } from './styles';\n\ninterface Props {\n  inPanic?: boolean;\n  warningTriggered?: boolean;\n  onCountdownWarning(): void;\n  id?: string;\n  countdown?: number;\n  running?: boolean;\n  onPressed(): void;\n  onFinish(): void;\n}\n\nconst CountDownClock: FC<Props> = ({\n  inPanic,\n  onCountdownWarning,\n  countdown,\n  running,\n  onPressed,\n  warningTriggered,\n  onFinish,\n}) => {\n  const OnCountDownChange = (e: number) => {\n    // //(\"isPanic--->\",inPanic)\n    // //(\"warningTriggered--->\",warningTriggered)\n    if (e <= 36 && !inPanic && !warningTriggered) {\n      onCountdownWarning();\n    }\n  };\n\n  useEffect(() => {\n    //(\"countdown-->\",countdown)\n  }, [countdown]);\n\n  // //(\"countdown --->\",countdown)\n  // //(\"running timer --->\",running)\n\n  return (\n    <ClockWrapper>\n      {/* {//(\"local timer-->\",localTimer)} */}\n      {/* <TouchableOpacity style={{width:200,height:50,backgroundColor:'yellow'}} onPress={()=> onPressed()}>\n      <Text>{countdown}</Text>\n      </TouchableOpacity> */}\n     <CountDown\n        digitStyle={{ backgroundColor: colors.nearWhite }}\n        digitTxtStyle={{\n          color: colors.background3,\n          fontFamily: fonts.defaultFamily, // Resolves OnePlus7T size issue\n        }}\n        // id={`key-${localTimer}`}\n        until={countdown}\n        size={40}\n        timeToShow={['H', 'M', 'S']}\n        running={running}\n        onPress={onPressed}\n        onFinish={onFinish}\n        onChange={OnCountDownChange}\n      />\n    </ClockWrapper>\n  );\n};\n\nexport default CountDownClock;\n// export default React.memo(CountDownClock, (prevProps, nextProps) => {\n//   return (\n//     prevProps.countdown === nextProps.countdown\n//   );\n// });\n/**\n * colors.highlight2 = red\n * colors.highlight = dark blue/purple\n * colors.highlight3 = lighter purple\n */\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,0BAA0B;AACxD,OAAOC,KAAK,IAAQC,SAAS,QAAQ,OAAO;AAC5C,OAAOC,SAAS,MAAM,kCAAkC;AACxD,SAASC,YAAY,QAAQ,UAAU;AAavC,MAAMC,cAAyB,GAAGA,CAAC;EACjCC,OAAO;EACPC,kBAAkB;EAClBC,SAAS;EACTC,OAAO;EACPC,SAAS;EACTC,gBAAgB;EAChBC;AACF,CAAC,KAAK;EACJ,MAAMC,iBAAiB,GAAIC,CAAS,IAAK;IACvC;IACA;IACA,IAAIA,CAAC,IAAI,EAAE,IAAI,CAACR,OAAO,IAAI,CAACK,gBAAgB,EAAE;MAC5CJ,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC;EAEDL,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,CAACM,SAAS,CAAC,CAAC;;EAEf;EACA;;EAEA,oBACEP,KAAA,CAAAc,aAAA,CAACX,YAAY,qBAKZH,KAAA,CAAAc,aAAA,CAACZ,SAAS;IACPa,UAAU,EAAE;MAAEC,eAAe,EAAElB,MAAM,CAACmB;IAAU,CAAE;IAClDC,aAAa,EAAE;MACbC,KAAK,EAAErB,MAAM,CAACsB,WAAW;MACzBC,UAAU,EAAEtB,KAAK,CAACuB,aAAa,CAAE;IACnC;IACA;IAAA;IACAC,KAAK,EAAEhB,SAAU;IACjBiB,IAAI,EAAE,EAAG;IACTC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;IAC5BjB,OAAO,EAAEA,OAAQ;IACjBkB,OAAO,EAAEjB,SAAU;IACnBE,QAAQ,EAAEA,QAAS;IACnBgB,QAAQ,EAAEf;EAAkB,CAC7B,CACW,CAAC;AAEnB,CAAC;AAED,eAAeR,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]}