{"version":3,"names":["produce","map","EscortType","CANCEL_COUNTDOWN_WARNING","CLEAR_ARE_YOU_SAFE","CLEAR_ESCORT_ERROR","CLEAR_PROCEDURE","COMPLETE_PROCEDURE_ACTION","ENTER_PANIC_MODE","ENTER_PANIC_MODE_FAILURE","ENTER_PANIC_MODE_SUCCESS","GET_PROCEDURE_FAILURE","GET_PROCEDURE_REQUEST","GET_PROCEDURE_SUCCESS","HIDE_CALL_MODAL","HIDE_EXIT_PANIC_MODAL","HIDE_PANIC_INFO","HIDE_SAFE_MODAL","HIDE_SET_TIMER_MODAL","IM_SAFE_FAILURE","IM_SAFE_REQUEST","IM_SAFE_SUCCESS","LOG_ESCORT_ACTION_FAILURE","SET_SAFETY_TIMER","SET_TIMER_VALUE_SUCCESS","SHOW_CALL_MODAL","SHOW_EXIT_PANIC_MODAL","SHOW_PANIC_INFO","SHOW_SAFE_MODAL","SHOW_SET_TIMER_MODAL","START_PASSIVE_ESCORT_FAILURE","START_PASSIVE_ESCORT_REQUEST","START_PASSIVE_ESCORT_SUCCESS","START_VIRTUAL_ESCORT_FAILURE","START_VIRTUAL_ESCORT_REQUEST","START_VIRTUAL_ESCORT_SUCCESS","TRIGGER_COUNTDOWN_WARNING","initialState","timer","undefined","procedure","actions","error","errorMessage","isLoadingProcedure","shouldShowSetTimerModal","isUserDefinedTimer","shouldShowCallModal","shouldShowSafeModal","shouldShowExitPanicModal","shouldShowPanicInfo","requestingImSafe","isPanicMode","warningTriggered","isCreatingPassiveEscort","incident","requestingVirtualEscort","activeCountdown","safetyTimer","countdownClockScreenReducer","draft","action","type","payload","message","act","id","isCompleted","finalAction","Safety","name","organization"],"sources":["reducer.ts"],"sourcesContent":["/**\n *\n * CountdownScreen reducer\n *\n */\n\nimport produce, { Draft } from 'immer';\nimport map from 'lodash/map';\n\nimport { EscortType } from '../EscortTypeScreen/types';\nimport {\n  CANCEL_COUNTDOWN_WARNING,\n  CLEAR_ARE_YOU_SAFE,\n  CLEAR_ESCORT_ERROR,\n  CLEAR_PROCEDURE,\n  COMPLETE_PROCEDURE_ACTION,\n  ENTER_PANIC_MODE,\n  ENTER_PANIC_MODE_FAILURE,\n  ENTER_PANIC_MODE_SUCCESS,\n  GET_PROCEDURE_FAILURE,\n  GET_PROCEDURE_REQUEST,\n  GET_PROCEDURE_SUCCESS,\n  HIDE_CALL_MODAL,\n  HIDE_EXIT_PANIC_MODAL,\n  HIDE_PANIC_INFO,\n  HIDE_SAFE_MODAL,\n  HIDE_SET_TIMER_MODAL,\n  IM_SAFE_FAILURE,\n  IM_SAFE_REQUEST,\n  IM_SAFE_SUCCESS,\n  LOG_ESCORT_ACTION_FAILURE,\n  SET_SAFETY_TIMER,\n  SET_TIMER_VALUE_SUCCESS,\n  SHOW_CALL_MODAL,\n  SHOW_EXIT_PANIC_MODAL,\n  SHOW_PANIC_INFO,\n  SHOW_SAFE_MODAL,\n  SHOW_SET_TIMER_MODAL,\n  START_PASSIVE_ESCORT_FAILURE,\n  START_PASSIVE_ESCORT_REQUEST,\n  START_PASSIVE_ESCORT_SUCCESS,\n  START_VIRTUAL_ESCORT_FAILURE,\n  START_VIRTUAL_ESCORT_REQUEST,\n  START_VIRTUAL_ESCORT_SUCCESS,\n  TRIGGER_COUNTDOWN_WARNING,\n} from './constants';\nimport { CountdownClockActionTypes, CountdownState } from './types';\n\nexport const initialState: CountdownState = {\n  timer: undefined,\n  procedure: undefined,\n  actions: undefined,\n  error: false,\n  errorMessage: '',\n  isLoadingProcedure: false,\n  shouldShowSetTimerModal: false,\n  isUserDefinedTimer: false,\n  shouldShowCallModal: false,\n  shouldShowSafeModal: false,\n  shouldShowExitPanicModal: false,\n  shouldShowPanicInfo: false,\n  requestingImSafe: false,\n  isPanicMode: false,\n  warningTriggered: false,\n  isCreatingPassiveEscort: false,\n  incident: undefined,\n  requestingVirtualEscort: false,\n  activeCountdown: false,\n  safetyTimer: false,\n};\n\nconst countdownClockScreenReducer = produce(\n  (draft: Draft<CountdownState>, action: CountdownClockActionTypes) => {\n    // //(\"action type--->\",action.type)\n    // //(\"action --->\",JSON.stringify(action))\n    switch (action.type) {\n      case GET_PROCEDURE_REQUEST:\n        draft.isLoadingProcedure = true;\n        break;\n      case GET_PROCEDURE_SUCCESS:\n        draft.procedure = action.payload;\n        draft.actions = action.payload.actions;\n        draft.timer = action.payload.timer;\n        draft.isUserDefinedTimer = action.payload.timer <= 0;\n        draft.isLoadingProcedure = false;\n        break;\n      case GET_PROCEDURE_FAILURE:\n        draft.error = action.error;\n        draft.errorMessage = action.payload.message;\n        draft.isLoadingProcedure = false;\n        break;\n      case SHOW_SET_TIMER_MODAL:\n        draft.shouldShowSetTimerModal = true;\n        break;\n      case HIDE_SET_TIMER_MODAL:\n        draft.shouldShowSetTimerModal = false;\n        break;\n      case SET_TIMER_VALUE_SUCCESS:\n        draft.timer = action.payload;\n        // //(\"draft timer --->\",draft.timer)\n        break;\n      case COMPLETE_PROCEDURE_ACTION:\n        draft.actions = map(draft.actions, act => {\n          if (act.id === action.payload) {\n            return {\n              ...act,\n              isCompleted: !act.isCompleted,\n            };\n          }\n          return {\n            ...act,\n          };\n        });\n        break;\n      case SHOW_CALL_MODAL:\n        draft.shouldShowCallModal = true;\n        break;\n      case HIDE_CALL_MODAL:\n        draft.shouldShowCallModal = false;\n        break;\n      case SHOW_SAFE_MODAL:\n        draft.shouldShowSafeModal = true;\n        break;\n      case HIDE_SAFE_MODAL:\n        draft.shouldShowSafeModal = false;\n        break;\n      case IM_SAFE_REQUEST:\n        draft.requestingImSafe = true;\n        break;\n      case IM_SAFE_SUCCESS:\n        draft.requestingImSafe = false;\n        draft.isPanicMode = false;\n        draft.activeCountdown = false;\n        draft.procedure = undefined;\n        draft.actions = undefined;\n        draft.timer = undefined;\n        draft.incident = undefined;\n        draft.safetyTimer = false;\n        break;\n      case IM_SAFE_FAILURE:\n        draft.requestingImSafe = false;\n        break;\n      case SHOW_PANIC_INFO:\n        draft.shouldShowPanicInfo = true;\n        break;\n      case HIDE_PANIC_INFO:\n        draft.shouldShowPanicInfo = false;\n        break;\n      case ENTER_PANIC_MODE:\n        draft.isPanicMode = true;\n        draft.activeCountdown = false;\n        draft.requestingVirtualEscort = true;\n        break;\n      case ENTER_PANIC_MODE_SUCCESS:\n        draft.isPanicMode = false;\n        draft.requestingVirtualEscort = false;\n        break;\n      case ENTER_PANIC_MODE_FAILURE:\n        draft.error = action.error;\n        draft.errorMessage = action.payload.message;\n        draft.requestingVirtualEscort = false;\n        break;\n      case SHOW_EXIT_PANIC_MODAL:\n        draft.shouldShowExitPanicModal = true;\n        break;\n      case HIDE_EXIT_PANIC_MODAL:\n        draft.shouldShowExitPanicModal = false;\n        break;\n      case TRIGGER_COUNTDOWN_WARNING:\n        draft.warningTriggered = true;\n        break;\n      case CANCEL_COUNTDOWN_WARNING:\n        draft.warningTriggered = false;\n        break;\n      case START_PASSIVE_ESCORT_REQUEST:\n        draft.isCreatingPassiveEscort = true;\n        break;\n      case START_PASSIVE_ESCORT_SUCCESS:\n        draft.isCreatingPassiveEscort = false;\n        draft.activeCountdown = true;\n        draft.incident = action.payload;\n        break;\n      case START_PASSIVE_ESCORT_FAILURE:\n        draft.isCreatingPassiveEscort = false;\n        break;\n      case START_VIRTUAL_ESCORT_REQUEST:\n        draft.activeCountdown = false;\n        draft.requestingVirtualEscort = true;\n        break;\n      case START_VIRTUAL_ESCORT_SUCCESS:\n        draft.requestingVirtualEscort = false;\n        break;\n      case START_VIRTUAL_ESCORT_FAILURE:\n        draft.error = action.error;\n        draft.errorMessage = action.payload.message;\n        draft.requestingVirtualEscort = false;\n        break;\n      case CLEAR_ARE_YOU_SAFE:\n        draft.actions = map(draft.actions, act => {\n          if (act.finalAction) {\n            return {\n              ...act,\n              isCompleted: false,\n            };\n          }\n          return {\n            ...act,\n          };\n        });\n        break;\n      case LOG_ESCORT_ACTION_FAILURE:\n        draft.error = action.error;\n        draft.errorMessage = action.payload.message;\n        break;\n      case CLEAR_ESCORT_ERROR:\n        draft.error = false;\n        draft.errorMessage = '';\n        break;\n      case CLEAR_PROCEDURE:\n        draft.procedure = undefined;\n        draft.actions = undefined;\n        draft.timer = undefined;\n        draft.isUserDefinedTimer = false;\n        draft.safetyTimer = false;\n        break;\n      case SET_SAFETY_TIMER:\n        draft.isUserDefinedTimer = true;\n        draft.timer = draft.timer ? draft.timer : 0; // Don't overwrite a timer that's been set already\n        draft.procedure = {\n          id: EscortType.Safety,\n          timer: 0,\n          name: 'Safety Timer',\n          actions: [],\n          organization: action.payload,\n        };\n        draft.safetyTimer = true;\n        break;\n      default:\n        break;\n    }\n  },\n  initialState,\n);\n\nexport default countdownClockScreenReducer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,OAAO,MAAiB,OAAO;AACtC,OAAOC,GAAG,MAAM,YAAY;AAE5B,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SACEC,wBAAwB,EACxBC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,yBAAyB,EACzBC,gBAAgB,EAChBC,wBAAwB,EACxBC,wBAAwB,EACxBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,eAAe,EACfC,qBAAqB,EACrBC,eAAe,EACfC,eAAe,EACfC,oBAAoB,EACpBC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,yBAAyB,EACzBC,gBAAgB,EAChBC,uBAAuB,EACvBC,eAAe,EACfC,qBAAqB,EACrBC,eAAe,EACfC,eAAe,EACfC,oBAAoB,EACpBC,4BAA4B,EAC5BC,4BAA4B,EAC5BC,4BAA4B,EAC5BC,4BAA4B,EAC5BC,4BAA4B,EAC5BC,4BAA4B,EAC5BC,yBAAyB,QACpB,aAAa;AAGpB,OAAO,MAAMC,YAA4B,GAAG;EAC1CC,KAAK,EAAEC,SAAS;EAChBC,SAAS,EAAED,SAAS;EACpBE,OAAO,EAAEF,SAAS;EAClBG,KAAK,EAAE,KAAK;EACZC,YAAY,EAAE,EAAE;EAChBC,kBAAkB,EAAE,KAAK;EACzBC,uBAAuB,EAAE,KAAK;EAC9BC,kBAAkB,EAAE,KAAK;EACzBC,mBAAmB,EAAE,KAAK;EAC1BC,mBAAmB,EAAE,KAAK;EAC1BC,wBAAwB,EAAE,KAAK;EAC/BC,mBAAmB,EAAE,KAAK;EAC1BC,gBAAgB,EAAE,KAAK;EACvBC,WAAW,EAAE,KAAK;EAClBC,gBAAgB,EAAE,KAAK;EACvBC,uBAAuB,EAAE,KAAK;EAC9BC,QAAQ,EAAEhB,SAAS;EACnBiB,uBAAuB,EAAE,KAAK;EAC9BC,eAAe,EAAE,KAAK;EACtBC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,2BAA2B,GAAG3D,OAAO,CACzC,CAAC4D,KAA4B,EAAEC,MAAiC,KAAK;EACnE;EACA;EACA,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKlD,qBAAqB;MACxBgD,KAAK,CAAChB,kBAAkB,GAAG,IAAI;MAC/B;IACF,KAAK/B,qBAAqB;MACxB+C,KAAK,CAACpB,SAAS,GAAGqB,MAAM,CAACE,OAAO;MAChCH,KAAK,CAACnB,OAAO,GAAGoB,MAAM,CAACE,OAAO,CAACtB,OAAO;MACtCmB,KAAK,CAACtB,KAAK,GAAGuB,MAAM,CAACE,OAAO,CAACzB,KAAK;MAClCsB,KAAK,CAACd,kBAAkB,GAAGe,MAAM,CAACE,OAAO,CAACzB,KAAK,IAAI,CAAC;MACpDsB,KAAK,CAAChB,kBAAkB,GAAG,KAAK;MAChC;IACF,KAAKjC,qBAAqB;MACxBiD,KAAK,CAAClB,KAAK,GAAGmB,MAAM,CAACnB,KAAK;MAC1BkB,KAAK,CAACjB,YAAY,GAAGkB,MAAM,CAACE,OAAO,CAACC,OAAO;MAC3CJ,KAAK,CAAChB,kBAAkB,GAAG,KAAK;MAChC;IACF,KAAKf,oBAAoB;MACvB+B,KAAK,CAACf,uBAAuB,GAAG,IAAI;MACpC;IACF,KAAK3B,oBAAoB;MACvB0C,KAAK,CAACf,uBAAuB,GAAG,KAAK;MACrC;IACF,KAAKrB,uBAAuB;MAC1BoC,KAAK,CAACtB,KAAK,GAAGuB,MAAM,CAACE,OAAO;MAC5B;MACA;IACF,KAAKxD,yBAAyB;MAC5BqD,KAAK,CAACnB,OAAO,GAAGxC,GAAG,CAAC2D,KAAK,CAACnB,OAAO,EAAEwB,GAAG,IAAI;QACxC,IAAIA,GAAG,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,EAAE;UAC7B,OAAO;YACL,GAAGE,GAAG;YACNE,WAAW,EAAE,CAACF,GAAG,CAACE;UACpB,CAAC;QACH;QACA,OAAO;UACL,GAAGF;QACL,CAAC;MACH,CAAC,CAAC;MACF;IACF,KAAKxC,eAAe;MAClBmC,KAAK,CAACb,mBAAmB,GAAG,IAAI;MAChC;IACF,KAAKjC,eAAe;MAClB8C,KAAK,CAACb,mBAAmB,GAAG,KAAK;MACjC;IACF,KAAKnB,eAAe;MAClBgC,KAAK,CAACZ,mBAAmB,GAAG,IAAI;MAChC;IACF,KAAK/B,eAAe;MAClB2C,KAAK,CAACZ,mBAAmB,GAAG,KAAK;MACjC;IACF,KAAK5B,eAAe;MAClBwC,KAAK,CAACT,gBAAgB,GAAG,IAAI;MAC7B;IACF,KAAK9B,eAAe;MAClBuC,KAAK,CAACT,gBAAgB,GAAG,KAAK;MAC9BS,KAAK,CAACR,WAAW,GAAG,KAAK;MACzBQ,KAAK,CAACH,eAAe,GAAG,KAAK;MAC7BG,KAAK,CAACpB,SAAS,GAAGD,SAAS;MAC3BqB,KAAK,CAACnB,OAAO,GAAGF,SAAS;MACzBqB,KAAK,CAACtB,KAAK,GAAGC,SAAS;MACvBqB,KAAK,CAACL,QAAQ,GAAGhB,SAAS;MAC1BqB,KAAK,CAACF,WAAW,GAAG,KAAK;MACzB;IACF,KAAKvC,eAAe;MAClByC,KAAK,CAACT,gBAAgB,GAAG,KAAK;MAC9B;IACF,KAAKxB,eAAe;MAClBiC,KAAK,CAACV,mBAAmB,GAAG,IAAI;MAChC;IACF,KAAKlC,eAAe;MAClB4C,KAAK,CAACV,mBAAmB,GAAG,KAAK;MACjC;IACF,KAAK1C,gBAAgB;MACnBoD,KAAK,CAACR,WAAW,GAAG,IAAI;MACxBQ,KAAK,CAACH,eAAe,GAAG,KAAK;MAC7BG,KAAK,CAACJ,uBAAuB,GAAG,IAAI;MACpC;IACF,KAAK9C,wBAAwB;MAC3BkD,KAAK,CAACR,WAAW,GAAG,KAAK;MACzBQ,KAAK,CAACJ,uBAAuB,GAAG,KAAK;MACrC;IACF,KAAK/C,wBAAwB;MAC3BmD,KAAK,CAAClB,KAAK,GAAGmB,MAAM,CAACnB,KAAK;MAC1BkB,KAAK,CAACjB,YAAY,GAAGkB,MAAM,CAACE,OAAO,CAACC,OAAO;MAC3CJ,KAAK,CAACJ,uBAAuB,GAAG,KAAK;MACrC;IACF,KAAK9B,qBAAqB;MACxBkC,KAAK,CAACX,wBAAwB,GAAG,IAAI;MACrC;IACF,KAAKlC,qBAAqB;MACxB6C,KAAK,CAACX,wBAAwB,GAAG,KAAK;MACtC;IACF,KAAKb,yBAAyB;MAC5BwB,KAAK,CAACP,gBAAgB,GAAG,IAAI;MAC7B;IACF,KAAKlD,wBAAwB;MAC3ByD,KAAK,CAACP,gBAAgB,GAAG,KAAK;MAC9B;IACF,KAAKtB,4BAA4B;MAC/B6B,KAAK,CAACN,uBAAuB,GAAG,IAAI;MACpC;IACF,KAAKtB,4BAA4B;MAC/B4B,KAAK,CAACN,uBAAuB,GAAG,KAAK;MACrCM,KAAK,CAACH,eAAe,GAAG,IAAI;MAC5BG,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACE,OAAO;MAC/B;IACF,KAAKjC,4BAA4B;MAC/B8B,KAAK,CAACN,uBAAuB,GAAG,KAAK;MACrC;IACF,KAAKpB,4BAA4B;MAC/B0B,KAAK,CAACH,eAAe,GAAG,KAAK;MAC7BG,KAAK,CAACJ,uBAAuB,GAAG,IAAI;MACpC;IACF,KAAKrB,4BAA4B;MAC/ByB,KAAK,CAACJ,uBAAuB,GAAG,KAAK;MACrC;IACF,KAAKvB,4BAA4B;MAC/B2B,KAAK,CAAClB,KAAK,GAAGmB,MAAM,CAACnB,KAAK;MAC1BkB,KAAK,CAACjB,YAAY,GAAGkB,MAAM,CAACE,OAAO,CAACC,OAAO;MAC3CJ,KAAK,CAACJ,uBAAuB,GAAG,KAAK;MACrC;IACF,KAAKpD,kBAAkB;MACrBwD,KAAK,CAACnB,OAAO,GAAGxC,GAAG,CAAC2D,KAAK,CAACnB,OAAO,EAAEwB,GAAG,IAAI;QACxC,IAAIA,GAAG,CAACG,WAAW,EAAE;UACnB,OAAO;YACL,GAAGH,GAAG;YACNE,WAAW,EAAE;UACf,CAAC;QACH;QACA,OAAO;UACL,GAAGF;QACL,CAAC;MACH,CAAC,CAAC;MACF;IACF,KAAK3C,yBAAyB;MAC5BsC,KAAK,CAAClB,KAAK,GAAGmB,MAAM,CAACnB,KAAK;MAC1BkB,KAAK,CAACjB,YAAY,GAAGkB,MAAM,CAACE,OAAO,CAACC,OAAO;MAC3C;IACF,KAAK3D,kBAAkB;MACrBuD,KAAK,CAAClB,KAAK,GAAG,KAAK;MACnBkB,KAAK,CAACjB,YAAY,GAAG,EAAE;MACvB;IACF,KAAKrC,eAAe;MAClBsD,KAAK,CAACpB,SAAS,GAAGD,SAAS;MAC3BqB,KAAK,CAACnB,OAAO,GAAGF,SAAS;MACzBqB,KAAK,CAACtB,KAAK,GAAGC,SAAS;MACvBqB,KAAK,CAACd,kBAAkB,GAAG,KAAK;MAChCc,KAAK,CAACF,WAAW,GAAG,KAAK;MACzB;IACF,KAAKnC,gBAAgB;MACnBqC,KAAK,CAACd,kBAAkB,GAAG,IAAI;MAC/Bc,KAAK,CAACtB,KAAK,GAAGsB,KAAK,CAACtB,KAAK,GAAGsB,KAAK,CAACtB,KAAK,GAAG,CAAC,CAAC,CAAC;MAC7CsB,KAAK,CAACpB,SAAS,GAAG;QAChB0B,EAAE,EAAEhE,UAAU,CAACmE,MAAM;QACrB/B,KAAK,EAAE,CAAC;QACRgC,IAAI,EAAE,cAAc;QACpB7B,OAAO,EAAE,EAAE;QACX8B,YAAY,EAAEV,MAAM,CAACE;MACvB,CAAC;MACDH,KAAK,CAACF,WAAW,GAAG,IAAI;MACxB;IACF;MACE;EACJ;AACF,CAAC,EACDrB,YACF,CAAC;AAED,eAAesB,2BAA2B","ignoreList":[]}