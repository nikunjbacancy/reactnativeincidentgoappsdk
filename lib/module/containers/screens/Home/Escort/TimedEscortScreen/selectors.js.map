{"version":3,"names":["find","isEmpty","some","createSelector","initialState","timedEscortScreenStateDomain","state","escortTimedEscortScreen","makeSelectIntersectOrganizations","organizations","makeSelectOrgGroups","organizationGroups","makeSelectSelectedOrganization","isSelected","makeSelectEnableContinueButton","error","makeSelectEnableNextButton","procedures","makeSelectRequestingOrganizations","requestingOrganizations","makeSelectError","makeSelectErrorMessage","errorMessage","makeSelectOrganizationProcedures","makeSelectSelectedProcedure","makeSelectSelectOrganizationScreenState","subState"],"sources":["selectors.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen selectors\n *\n */\n\nimport find from 'lodash/find';\nimport isEmpty from 'lodash/isEmpty';\nimport some from 'lodash/some';\nimport { createSelector } from 'reselect';\nimport { RootState } from 'store/types';\n\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the SelectOrganizationScreen state domain\n */\n\nconst timedEscortScreenStateDomain = (state: RootState) =>\n  state.escortTimedEscortScreen || initialState;\n\n/**\n * Other specific selectors\n */\n\nconst makeSelectIntersectOrganizations = () =>\n  createSelector(\n    timedEscortScreenStateDomain,\n    ({ organizations }) => organizations,\n  );\n\nconst makeSelectOrgGroups = () =>\n  createSelector(timedEscortScreenStateDomain, state => {\n    return state.organizationGroups;\n  });\n\nconst makeSelectSelectedOrganization = () =>\n  createSelector(timedEscortScreenStateDomain, ({ organizations }) =>\n    find(organizations, { isSelected: true }),\n  );\n\nconst makeSelectEnableContinueButton = () =>\n  createSelector(\n    timedEscortScreenStateDomain,\n    ({ organizations, error }) =>\n      isEmpty(organizations) ||\n      (some(organizations, { isSelected: true }) && !error),\n  );\n\nconst makeSelectEnableNextButton = () =>\n  createSelector(\n    timedEscortScreenStateDomain,\n    ({ procedures, error }) =>\n      !isEmpty(procedures) && some(procedures, { isSelected: true }) && !error,\n  );\n\nconst makeSelectRequestingOrganizations = () =>\n  createSelector(\n    timedEscortScreenStateDomain,\n    ({ requestingOrganizations }) => requestingOrganizations,\n  );\n\nconst makeSelectError = () =>\n  createSelector(timedEscortScreenStateDomain, ({ error }) => error);\n\nconst makeSelectErrorMessage = () =>\n  createSelector(\n    timedEscortScreenStateDomain,\n    ({ errorMessage }) => errorMessage,\n  );\n\nconst makeSelectOrganizationProcedures = () =>\n  createSelector(timedEscortScreenStateDomain, ({ procedures }) => procedures);\n\nconst makeSelectSelectedProcedure = () =>\n  createSelector(timedEscortScreenStateDomain, ({ procedures }) =>\n    find(procedures, { isSelected: true }),\n  );\n\n/**\n * Default selector used by SelectOrganizationScreen\n */\n\nconst makeSelectSelectOrganizationScreenState = () =>\n  createSelector(timedEscortScreenStateDomain, subState => subState);\n\nexport default makeSelectSelectOrganizationScreenState;\nexport {\n  timedEscortScreenStateDomain,\n  makeSelectIntersectOrganizations,\n  makeSelectSelectedOrganization,\n  makeSelectRequestingOrganizations,\n  makeSelectEnableContinueButton,\n  makeSelectOrganizationProcedures,\n  makeSelectError,\n  makeSelectErrorMessage,\n  makeSelectEnableNextButton,\n  makeSelectSelectedProcedure,\n  makeSelectOrgGroups,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,IAAI,MAAM,aAAa;AAC9B,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,cAAc,QAAQ,UAAU;AAGzC,SAASC,YAAY,QAAQ,WAAW;;AAExC;AACA;AACA;;AAEA,MAAMC,4BAA4B,GAAIC,KAAgB,IACpDA,KAAK,CAACC,uBAAuB,IAAIH,YAAY;;AAE/C;AACA;AACA;;AAEA,MAAMI,gCAAgC,GAAGA,CAAA,KACvCL,cAAc,CACZE,4BAA4B,EAC5B,CAAC;EAAEI;AAAc,CAAC,KAAKA,aACzB,CAAC;AAEH,MAAMC,mBAAmB,GAAGA,CAAA,KAC1BP,cAAc,CAACE,4BAA4B,EAAEC,KAAK,IAAI;EACpD,OAAOA,KAAK,CAACK,kBAAkB;AACjC,CAAC,CAAC;AAEJ,MAAMC,8BAA8B,GAAGA,CAAA,KACrCT,cAAc,CAACE,4BAA4B,EAAE,CAAC;EAAEI;AAAc,CAAC,KAC7DT,IAAI,CAACS,aAAa,EAAE;EAAEI,UAAU,EAAE;AAAK,CAAC,CAC1C,CAAC;AAEH,MAAMC,8BAA8B,GAAGA,CAAA,KACrCX,cAAc,CACZE,4BAA4B,EAC5B,CAAC;EAAEI,aAAa;EAAEM;AAAM,CAAC,KACvBd,OAAO,CAACQ,aAAa,CAAC,IACrBP,IAAI,CAACO,aAAa,EAAE;EAAEI,UAAU,EAAE;AAAK,CAAC,CAAC,IAAI,CAACE,KACnD,CAAC;AAEH,MAAMC,0BAA0B,GAAGA,CAAA,KACjCb,cAAc,CACZE,4BAA4B,EAC5B,CAAC;EAAEY,UAAU;EAAEF;AAAM,CAAC,KACpB,CAACd,OAAO,CAACgB,UAAU,CAAC,IAAIf,IAAI,CAACe,UAAU,EAAE;EAAEJ,UAAU,EAAE;AAAK,CAAC,CAAC,IAAI,CAACE,KACvE,CAAC;AAEH,MAAMG,iCAAiC,GAAGA,CAAA,KACxCf,cAAc,CACZE,4BAA4B,EAC5B,CAAC;EAAEc;AAAwB,CAAC,KAAKA,uBACnC,CAAC;AAEH,MAAMC,eAAe,GAAGA,CAAA,KACtBjB,cAAc,CAACE,4BAA4B,EAAE,CAAC;EAAEU;AAAM,CAAC,KAAKA,KAAK,CAAC;AAEpE,MAAMM,sBAAsB,GAAGA,CAAA,KAC7BlB,cAAc,CACZE,4BAA4B,EAC5B,CAAC;EAAEiB;AAAa,CAAC,KAAKA,YACxB,CAAC;AAEH,MAAMC,gCAAgC,GAAGA,CAAA,KACvCpB,cAAc,CAACE,4BAA4B,EAAE,CAAC;EAAEY;AAAW,CAAC,KAAKA,UAAU,CAAC;AAE9E,MAAMO,2BAA2B,GAAGA,CAAA,KAClCrB,cAAc,CAACE,4BAA4B,EAAE,CAAC;EAAEY;AAAW,CAAC,KAC1DjB,IAAI,CAACiB,UAAU,EAAE;EAAEJ,UAAU,EAAE;AAAK,CAAC,CACvC,CAAC;;AAEH;AACA;AACA;;AAEA,MAAMY,uCAAuC,GAAGA,CAAA,KAC9CtB,cAAc,CAACE,4BAA4B,EAAEqB,QAAQ,IAAIA,QAAQ,CAAC;AAEpE,eAAeD,uCAAuC;AACtD,SACEpB,4BAA4B,EAC5BG,gCAAgC,EAChCI,8BAA8B,EAC9BM,iCAAiC,EACjCJ,8BAA8B,EAC9BS,gCAAgC,EAChCH,eAAe,EACfC,sBAAsB,EACtBL,0BAA0B,EAC1BQ,2BAA2B,EAC3Bd,mBAAmB","ignoreList":[]}