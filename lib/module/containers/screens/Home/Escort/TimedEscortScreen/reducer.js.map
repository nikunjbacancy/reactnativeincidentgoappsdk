{"version":3,"names":["produce","map","CLEAR_SELECTIONS","GET_INTERSECT_ORGANIZATIONS_FAILURE","GET_INTERSECT_ORGANIZATIONS_REQUEST","GET_INTERSECT_ORGANIZATIONS_SUCCESS","GET_ORGANIZATION_PROCEDURES_FAILURE","GET_ORGANIZATION_PROCEDURES_REQUEST","GET_ORGANIZATION_PROCEDURES_SUCCESS","TOGGLE_SELECT_ORGANIZATION","TOGGLE_SELECT_PROCEDURE","initialState","organizations","undefined","requestingOrganizations","requestingProcedures","procedures","error","errorMessage","timedEscortScreenReducer","draft","action","type","organizationGroups","payload","group","id","_id","organization","isSelected","procedure","message","org"],"sources":["reducer.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen reducer\n *\n */\n\nimport produce, { Draft } from 'immer';\nimport map from 'lodash/map';\n\nimport {\n  CLEAR_SELECTIONS,\n  GET_INTERSECT_ORGANIZATIONS_FAILURE,\n  GET_INTERSECT_ORGANIZATIONS_REQUEST,\n  GET_INTERSECT_ORGANIZATIONS_SUCCESS,\n  GET_ORGANIZATION_PROCEDURES_FAILURE,\n  GET_ORGANIZATION_PROCEDURES_REQUEST,\n  GET_ORGANIZATION_PROCEDURES_SUCCESS,\n  TOGGLE_SELECT_ORGANIZATION,\n  TOGGLE_SELECT_PROCEDURE,\n} from './constants';\nimport { TimedEscortActionTypes, TimedEscortState } from './types';\n\nexport const initialState: TimedEscortState = {\n  organizations: undefined,\n  requestingOrganizations: true,\n  requestingProcedures: false,\n  procedures: undefined,\n  error: false,\n  errorMessage: '',\n};\n\nconst timedEscortScreenReducer = produce(\n  (draft: Draft<TimedEscortState>, action: TimedEscortActionTypes) => {\n    switch (action.type) {\n      case GET_INTERSECT_ORGANIZATIONS_REQUEST:\n        draft.requestingOrganizations = true;\n        draft.organizations = [];\n        draft.organizationGroups = [];\n        break;\n      case GET_INTERSECT_ORGANIZATIONS_SUCCESS:\n        draft.requestingOrganizations = false;\n        draft.organizations = action.payload.organizations;\n        draft.organizationGroups = map(\n          action.payload.organizationGroups,\n          (group: any) => {\n            // eslint-disable-next-line no-underscore-dangle\n            group.id = group._id;\n            return group;\n          },\n        );\n        break;\n      case GET_ORGANIZATION_PROCEDURES_REQUEST:\n        draft.requestingOrganizations = true;\n        break;\n      case GET_ORGANIZATION_PROCEDURES_SUCCESS:\n        draft.requestingOrganizations = false;\n        draft.procedures = action.payload;\n        break;\n      case TOGGLE_SELECT_ORGANIZATION:\n        draft.error = false;\n        draft.organizations = map(draft.organizations, organization => {\n          if (organization.id === action.payload) {\n            return {\n              ...organization,\n              isSelected: true,\n            };\n          }\n          return {\n            ...organization,\n            isSelected: false,\n          };\n        });\n        draft.organizationGroups = map(\n          draft.organizationGroups,\n          organization => {\n            if (organization.organization === action.payload) {\n              return {\n                ...organization,\n                isSelected: true,\n              };\n            }\n            return {\n              ...organization,\n              isSelected: false,\n            };\n          },\n        );\n        break;\n      case TOGGLE_SELECT_PROCEDURE:\n        draft.error = false;\n        draft.procedures = map(draft.procedures, procedure => {\n          if (procedure.id === action.payload) {\n            return {\n              ...procedure,\n              isSelected: !procedure.isSelected,\n            };\n          }\n          return {\n            ...procedure,\n            isSelected: false,\n          };\n        });\n        break;\n      case GET_INTERSECT_ORGANIZATIONS_FAILURE:\n        draft.error = action.error;\n        draft.errorMessage = action.payload.message;\n        draft.requestingOrganizations = false;\n        break;\n      case GET_ORGANIZATION_PROCEDURES_FAILURE:\n        draft.error = action.error;\n        draft.errorMessage = action.payload.message;\n        draft.requestingProcedures = false;\n        break;\n      case CLEAR_SELECTIONS:\n        draft.organizations = map(draft.organizations, org => ({\n          ...org,\n          isSelected: false,\n        }));\n        draft.procedures = map(draft.procedures, procedure => ({\n          ...procedure,\n          isSelected: false,\n        }));\n        break;\n      default:\n    }\n  },\n  initialState,\n);\n\nexport default timedEscortScreenReducer;\n"],"mappings":"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","ignoreList":[]}