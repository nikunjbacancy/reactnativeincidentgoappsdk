{"version":3,"names":["api","triggerOnboardForInactiveUser","Screens","call","put","takeLatest","handleError","getCachedFineGeoPoint","NavigatorService","startEscortRequest","EscortType","getIntersectOrganizationsFailure","getIntersectOrganizationsSuccess","toggleSelectOrganization","GET_INTERSECT_ORGANIZATIONS_REQUEST","getIntersectOrganizations","payload","location","response","organizations","findIntersectOrganizations","data","length","_organizations$","id","onLocation","navigate","Home","Escort","EscortRequest","isPanic","requestType","Live","error","organizationNotifyScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen saga\n *\n */\n\nimport * as api from '../../../../../api';\nimport { triggerOnboardForInactiveUser } from '../../../../../containers/app/saga';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport { GeoPoint, Id } from 'incident-code-core';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../../utils/error';\nimport { getCachedFineGeoPoint } from '../../../../../utils/location';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport { startEscortRequest } from '../RequestScreen/actions';\nimport { EscortType } from '../RequestScreen/types';\n// import { startChatFailure, startChatSuccess } from '../RecordScreen/actions';\nimport {\n  getIntersectOrganizationsFailure,\n  getIntersectOrganizationsSuccess,\n  toggleSelectOrganization,\n} from './actions';\nimport { GET_INTERSECT_ORGANIZATIONS_REQUEST } from './constants';\nimport { GetIntersectOrganizationsRequestAction } from './types';\n\nfunction* getIntersectOrganizations({\n  payload,\n}: GetIntersectOrganizationsRequestAction): any {\n  try {\n    const location: GeoPoint = yield call(getCachedFineGeoPoint);\n    const response = yield call(\n      api.organizations.findIntersectOrganizations,\n      location,\n    );\n\n    const { organizations } = response.data;\n\n    yield put(getIntersectOrganizationsSuccess(organizations));\n    if (organizations.length === 0) {\n      yield* triggerOnboardForInactiveUser();\n    }\n    if (organizations.length === 1) {\n      yield put(toggleSelectOrganization(organizations[0]?.id as Id));\n      yield put(startEscortRequest(payload.onLocation));\n      yield call(NavigatorService.navigate, Screens.Home.Escort.EscortRequest, {\n        isPanic: false,\n        requestType: EscortType.Live,\n      });\n    }\n  } catch (error: any) {\n    yield put(getIntersectOrganizationsFailure(handleError(error)));\n  }\n}\n\nexport default function* organizationNotifyScreenSaga() {\n  yield takeLatest(\n    GET_INTERSECT_ORGANIZATIONS_REQUEST,\n    getIntersectOrganizations,\n  );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,GAAG,MAAM,oBAAoB;AACzC,SAASC,6BAA6B,QAAQ,oCAAoC;AAClF,OAAOC,OAAO,MAAM,4DAA4D;AAEhF,SAASC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,OAAOC,gBAAgB,MAAM,iCAAiC;AAE9D,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,UAAU,QAAQ,wBAAwB;AACnD;AACA,SACEC,gCAAgC,EAChCC,gCAAgC,EAChCC,wBAAwB,QACnB,WAAW;AAClB,SAASC,mCAAmC,QAAQ,aAAa;AAGjE,UAAUC,yBAAyBA,CAAC;EAClCC;AACsC,CAAC,EAAO;EAC9C,IAAI;IACF,MAAMC,QAAkB,GAAG,MAAMd,IAAI,CAACI,qBAAqB,CAAC;IAC5D,MAAMW,QAAQ,GAAG,MAAMf,IAAI,CACzBH,GAAG,CAACmB,aAAa,CAACC,0BAA0B,EAC5CH,QACF,CAAC;IAED,MAAM;MAAEE;IAAc,CAAC,GAAGD,QAAQ,CAACG,IAAI;IAEvC,MAAMjB,GAAG,CAACQ,gCAAgC,CAACO,aAAa,CAAC,CAAC;IAC1D,IAAIA,aAAa,CAACG,MAAM,KAAK,CAAC,EAAE;MAC9B,OAAOrB,6BAA6B,CAAC,CAAC;IACxC;IACA,IAAIkB,aAAa,CAACG,MAAM,KAAK,CAAC,EAAE;MAAA,IAAAC,eAAA;MAC9B,MAAMnB,GAAG,CAACS,wBAAwB,EAAAU,eAAA,GAACJ,aAAa,CAAC,CAAC,CAAC,cAAAI,eAAA,uBAAhBA,eAAA,CAAkBC,EAAQ,CAAC,CAAC;MAC/D,MAAMpB,GAAG,CAACK,kBAAkB,CAACO,OAAO,CAACS,UAAU,CAAC,CAAC;MACjD,MAAMtB,IAAI,CAACK,gBAAgB,CAACkB,QAAQ,EAAExB,OAAO,CAACyB,IAAI,CAACC,MAAM,CAACC,aAAa,EAAE;QACvEC,OAAO,EAAE,KAAK;QACdC,WAAW,EAAErB,UAAU,CAACsB;MAC1B,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnB,MAAM7B,GAAG,CAACO,gCAAgC,CAACL,WAAW,CAAC2B,KAAK,CAAC,CAAC,CAAC;EACjE;AACF;AAEA,eAAe,UAAUC,4BAA4BA,CAAA,EAAG;EACtD,MAAM7B,UAAU,CACdS,mCAAmC,EACnCC,yBACF,CAAC;AACH","ignoreList":[]}