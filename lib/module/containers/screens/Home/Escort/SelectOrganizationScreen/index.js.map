{"version":3,"names":["images","Header","LoadingIndicator","SafeAreaContainer","ScreenActionButton","UpdateLocationData","Screens","isEmpty","React","useCallback","useEffect","useState","useIntl","Keyboard","StatusBar","View","withNavigationFocus","makeCall","useAction","useSelector","NavigatorService","EscortType","startEscortRequest","getIntersectOrganizationsRequest","toggleSelectOrganization","messages","makeSelectEnableContinueButton","makeSelectError","makeSelectErrorMessage","makeSelectIntersectOrganizations","makeSelectRequestingOrganizations","AddCommentInput","AddCommentRow","AddCommentText","Call911Button","Call911Container","Call911Info","Call911Title","Container","CreateEscortButtonRow","ErrorMessage","ErrorRow","InfoRow","InfoText","ItemCheckImage","ItemRow","ItemText","List","EscortScreen","isFocused","formatMessage","comment","setComment","isKeyboardShow","setIsKeyboardShow","organizations","nextButtonEnabled","error","errorMessage","requestingOrganizations","toggleSelectOrganizationAction","getIntersectOrganizationsAction","setLocation","startEscortAction","subscriptions","addListener","forEach","s","_s$remove","remove","call","call911","handleStartEscort","navigate","Home","Escort","EscortRequest","isPanic","requestType","Live","createElement","renderHeader","Fragment","title","info","renderItem","itemInfo","organization","item","onPress","id","isSelected","source","icCheck","name","renderOrganizations","console","log","call911Title","call911Info","text","keyExtractor","org","_org$id","toString","data","extraData","style","marginTop","addComment","keyboardAppearance","placeholder","commentPlaceholder","value","onChangeText","multiline","numberOfLines","disabled","requestEscort","barStyle","backgroundColor","isKeyboard"],"sources":["index.tsx"],"sourcesContent":["import { images } from '../../../../../assets';\nimport {\n  Header,\n  LoadingIndicator,\n  SafeAreaContainer,\n  ScreenActionButton,\n} from '../../../../../components';\nimport { UpdateLocationData } from '../../../../../containers/app/actions';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport isEmpty from 'lodash/isEmpty';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Keyboard, ListRenderItemInfo, StatusBar, View, EmitterSubscription } from 'react-native';\nimport { withNavigationFocus } from 'react-navigation';\nimport { OrganizationSelection } from 'types';\nimport { makeCall } from '../../../../../utils/device';\nimport { useAction, useSelector } from '../../../../../utils/hooks';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport { EscortType } from '../EscortTypeScreen/types';\nimport { startEscortRequest } from '../RequestScreen/actions';\nimport {\n  getIntersectOrganizationsRequest,\n  toggleSelectOrganization,\n} from './actions';\nimport messages from './messages';\nimport {\n  makeSelectEnableContinueButton,\n  makeSelectError,\n  makeSelectErrorMessage,\n  makeSelectIntersectOrganizations,\n  makeSelectRequestingOrganizations,\n} from './selectors';\nimport {\n  AddCommentInput,\n  AddCommentRow,\n  AddCommentText,\n  Call911Button,\n  Call911Container,\n  Call911Info,\n  Call911Title,\n  Container,\n  CreateEscortButtonRow,\n  ErrorMessage,\n  ErrorRow,\n  InfoRow,\n  InfoText,\n  ItemCheckImage,\n  ItemRow,\n  ItemText,\n  List,\n} from './styles';\n\ninterface Props {\n  isFocused: boolean;\n}\n\nconst EscortScreen: FC<Props> = ({ isFocused }) => {\n  const { formatMessage } = useIntl();\n\n  const [comment, setComment] = useState('');\n  const [isKeyboardShow, setIsKeyboardShow] = useState(false);\n\n  const organizations = useSelector(makeSelectIntersectOrganizations());\n  const nextButtonEnabled = useSelector(makeSelectEnableContinueButton());\n  const error = useSelector(makeSelectError());\n  const errorMessage = useSelector(makeSelectErrorMessage());\n  const requestingOrganizations = useSelector(\n    makeSelectRequestingOrganizations(),\n  );\n\n  const toggleSelectOrganizationAction = useAction(toggleSelectOrganization);\n  const getIntersectOrganizationsAction = useAction(\n    getIntersectOrganizationsRequest,\n  );\n  const setLocation = useAction(UpdateLocationData);\n  const startEscortAction = useAction(startEscortRequest);\n\n  useEffect(() => {\n    if (isFocused) {\n      getIntersectOrganizationsAction(setLocation);\n    }\n\n    let subscriptions: EmitterSubscription[];\n    subscriptions = [\n      Keyboard.addListener(\n        'keyboardDidShow',\n        () => setIsKeyboardShow(true),\n      ),\n      Keyboard.addListener(\n        'keyboardDidHide',\n        () => setIsKeyboardShow(false),\n      )\n    ];\n\n    return () => {\n      subscriptions.forEach((s) => s?.remove?.());\n    }\n\n  }, [isFocused]);\n\n  const call911 = useCallback(() => makeCall('911'), []);\n\n  const handleStartEscort = useCallback(() => {\n    startEscortAction(setLocation, comment);\n    setComment('');\n    NavigatorService.navigate(Screens.Home.Escort.EscortRequest, {\n      isPanic: false,\n      requestType: EscortType.Live,\n    });\n  }, [setLocation, comment]);\n\n  if (requestingOrganizations) return <LoadingIndicator />;\n\n  const renderHeader = () => (\n    <>\n      <Header title={formatMessage(messages.title)} />\n      <InfoRow>\n        <InfoText>{formatMessage(messages.info)}</InfoText>\n      </InfoRow>\n      {error && (\n        <ErrorRow>\n          <ErrorMessage>{errorMessage}</ErrorMessage>\n        </ErrorRow>\n      )}\n    </>\n  );\n\n  const renderItem = (itemInfo: ListRenderItemInfo<OrganizationSelection>) => {\n    const organization = itemInfo.item;\n\n    return (\n      <ItemRow onPress={() => toggleSelectOrganizationAction(organization.id)}>\n        <>\n          {organization.isSelected && (\n            <ItemCheckImage source={images.icCheck()} />\n          )}\n          <ItemText>{itemInfo.item.name}</ItemText>\n        </>\n      </ItemRow>\n    );\n  };\n\n  const renderOrganizations = () => {\n    {console.log(\"render org==>\",organizations)}\n    if (isEmpty(organizations)) {\n      return (\n        <>\n          <Header title={formatMessage(messages.title)} />\n          <Call911Container>\n            <Call911Title>{formatMessage(messages.call911Title)}</Call911Title>\n            <Call911Info>{formatMessage(messages.call911Info)}</Call911Info>\n            <Call911Button\n              text={formatMessage(messages.call911)}\n              onPress={call911}\n            />\n          </Call911Container>\n        </>\n      );\n    }\n    return (\n      <>\n        {renderHeader()}\n        <List\n          keyExtractor={(org: any) => org?.id?.toString() || ''}\n          data={organizations || []}\n          extraData={organizations}\n          renderItem={renderItem}\n        />\n        <View style={{ marginTop: 'auto' }}>\n          <AddCommentText>{formatMessage(messages.addComment)}</AddCommentText>\n          <AddCommentRow>\n            <AddCommentInput\n              keyboardAppearance=\"light\"\n              placeholder={formatMessage(messages.commentPlaceholder)}\n              value={comment}\n              onChangeText={setComment}\n              multiline\n              numberOfLines={4}\n            />\n          </AddCommentRow>\n        </View>\n        <CreateEscortButtonRow>\n          <ScreenActionButton\n            disabled={!nextButtonEnabled}\n            text={formatMessage(messages.requestEscort)}\n            onPress={handleStartEscort}\n          />\n        </CreateEscortButtonRow>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <SafeAreaContainer>\n        <Container isKeyboard={isKeyboardShow}>\n          {renderOrganizations()}\n        </Container>\n      </SafeAreaContainer>\n    </>\n  );\n};\n\nexport default withNavigationFocus(EscortScreen);\n"],"mappings":"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","ignoreList":[]}