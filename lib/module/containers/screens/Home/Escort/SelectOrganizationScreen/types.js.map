{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen types\n *\n */\n\nimport { Id } from 'incident-code-core';\nimport { Location } from 'react-native-background-geolocation';\nimport { IntersectOrganizationSelection, OrganizationSelection } from 'types';\n\nimport {\n  GET_INTERSECT_ORGANIZATIONS_FAILURE,\n  GET_INTERSECT_ORGANIZATIONS_REQUEST,\n  GET_INTERSECT_ORGANIZATIONS_SUCCESS,\n  TOGGLE_SELECT_ORGANIZATION,\n} from './constants';\n\nexport interface SelectOrganizationState {\n  organizations?: OrganizationSelection[];\n  organizationGroups: any;\n  requestingOrganizations: boolean;\n  error: boolean;\n  errorMessage: string;\n}\n\nexport interface GetIntersectOrganizationsRequestAction {\n  type: typeof GET_INTERSECT_ORGANIZATIONS_REQUEST;\n  payload: {\n    onLocation: (location: Location) => void;\n  };\n}\n\nexport interface GetIntersectOrganizationsSuccessAction {\n  type: typeof GET_INTERSECT_ORGANIZATIONS_SUCCESS;\n  payload: {\n    organizations: IntersectOrganizationSelection[];\n    organizationGroups: [];\n  };\n}\n\nexport interface GetIntersectOrganizationsFailureAction {\n  type: typeof GET_INTERSECT_ORGANIZATIONS_FAILURE;\n  payload: Error;\n  error: boolean;\n}\n\nexport interface ToggleSelectOrganizationAction {\n  type: typeof TOGGLE_SELECT_ORGANIZATION;\n  payload: Id;\n}\n\nexport type SelectOrganizationActionTypes =\n  | GetIntersectOrganizationsRequestAction\n  | GetIntersectOrganizationsSuccessAction\n  | GetIntersectOrganizationsFailureAction\n  | ToggleSelectOrganizationAction;\n"],"mappings":"","ignoreList":[]}