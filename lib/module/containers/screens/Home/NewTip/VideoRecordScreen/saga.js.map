{"version":3,"names":["api","triggerOnboardForInactiveUser","makeSelectNewTipIncident","removeScreenAction","call","delay","put","select","spawn","takeLatest","handleError","getIntersectOrganizationsRequest","addIncidentVideo","createIncidentFailure","createIncidentSuccess","createTipWithChatFailure","createTipWithChatSuccess","deleteIncidentFailure","deleteIncidentSuccess","getLastTipOrganizationFailure","getLastTipOrganizationSuccess","getUserOrganizationsFailure","getUserOrganizationsSuccess","hideCancelIncidentModal","uploadVideoFailure","uploadVideoSuccess","CREATE_INCIDENT_REQUEST","CREATE_TIP_WITH_CHAT_REQUEST","DELETE_INCIDENT_REQUEST","GET_LAST_ACTIVE_TIP_ORGANIZATION_REQUEST","GET_USER_ORGANIZATIONS_REQUEST","UPLOAD_VIDEO_REQUEST","createIncident","response","incidents","data","logger","debug","error","warn","uploadVideo","payload","uploadVideoInParallel","filePath","options","getAmazonS3Options","id","isUploaded","checkVideoUploadCompletion","incident","amazonOptionsResponse","getAmazonOptions","i","getVideo","Error","deleteIncident","getUserOrganizations","organizations","code","createTipWithChat","getLastActiveTipOrganization","organizationResponse","getOrganization","newTipScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * VideoRecordScreen saga\n *\n */\n\nimport * as api from '../../../../../api';\nimport { AxiosResponse } from 'axios';\nimport { triggerOnboardForInactiveUser } from '../../../../../containers/app/saga';\nimport { makeSelectNewTipIncident } from '../../../../../containers/app/selectors';\nimport { removeScreenAction } from '../../../../../containers/providers/RoutesProvider/actions';\nimport {\n  Incident,\n  IncidentVideo,\n  IncidentVideoUploadOptions,\n  Organization,\n} from 'incident-code-core';\nimport {\n  call,\n  delay,\n  put,\n  select,\n  spawn,\n  takeLatest,\n} from 'redux-saga/effects';\nimport { handleError } from '../../../../../utils/error';\n\nimport { getIntersectOrganizationsRequest } from '../SelectOrganizationScreen/actions';\nimport {\n  addIncidentVideo,\n  createIncidentFailure,\n  createIncidentSuccess,\n  createTipWithChatFailure,\n  createTipWithChatSuccess,\n  deleteIncidentFailure,\n  deleteIncidentSuccess,\n  getLastTipOrganizationFailure,\n  getLastTipOrganizationSuccess,\n  getUserOrganizationsFailure,\n  getUserOrganizationsSuccess,\n  hideCancelIncidentModal,\n  uploadVideoFailure,\n  uploadVideoSuccess,\n} from './actions';\nimport {\n  CREATE_INCIDENT_REQUEST,\n  CREATE_TIP_WITH_CHAT_REQUEST,\n  DELETE_INCIDENT_REQUEST,\n  GET_LAST_ACTIVE_TIP_ORGANIZATION_REQUEST,\n  GET_USER_ORGANIZATIONS_REQUEST,\n  UPLOAD_VIDEO_REQUEST,\n} from './constants';\nimport {\n  GetLastActiveTipOrganizationRequestAction,\n  UploadVideoRequestAction,\n} from './types';\n\nexport function* createIncident() {\n  try {\n    const response: AxiosResponse<Incident> = yield call(\n      api.incidents.createIncident,\n    );\n    yield put(createIncidentSuccess(response.data));\n    api.logger.debug('CreateIncident', 'Success', response.data);\n  } catch (error: any) {\n    api.logger.warn('CreateIncident', 'Create Failed', error);\n    yield put(createIncidentFailure(handleError(error)));\n  }\n}\n\nexport function* uploadVideo({ payload }: UploadVideoRequestAction) {\n  yield spawn(uploadVideoInParallel, payload);\n}\n\nfunction* uploadVideoInParallel(filePath: string): any {\n  try {\n    const options = yield call(getAmazonS3Options, filePath);\n\n    // add empty video card\n    yield put(addIncidentVideo({ id: options.id, isUploaded: false }));\n\n    yield call(api.incidents.uploadVideo, options);\n\n    yield call(checkVideoUploadCompletion, options);\n\n    yield put(uploadVideoSuccess());\n\n    api.logger.debug('UploadVideo', 'Success');\n  } catch (error: any) {\n    api.logger.warn('UploadVideo', 'Upload Failed', error);\n    yield put(uploadVideoFailure(handleError(error)));\n  }\n}\n\nfunction* getAmazonS3Options(filePath: string) {\n  let incident: Incident = yield select(makeSelectNewTipIncident());\n  try {\n    if (!incident) {\n      yield call(createIncident);\n      incident = yield select(makeSelectNewTipIncident());\n    }\n\n    // get amazon S3 authorization\n    const amazonOptionsResponse: AxiosResponse<IncidentVideoUploadOptions> = yield call(\n      api.incidents.getAmazonOptions,\n      incident,\n      filePath,\n    );\n\n    api.logger.debug('Get S3 options', 'Success', amazonOptionsResponse.data);\n\n    return amazonOptionsResponse.data;\n  } catch (error: any) {\n    api.logger.warn('Get S3 options', 'Failed', error);\n    yield put(uploadVideoFailure(handleError(error)));\n    return null;\n  }\n}\n\nfunction* checkVideoUploadCompletion(options: IncidentVideoUploadOptions) {\n  for (let i = 0; i < 10; i += 1) {\n    try {\n      const response: AxiosResponse<IncidentVideo> = yield call(\n        api.incidents.getVideo,\n        options.id,\n      );\n      if (response.data.isUploaded) {\n        yield put(addIncidentVideo(response.data));\n        api.logger.debug('CheckVideoUpload', 'Success', response.data);\n        return;\n      }\n    } catch (error) {\n      api.logger.warn('CheckVideoUpload', 'Failed', error);\n    } finally {\n      yield delay(2000);\n    }\n  }\n  throw new Error('Upload video to S3 failed');\n}\n\nfunction* deleteIncident() {\n  try {\n    const incident: Incident = yield select(makeSelectNewTipIncident());\n    if (incident) {\n      yield call(api.incidents.deleteIncident, incident.id);\n    }\n    yield put(deleteIncidentSuccess());\n    yield put(hideCancelIncidentModal());\n    yield put(removeScreenAction());\n  } catch (error: any) {\n    api.logger.warn('Delete incident', 'Failed', error);\n    yield put(deleteIncidentFailure(handleError(error)));\n  }\n}\n\nfunction* getUserOrganizations() {\n  try {\n    const response: AxiosResponse<Organization[]> = yield call(\n      api.organizations.getUserOrganizations,\n    );\n    yield put(getUserOrganizationsSuccess(response.data));\n  } catch (error: any) {\n    if (error.response.data.code === 'user_no_belong_organization') {\n      yield* triggerOnboardForInactiveUser();\n    }\n    api.logger.warn('Get user organizations', 'Failed', error);\n    yield put(getUserOrganizationsFailure(handleError(error)));\n  }\n}\n\nfunction* createTipWithChat() {\n  try {\n    yield call(createIncident);\n    yield put(getIntersectOrganizationsRequest());\n    yield put(createTipWithChatSuccess());\n  } catch (error: any) {\n    yield put(createTipWithChatFailure(handleError(error)));\n  }\n}\n\nfunction* getLastActiveTipOrganization({\n  payload,\n}: GetLastActiveTipOrganizationRequestAction) {\n  try {\n    const organizationResponse: AxiosResponse<Organization> = yield call(\n      api.organizations.getOrganization,\n      payload,\n    );\n    yield put(getLastTipOrganizationSuccess(organizationResponse.data));\n  } catch (error: any) {\n    yield put(getLastTipOrganizationFailure(handleError(error)));\n  }\n}\n\nexport default function* newTipScreenSaga() {\n  yield takeLatest(CREATE_INCIDENT_REQUEST, createIncident);\n  yield takeLatest(UPLOAD_VIDEO_REQUEST, uploadVideo);\n  yield takeLatest(DELETE_INCIDENT_REQUEST, deleteIncident);\n  yield takeLatest(GET_USER_ORGANIZATIONS_REQUEST, getUserOrganizations);\n  yield takeLatest(CREATE_TIP_WITH_CHAT_REQUEST, createTipWithChat);\n  yield takeLatest(\n    GET_LAST_ACTIVE_TIP_ORGANIZATION_REQUEST,\n    getLastActiveTipOrganization,\n  );\n}\n"],"mappings":"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","ignoreList":[]}