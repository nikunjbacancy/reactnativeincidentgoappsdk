{"version":3,"names":["GET_INTERSECT_ORGANIZATIONS_FAILURE","GET_INTERSECT_ORGANIZATIONS_REQUEST","GET_INTERSECT_ORGANIZATIONS_SUCCESS","SELECT_INCIDENT_ORGANIZATION_FAILURE","SELECT_INCIDENT_ORGANIZATION_REQUEST","SELECT_INCIDENT_ORGANIZATION_SUCCESS","TOGGLE_SELECT_ORGANIZATION","getIntersectOrganizationsRequest","type","getIntersectOrganizationsSuccess","organizations","payload","getIntersectOrganizationsFailure","error","toggleSelectOrganization","id","addSelectedOrganizationRequest","addSelectedOrganizationSuccess","organization","addSelectedOrganizationFailure"],"sources":["actions.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen actions\n *\n */\n\nimport { Id, OrganizationWithArea } from 'incident-code-core';\nimport { IntersectOrganizationSelection } from 'types';\n\nimport {\n  GET_INTERSECT_ORGANIZATIONS_FAILURE,\n  GET_INTERSECT_ORGANIZATIONS_REQUEST,\n  GET_INTERSECT_ORGANIZATIONS_SUCCESS,\n  SELECT_INCIDENT_ORGANIZATION_FAILURE,\n  SELECT_INCIDENT_ORGANIZATION_REQUEST,\n  SELECT_INCIDENT_ORGANIZATION_SUCCESS,\n  TOGGLE_SELECT_ORGANIZATION,\n} from './constants';\nimport { SelectOrganizationActionTypes } from './types';\n\nexport const getIntersectOrganizationsRequest = (): SelectOrganizationActionTypes => ({\n  type: GET_INTERSECT_ORGANIZATIONS_REQUEST,\n});\n\nexport const getIntersectOrganizationsSuccess = (\n  organizations: IntersectOrganizationSelection[],\n): SelectOrganizationActionTypes => ({\n  type: GET_INTERSECT_ORGANIZATIONS_SUCCESS,\n  payload: organizations,\n});\n\nexport const getIntersectOrganizationsFailure = (\n  error: Error,\n): SelectOrganizationActionTypes => ({\n  type: GET_INTERSECT_ORGANIZATIONS_FAILURE,\n  payload: error,\n  error: true,\n});\n\nexport const toggleSelectOrganization = (\n  id: Id,\n): SelectOrganizationActionTypes => ({\n  type: TOGGLE_SELECT_ORGANIZATION,\n  payload: id,\n});\n\nexport const addSelectedOrganizationRequest = (): SelectOrganizationActionTypes => ({\n  type: SELECT_INCIDENT_ORGANIZATION_REQUEST,\n});\n\nexport const addSelectedOrganizationSuccess = (\n  organization: OrganizationWithArea,\n): SelectOrganizationActionTypes => ({\n  type: SELECT_INCIDENT_ORGANIZATION_SUCCESS,\n  payload: organization,\n});\n\nexport const addSelectedOrganizationFailure = (\n  error: Error,\n): SelectOrganizationActionTypes => ({\n  type: SELECT_INCIDENT_ORGANIZATION_FAILURE,\n  payload: error,\n  error: true,\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAKA,SACEA,mCAAmC,EACnCC,mCAAmC,EACnCC,mCAAmC,EACnCC,oCAAoC,EACpCC,oCAAoC,EACpCC,oCAAoC,EACpCC,0BAA0B,QACrB,aAAa;AAGpB,OAAO,MAAMC,gCAAgC,GAAGA,CAAA,MAAsC;EACpFC,IAAI,EAAEP;AACR,CAAC,CAAC;AAEF,OAAO,MAAMQ,gCAAgC,GAC3CC,aAA+C,KACZ;EACnCF,IAAI,EAAEN,mCAAmC;EACzCS,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,gCAAgC,GAC3CC,KAAY,KACuB;EACnCL,IAAI,EAAER,mCAAmC;EACzCW,OAAO,EAAEE,KAAK;EACdA,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,OAAO,MAAMC,wBAAwB,GACnCC,EAAM,KAC6B;EACnCP,IAAI,EAAEF,0BAA0B;EAChCK,OAAO,EAAEI;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,8BAA8B,GAAGA,CAAA,MAAsC;EAClFR,IAAI,EAAEJ;AACR,CAAC,CAAC;AAEF,OAAO,MAAMa,8BAA8B,GACzCC,YAAkC,KACC;EACnCV,IAAI,EAAEH,oCAAoC;EAC1CM,OAAO,EAAEO;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,8BAA8B,GACzCN,KAAY,KACuB;EACnCL,IAAI,EAAEL,oCAAoC;EAC1CQ,OAAO,EAAEE,KAAK;EACdA,KAAK,EAAE;AACT,CAAC,CAAC","ignoreList":[]}