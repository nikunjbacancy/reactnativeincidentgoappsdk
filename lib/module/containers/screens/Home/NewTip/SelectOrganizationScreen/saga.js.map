{"version":3,"names":["api","makeSelectNewTipIncidentExpired","makeSelectNewTipIncidentLocation","Screens","call","put","select","takeLatest","handleError","NavigatorService","addSelectedOrganizationFailure","addSelectedOrganizationSuccess","getIntersectOrganizationsFailure","getIntersectOrganizationsSuccess","GET_INTERSECT_ORGANIZATIONS_REQUEST","SELECT_INCIDENT_ORGANIZATION_REQUEST","makeSelectSelectedOrganization","getIntersectOrganizations","location","response","organizations","findIntersectOrganizations","data","length","navigate","Home","NewTip","SelectCategory","SelectOrganization","error","addSelectedOrganization","selectedOrganization","incidentExpired","Error","organizationNotifyScreenSaga"],"sources":["saga.ts"],"sourcesContent":["/**\n *\n * SelectOrganizationScreen saga\n *\n */\n\nimport * as api from '../../../../../api';\nimport {\n  makeSelectNewTipIncidentExpired,\n  makeSelectNewTipIncidentLocation,\n} from '../../../../../containers/app/selectors';\nimport Screens from '../../../../../containers/providers/RoutesProvider/screens';\nimport { GeoPoint, OrganizationWithArea } from 'incident-code-core';\nimport { call, put, select, takeLatest } from 'redux-saga/effects';\nimport { handleError } from '../../../../../utils/error';\nimport NavigatorService from '../../../../../utils/navigation';\n\nimport {\n  addSelectedOrganizationFailure,\n  addSelectedOrganizationSuccess,\n  getIntersectOrganizationsFailure,\n  getIntersectOrganizationsSuccess,\n} from './actions';\nimport {\n  GET_INTERSECT_ORGANIZATIONS_REQUEST,\n  SELECT_INCIDENT_ORGANIZATION_REQUEST,\n} from './constants';\nimport { makeSelectSelectedOrganization } from './selectors';\n\nfunction* getIntersectOrganizations(): any {\n  try {\n    const location: GeoPoint = yield select(makeSelectNewTipIncidentLocation());\n    const response = yield call(\n      api.organizations.findIntersectOrganizations,\n      location,\n    );\n    yield put(getIntersectOrganizationsSuccess(response.data));\n    if (response.data.organizations.length === 1) {\n      yield put(addSelectedOrganizationSuccess(response.data.organizations[0]));\n      yield call(NavigatorService.navigate, Screens.Home.NewTip.SelectCategory);\n    } else {\n      yield call(\n        NavigatorService.navigate,\n        Screens.Home.NewTip.SelectOrganization,\n      );\n    }\n  } catch (error: any) {\n    yield put(getIntersectOrganizationsFailure(handleError(error)));\n  }\n}\n\nfunction* addSelectedOrganization() {\n  const selectedOrganization: OrganizationWithArea = yield select(\n    makeSelectSelectedOrganization(),\n  );\n  const incidentExpired: boolean = yield select(\n    makeSelectNewTipIncidentExpired(),\n  );\n  if (!incidentExpired) {\n    yield put(addSelectedOrganizationSuccess(selectedOrganization));\n    yield call(NavigatorService.navigate, Screens.Home.NewTip.SelectCategory);\n  } else {\n    yield put(addSelectedOrganizationFailure(new Error('Tip expired')));\n  }\n}\n\nexport default function* organizationNotifyScreenSaga() {\n  yield takeLatest(\n    GET_INTERSECT_ORGANIZATIONS_REQUEST,\n    getIntersectOrganizations,\n  );\n  yield takeLatest(\n    SELECT_INCIDENT_ORGANIZATION_REQUEST,\n    addSelectedOrganization,\n  );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,GAAG,MAAM,oBAAoB;AACzC,SACEC,+BAA+B,EAC/BC,gCAAgC,QAC3B,yCAAyC;AAChD,OAAOC,OAAO,MAAM,4DAA4D;AAEhF,SAASC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,oBAAoB;AAClE,SAASC,WAAW,QAAQ,4BAA4B;AACxD,OAAOC,gBAAgB,MAAM,iCAAiC;AAE9D,SACEC,8BAA8B,EAC9BC,8BAA8B,EAC9BC,gCAAgC,EAChCC,gCAAgC,QAC3B,WAAW;AAClB,SACEC,mCAAmC,EACnCC,oCAAoC,QAC/B,aAAa;AACpB,SAASC,8BAA8B,QAAQ,aAAa;AAE5D,UAAUC,yBAAyBA,CAAA,EAAQ;EACzC,IAAI;IACF,MAAMC,QAAkB,GAAG,MAAMZ,MAAM,CAACJ,gCAAgC,CAAC,CAAC,CAAC;IAC3E,MAAMiB,QAAQ,GAAG,MAAMf,IAAI,CACzBJ,GAAG,CAACoB,aAAa,CAACC,0BAA0B,EAC5CH,QACF,CAAC;IACD,MAAMb,GAAG,CAACQ,gCAAgC,CAACM,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1D,IAAIH,QAAQ,CAACG,IAAI,CAACF,aAAa,CAACG,MAAM,KAAK,CAAC,EAAE;MAC5C,MAAMlB,GAAG,CAACM,8BAA8B,CAACQ,QAAQ,CAACG,IAAI,CAACF,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;MACzE,MAAMhB,IAAI,CAACK,gBAAgB,CAACe,QAAQ,EAAErB,OAAO,CAACsB,IAAI,CAACC,MAAM,CAACC,cAAc,CAAC;IAC3E,CAAC,MAAM;MACL,MAAMvB,IAAI,CACRK,gBAAgB,CAACe,QAAQ,EACzBrB,OAAO,CAACsB,IAAI,CAACC,MAAM,CAACE,kBACtB,CAAC;IACH;EACF,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnB,MAAMxB,GAAG,CAACO,gCAAgC,CAACJ,WAAW,CAACqB,KAAK,CAAC,CAAC,CAAC;EACjE;AACF;AAEA,UAAUC,uBAAuBA,CAAA,EAAG;EAClC,MAAMC,oBAA0C,GAAG,MAAMzB,MAAM,CAC7DU,8BAA8B,CAAC,CACjC,CAAC;EACD,MAAMgB,eAAwB,GAAG,MAAM1B,MAAM,CAC3CL,+BAA+B,CAAC,CAClC,CAAC;EACD,IAAI,CAAC+B,eAAe,EAAE;IACpB,MAAM3B,GAAG,CAACM,8BAA8B,CAACoB,oBAAoB,CAAC,CAAC;IAC/D,MAAM3B,IAAI,CAACK,gBAAgB,CAACe,QAAQ,EAAErB,OAAO,CAACsB,IAAI,CAACC,MAAM,CAACC,cAAc,CAAC;EAC3E,CAAC,MAAM;IACL,MAAMtB,GAAG,CAACK,8BAA8B,CAAC,IAAIuB,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;EACrE;AACF;AAEA,eAAe,UAAUC,4BAA4BA,CAAA,EAAG;EACtD,MAAM3B,UAAU,CACdO,mCAAmC,EACnCG,yBACF,CAAC;EACD,MAAMV,UAAU,CACdQ,oCAAoC,EACpCe,uBACF,CAAC;AACH","ignoreList":[]}