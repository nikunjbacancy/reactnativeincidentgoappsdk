{"version":3,"names":["images","colors","PanicButton","ScreenActionTabButton","Call911Button","UpdateLocationData","SHOW_CANCEL_ESCORT_MODAL","triggerDuressRequest","React","useCallback","useEffect","useState","useIntl","Keyboard","TouchableHighlight","TouchableOpacity","Menu","MenuOption","MenuOptions","MenuTrigger","isAndroid","makeCall","useAction","useSelector","NavigatorService","styled","hideDuressInfoAction","showDuressInfoAction","messages","Screens","makeSelectScreenAction","makeSelectUser","useBackButton","BackHandler","BottomTabBar","props","_userDetails$organiza","formatMessage","isKeyboardShow","setIsKeyboardShow","subscriptions","addListener","forEach","s","_s$remove","remove","call","screenAction","renderScreenActionButton","type","createElement","CancelEscortScreenActionButton","onCancel","cancel","onPress","action","text","actionText","loading","disabled","ContinueScreenActionButton","setLocation","startDuressRequest","showDuressInfo","hideDuressInfo","userDetails","organizationUserConfig","organizationGroups","undefined","userConfig","isShowEscortTab","safetyTimer","liveSecurityEscort","timedChecklist","isPanicButtonShow","panicButton","triggerDuress","setShowDuressInfo","setTimeout","navigation","call911Fun","isFocused","exitApp","bottomBar","Container","DuressButtonContainer","DuressButton","onFill","isPanicMode","withIcon","MenuContainer","customStyles","triggerStyles","HamburgerMenu","source","icMenu","optionsStyles","onSelect","navigate","MyAccount","MenuOptionInner","MenuOptionText","myAccount","MenuOptionIcon","icFoward","Notification","notifications","Feedback","AddFeedback","feedbacks","Tips","MyTips","Index","mytips","ManageContact","ListContacts","contacts","CallEmergency","Fragment","triggerWrapper","alignItems","paddingTop","backgroundColor","nearWhite","TriggerTouchableComponent","optionsContainer","width","flexDirection","borderTopLeftRadius","optionWrapper","padding","margin","optionTouchable","activeOpacity","OptionTouchableComponent","View","theme","lightGrey","sdkBackgroundColor","attrs","textStyle","fontSize","alignSelf","color","fontWeight","Image","white","Text","dark","continueButtonTextStyle","textTransform","continueButtonStyle","highlight2","borderRadius"],"sources":["BottomTabBar.tsx"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport { images } from '../../../assets';\nimport colors from '../../../assets/colors';\nimport { PanicButton, ScreenActionTabButton, Call911Button } from '../../../components';\nimport { UpdateLocationData } from '../../../containers/app/actions';\nimport { SHOW_CANCEL_ESCORT_MODAL } from '../../../containers/screens/Home/Escort/RequestScreen/constants';\nimport { triggerDuressRequest } from '../../../containers/screens/Onboarding/WarningScreen/actions';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport {\n  Keyboard,\n  StyleProp,\n  TextStyle,\n  TouchableHighlight,\n  TouchableOpacity,\n  ViewStyle,\n  EmitterSubscription\n} from 'react-native';\nimport {\n  Menu,\n  MenuOption,\n  MenuOptionCustomStyle,\n  MenuOptions,\n  MenuTrigger,\n} from 'react-native-popup-menu';\nimport { isAndroid, makeCall } from '../../../utils/device';\nimport { useAction, useSelector } from '../../../utils/hooks';\nimport NavigatorService from '../../../utils/navigation';\nimport styled from '../../../utils/styled';\nimport { hideDuressInfoAction, showDuressInfoAction } from './actions';\nimport messages from './messages';\nimport Screens from './screens';\nimport { makeSelectScreenAction } from './selectors';\nimport { makeSelectUser } from '../../../containers/app/selectors';\nimport { useBackButton } from '../../../utils/hooks';\nimport { BackHandler } from 'react-native';\n\n\ninterface MenuTriggerStyleProps {\n  triggerOuterWrapper?: StyleProp<ViewStyle>;\n  triggerWrapper?: StyleProp<ViewStyle>;\n  triggerText?: StyleProp<TextStyle>;\n  TriggerTouchableComponent?: Function;\n  triggerTouchable?: {};\n}\n\ninterface MenuOptionsStyleProps extends MenuOptionCustomStyle {\n  optionsContainer?: StyleProp<ViewStyle>;\n  OptionTouchableComponent: typeof TouchableHighlight;\n}\n\n// interface TabButtonTextPropTypes {\n//   focused?: Boolean;\n// }\n\nconst BottomTabBar: FC<any> = props => {\n  const { formatMessage } = useIntl();\n  const [isKeyboardShow, setIsKeyboardShow] = useState(false);\n\n  useEffect(() => {\n    if (isAndroid) {\n      let subscriptions: EmitterSubscription[];\n      subscriptions = [\n        Keyboard.addListener(\n          'keyboardDidShow',\n          () => setIsKeyboardShow(true),\n        ),\n        Keyboard.addListener(\n          'keyboardDidHide',\n          () => setIsKeyboardShow(false),\n        )\n      ];\n\n      return () => {\n        subscriptions.forEach((s) => s?.remove?.());\n      }\n    }\n    else {\n      return () => { }\n    }\n\n  }, []);\n\n\n  const screenAction = useSelector(makeSelectScreenAction());\n  const renderScreenActionButton = () => {\n    if (!screenAction) return;\n    if (screenAction?.type === SHOW_CANCEL_ESCORT_MODAL) {\n      return (\n        <CancelEscortScreenActionButton\n          onCancel={screenAction.cancel}\n          onPress={screenAction.action}\n          text={screenAction.actionText}\n          loading={screenAction.loading}\n          disabled={screenAction.disabled}\n        />\n      );\n    }\n\n    return (\n      <ContinueScreenActionButton\n        onCancel={screenAction.cancel}\n        onPress={screenAction.action}\n        text={screenAction.actionText}\n        loading={screenAction.loading}\n        disabled={screenAction.disabled}\n      />\n    );\n  };\n\n  // const setUpBeaconOption = () => {\n  //   if (isAndroid) {\n  //     return (\n  //       <MenuOption onSelect={() =>\n  //         NavigatorService.navigate(Screens.Menu.Beacons)\n  //       }>\n  //         <MenuOptionInner>\n  //           <MenuOptionText>\n  //             {formatMessage(messages.beacons)}\n  //           </MenuOptionText>\n  //           <MenuOptionIcon source={images.icFoward()} />\n  //         </MenuOptionInner>\n  //       </MenuOption>\n  //     )\n  //   }\n  //   return null;\n  // }\n\n  const setLocation = useAction(UpdateLocationData);\n  const startDuressRequest = useAction(triggerDuressRequest);\n  const showDuressInfo = useAction(showDuressInfoAction);\n  const hideDuressInfo = useAction(hideDuressInfoAction);\n  // const shouleShouldDuressInfo = useSelector(makeSelectShowDuressInfo());\n  const userDetails = useSelector(makeSelectUser());\n  const organizationUserConfig = userDetails?.organizationGroups != undefined ? userDetails?.organizationGroups[0]?.userConfig : {};\n  const isShowEscortTab =\n    organizationUserConfig?.safetyTimer == false &&\n      organizationUserConfig?.liveSecurityEscort == false &&\n      organizationUserConfig?.timedChecklist == false\n      ? false\n      : true;\n  const isPanicButtonShow = organizationUserConfig?.panicButton\n  const triggerDuress = useCallback(() => {\n    startDuressRequest(setLocation);\n  }, [startDuressRequest, setLocation]);\n\n  const setShowDuressInfo = useCallback(() => {\n    showDuressInfo();\n    setTimeout(hideDuressInfo, 3500);\n  }, [hideDuressInfo, showDuressInfo]);\n\n  const { navigation } = props;\n\n  // const navigationHandler = (name: String) => {\n  //   navigation.navigate(name);\n  // };\n\n  const call911Fun = () => makeCall('911');\n\n  useBackButton(() => {\n    if (!isShowEscortTab && navigation.isFocused()) {\n      BackHandler.exitApp();\n    }\n    return true;\n  });\n\n  // const CustomTabBarItem = (route: Object, index: Number) => {\n  //   return (\n  //     <TabContainer onPress={() => navigationHandler(route.routeName)}>\n  //       <BottomTabBarIcon\n  //         focused={navigation.state.index === index}\n  //         source={\n  //           route.routeName === 'HomeNewTipVideoRecord'\n  //             ? images.icNewTip()\n  //             : images.icEscort()\n  //         }\n  //       />\n  //       <TabButtonText focused={navigation.state.index === index}>\n  //         {route.routeName === 'HomeNewTipVideoRecord' ? 'New Tip' : 'Escort'}\n  //       </TabButtonText>\n  //     </TabContainer>\n  //   );\n  // };\n\n  //bottom button\n  const bottomBar = () => {\n    // //(\"==================isPanicButtonShow==================>\", isPanicButtonShow)\n    if (isPanicButtonShow) {\n      return (<Container>\n        {/* <BottomBarContainer>\n          <TabViewContainer>\n            {\n              routes.map((route: Object, index: Number) => {\n              if (isShowEscortTab || route.routeName !== 'HomeEscortType') {\n                return CustomTabBarItem(route, index);\n              } else {\n                if (navigation.state.index === 0 && navigation.isFocused())\n                  navigation.navigate('HomeNewTipVideoRecord');\n              }\n              })\n            }\n          </TabViewContainer>\n        </BottomBarContainer> */}\n        <DuressButtonContainer>\n          <DuressButton\n            text={\"\"}\n            onFill={triggerDuress}\n            onPress={setShowDuressInfo}\n            isPanicMode={false}\n            withIcon\n          />\n        </DuressButtonContainer>\n        {!isKeyboardShow && (\n          <MenuContainer>\n            <MenuTrigger customStyles={triggerStyles}>\n              <HamburgerMenu source={images.icMenu()} />\n            </MenuTrigger>\n            <MenuOptions customStyles={optionsStyles}>\n\n              {/* {setUpBeaconOption()} */}\n\n              <MenuOption\n                onSelect={() =>\n                  NavigatorService.navigate(Screens.Menu.MyAccount)\n                }\n              >\n                <MenuOptionInner>\n                  <MenuOptionText>\n                    {formatMessage(messages.myAccount)}\n                  </MenuOptionText>\n                  <MenuOptionIcon source={images.icFoward()} />\n                </MenuOptionInner>\n              </MenuOption>\n              <MenuOption\n                onSelect={() =>\n                  NavigatorService.navigate(Screens.Menu.Notification)\n                }\n              >\n                <MenuOptionInner>\n                  <MenuOptionText>\n                    {formatMessage(messages.notifications)}\n                  </MenuOptionText>\n                  <MenuOptionIcon source={images.icFoward()} />\n                </MenuOptionInner>\n              </MenuOption>\n\n              <MenuOption\n                onSelect={() =>\n                  NavigatorService.navigate(Screens.Menu.Feedback.AddFeedback)\n                }\n              >\n                <MenuOptionInner>\n                  <MenuOptionText>\n                    {formatMessage(messages.feedbacks)}\n                  </MenuOptionText>\n                  <MenuOptionIcon source={images.icFoward()} />\n                </MenuOptionInner>\n              </MenuOption>\n              <MenuOption\n                onSelect={() =>\n                  NavigatorService.navigate(Screens.Menu.Tips.MyTips.Index)\n                }\n              >\n                <MenuOptionInner>\n                  <MenuOptionText>\n                    {formatMessage(messages.mytips)}\n                  </MenuOptionText>\n                  <MenuOptionIcon source={images.icFoward()} />\n                </MenuOptionInner>\n              </MenuOption>\n              <MenuOption\n                onSelect={() =>\n                  NavigatorService.navigate(\n                    Screens.Menu.ManageContact.ListContacts,\n                  )\n                }\n              >\n                <MenuOptionInner>\n                  <MenuOptionText>\n                    {formatMessage(messages.contacts)}\n                  </MenuOptionText>\n                  <MenuOptionIcon source={images.icFoward()} />\n                </MenuOptionInner>\n              </MenuOption>\n            </MenuOptions>\n          </MenuContainer>\n        )}\n      </Container>);\n    }\n    else {\n      return (\n        <Container>\n          <DuressButtonContainer>\n            <CallEmergency\n              text={\"Call 911\"}\n              onPress={() => call911Fun()}\n            />\n          </DuressButtonContainer>\n        </Container >\n      )\n    }\n  }\n\n  return (\n    <>\n      {/* <Container>{shouleShouldDuressInfo && <PressDuressInfo />}</Container> */}\n      {!screenAction ? (\n        // {isPanicButtonShow ? () : ()}\n        bottomBar()\n      ) : (\n        renderScreenActionButton()\n      )}\n    </>\n  );\n};\n\nconst triggerStyles: MenuTriggerStyleProps = {\n  triggerWrapper: {\n    alignItems: 'center',\n    paddingTop: 8,\n    backgroundColor: colors.nearWhite,\n  },\n  TriggerTouchableComponent: TouchableOpacity,\n};\n// const TabViewContainer = styled.View`\n//   flex-direction: row;\n//   width: 100%;\n// `;\n\n// const TabContainer = styled.TouchableOpacity`\n//   margin-top: 5px;\n//   flex: 1;\n//   height: 60px;\n//   padding-right: 3px;\n//   align-items: center;\n//   justify-content: center;\n//   background-color: ${colors.nearWhite};\n// `;\n\n// const TabButtonText = styled.Text<TabButtonTextPropTypes>`\n//   font-family: ${({ theme }) => theme.fonts.defaultBoldFamily};\n//   font-size: 15px;\n//   line-height: 28px;\n//   color: ${({ focused }) => (focused ? colors.blue : colors.black)};\n//   text-align: center;\n// `;\n\nconst optionsStyles: MenuOptionsStyleProps = {\n  optionsContainer: {\n    backgroundColor: colors.nearWhite,\n    width: 'auto',\n    flexDirection: 'row-reverse',\n    borderTopLeftRadius: 15,\n  },\n  optionWrapper: {\n    width: 270,\n    padding: 0,\n    margin: 0,\n  },\n  optionTouchable: {\n    activeOpacity: 70,\n  },\n  OptionTouchableComponent: TouchableHighlight,\n};\n\nconst Container = styled.View`\n  display: flex;\n  flex-direction: row;\n`;\n\n// const BottomBarContainer = styled.View`\n//   width: 50%;\n// `;\n\n// const PressDuressInfo = styled(PanicInfo)`\n//   bottom: 40%;\n// `;\n\nconst DuressButtonContainer = styled.View`\n  width: 100%;\n  border-top-color: ${({ theme }) => theme.colors.lightGrey};\n  border-top-width: 0.25px;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.sdkBackgroundColor};\n`;\n\nconst DuressButton = styled(PanicButton).attrs({\n  textStyle: {\n    fontSize: 18,\n    alignSelf: 'center',\n  }\n})`\n  margin: 5% auto;\n  width: 90%;\n  height: 60px;\n  flex-direction: row;\n  \n`;\n\nconst CallEmergency: any = styled(Call911Button).attrs({\n  textStyle: {\n    color: 'white',\n    fontSize: 22,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    // marginBottom: '8.5%'\n  },\n\n})`\n  margin: 5% auto;\n  width: 90%;\n  height: 60px;\n  flex-direction: row;\n`;\n\n// const StyledBottomTabBar = styled(NavBottomTabBar).attrs(({ theme }) => ({\n//   activeTintColor: theme.colors.highlight,\n//   inactiveTintColor: theme.colors.dark,\n//   labelStyle: {\n//     fontFamily: theme.fonts.defaultFamily,\n//   },\n//   tabStyle: {\n//     topPadding: 12,\n//   },\n// }))`\n//   background-color: ${({ theme }) => theme.colors.white};\n//   border-top-color: ${({ theme }) => theme.colors.lightGrey};\n//   height: 60px;\n// `;\n\nconst MenuContainer = styled(Menu)`\n  width: 25%;\n  display: flex;\n  align-items: stretch;\n  background-color: ${({ theme }) => theme.colors.nearWhite};\n  border-left-color: ${({ theme }) => theme.colors.lightGrey};\n`;\n\nconst HamburgerMenu = styled.Image`\n  width: 40px;\n  height: 40px;\n`;\n\nconst MenuOptionInner = styled.View`\n  flex: 1;\n  flex-direction: row;\n  align-items: center;\n  padding: 15px 20px;\n  border-bottom-width: 1px;\n  border-color: ${({ theme }) => theme.colors.white};\n`;\n\nconst MenuOptionText = styled.Text`\n  font-size: 16px;\n  color: ${({ theme }) => theme.colors.dark};\n`;\n\nconst MenuOptionIcon = styled.Image`\n  margin-left: auto;\n`;\n\nconst ContinueScreenActionButton = styled(ScreenActionTabButton).attrs(\n  ({ theme }) => ({\n    continueButtonTextStyle: {\n      color: theme.colors.dark,\n      textTransform: 'uppercase',\n    },\n  }),\n)``;\n\nconst CancelEscortScreenActionButton = styled(ScreenActionTabButton).attrs(\n  ({ theme }) => ({\n    continueButtonStyle: {\n      backgroundColor: theme.colors.highlight2,\n      borderRadius: 6,\n    },\n    continueButtonTextStyle: {\n      color: theme.colors.white,\n    },\n  }),\n)`\n  margin: 20px 30px 35px;\n`;\n\nexport default BottomTabBar;\n"],"mappings":"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","ignoreList":[]}